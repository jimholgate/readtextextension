<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TTS_Indices" script:language="StarBasic">REM  *****  BASIC  *****
OPTION EXPLICIT
global UpdatePoSettingsDone as integer 

global mMyTranslationId(0) as variant 
global mMyTranslationIdPlur(0) as variant 
global mMyTranslationStr(0,0) as variant 
&apos;&apos;
&apos;&apos; Language editing
&apos;&apos; ================
&apos;&apos;  
&apos;&apos;  - [PoEdit][1] is an open source language string editor for Linux, OSX, and
&apos;&apos;    Windows.
&apos;&apos;  - [Virtaal][2] is another one.
&apos;&apos;  
&apos;&apos;  The format of **PO** translation files is described in the [PO Files Manual][3].
&apos;&apos;  Having separate language files is best practice because it makes translating
&apos;&apos;  easier and forces programs to have a single reliable method of getting text.
&apos;&apos;  GetText is available in [Python][4] as a library. The [Invent with Python][5]
&apos;&apos;  blog has a set of instructions.
&apos;&apos;  
&apos;&apos;  In [StarBasic][6], there is a script that does basic interpretation of PO files.
&apos;&apos;  
&apos;&apos;  The wording of dialogues and menu items of LibreOffice and Apache OpenOffice
&apos;&apos;  include a few differences, which reflect different program features or simply
&apos;&apos;  different writing styles.  If you notice a difference in your language, you
&apos;&apos;  should, if possible, use wording that works for either program.
&apos;&apos;  
&apos;&apos;  Program help is available online on a [wiki][7] that reflects the menus
&apos;&apos;  and dialogues of a recent version of the program.  As well, a comprehensive file
&apos;&apos;  that includes translations of phrases for all supported languages is maintained
&apos;&apos;  at the [download site][8].
&apos;&apos;  
&apos;&apos;  The `zzy` language is used internally in the code of the extension.  For
&apos;&apos;  example, the phrase for &quot;&quot;English&quot;&quot; is `en`, and the code for &quot;&quot;Traditional
&apos;&apos;  Chinese&quot;&quot; is `zh-tw`.
&apos;&apos;  
&apos;&apos; What other files include language strings?
&apos;&apos; ------------------------------------------
&apos;&apos;  
&apos;&apos; ### Dialog
&apos;&apos;  
&apos;&apos;  ```
&apos;&apos;  /textToSpeech/Dialog1.xdl
&apos;&apos;  ```
&apos;&apos;  
&apos;&apos;  ComboBox3 of Dialog1 contains two letter strings of the ISO codes
&apos;&apos;  for currently supported languages.
&apos;&apos;  
&apos;&apos; ### Description files
&apos;&apos;  
&apos;&apos;  
&apos;&apos;      /description/component.*
&apos;&apos;      /description.xml
&apos;&apos;  
&apos;&apos;  
&apos;&apos; ### Help files
&apos;&apos;  
&apos;&apos;  
&apos;&apos;      /help/*/help.tree
&apos;&apos;      /help/*/[$unique.id]/install.xhp
&apos;&apos;      /help/*/[$unique.id]/online.xhp
&apos;&apos;      /help/*/[$unique.id]/read_clipboard.xhp
&apos;&apos;      /help/*/[$unique.id]/read_selection.xhp
&apos;&apos;      /help/*/[$unique.id]/set_up.xhp
&apos;&apos;      /help/*/[$unique.id]/tokens.xhp
&apos;&apos;  
&apos;&apos;  
&apos;&apos; ### Registry files
&apos;&apos;  
&apos;&apos;  
&apos;&apos;      /registration/LICENSE.*
&apos;&apos;      /registry/data/org/openoffice/Office/Addons.xcu
&apos;&apos;  
&apos;&apos;  
&apos;&apos; ### Scripts
&apos;&apos;  
&apos;&apos;  
&apos;&apos;      /script/tts_wscript.vbs
&apos;&apos;  
&apos;&apos;  
&apos;&apos;  [1]: http://poedit.net/
&apos;&apos;  [2]: http://virtaal.translatehouse.org/download.html
&apos;&apos;  [3]: https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html
&apos;&apos;  [4]: https://docs.python.org/2/library/gettext.html
&apos;&apos;  [5]: http://inventwithpython.com/blog/2014/12/20/translate-your-python-3-program-with-the-gettext-module/
&apos;&apos;  [6]: http://www.oooforum.org/forum/viewtopic.phtml?t=85441
&apos;&apos;  [7]: https://help.libreoffice.org/Writer/Edit#Select_Text
&apos;&apos;  [8]: http://download.documentfoundation.org/libreoffice/src/4.4.2/libreoffice-translations-4.4.2.2.tar.xz
&apos;&apos;  

Function fsLookUpTerm(_
		optional byVal sTermCode, _
		optional byval sMyLang, _
		optional byval bReverse)
	&apos;
	&apos;
	&apos; Returns an indexed term from `zzy` style string (i. e.: `s_ok`).
	&apos; If the `sTermCode` is in not the index, then the procedure
	&apos; returns the original first argument.
	&apos;
	&apos; + sTermCode - the code to look up
	&apos; + sMyLang - your requested language as two letter iso code (optional)
	&apos;   i. e.: en for English, es for Spanish
	&apos;
	&apos; Example: Get the language of the selected text:
	&apos; 
	&apos;     fsLookUpTerm(fsSelectionLanguage())
	&apos; 
	&apos; Example: Get the language of the user interface:
	&apos;
	&apos; 
	&apos;     fsLookUpTerm(fsGetLanguage())
	&apos; 
	&apos;
	&apos;  ### Note ###
	&apos;
	&apos; Pierre Chef&apos;s PO lookup code stores the current
	&apos; interface language resources in global variables.  To update
	&apos; the language on the fly, you need to set the 
	&apos; `UpdatePoSettingsDone` global variable to -1.
	&apos;
	fsLookUpTerm=&quot;&quot;
	if ismissing(sTermCode) then sTermCode = &quot;s_cancel&quot;
	if ismissing(sMyLang) then sMyLang = fsGetLanguage()
	if ismissing(bReverse) then bReverse = false
	dim s2$ : s2 = fsZzxToEnglish(_
			sTermCode, _
			&quot;en&quot;) &apos; Machine to English
	fsLookUpTerm = _(s2, &quot;tools&quot;, sMyLang)
end function


Function _(_
		msgid, _
		optional byval sDirPo, _
		optional byval sMyLang, _
		optional byval iAlt)
	_ = &quot;&quot;
	&apos; msgid = string input
	&apos; sDirPo = subdirectory path in local mo folder
	&apos; sMyLang = language to match with English
	&apos; iAlt = if false, then converts from English
	&apos; and if true, then converts to English

&apos;&apos; PO language function
&apos;&apos; ====================
&apos;&apos;  
&apos;&apos;  This extension uses external **PO** files to index the
&apos;&apos;  text in the dialogues to various languages.
&apos;&apos;  
&apos;&apos;  English text is used as the index string.  Therefore, English 
&apos;&apos;  capitalization and spacing must be consistent for language
&apos;&apos;  translation to work.
&apos;&apos;
&apos;&apos;  The function&apos;s name is a single underscore character `_(s1)`
&apos;&apos;  
&apos;&apos;  + [Virtaal][1] - Simple and responsive PO editor.
&apos;&apos;  + [Poedit][2] - PO Editor with features.  On Linux, you
&apos;&apos;    can use other program&apos;s language resources as models
&apos;&apos;    and use installed dictionaries to check spelling.
&apos;&apos;  
&apos;&apos; Code
&apos;&apos; ----
&apos;&apos;  
&apos;&apos;  
&apos;&apos;      sub poExample
&apos;&apos;          REM Default language lookup
&apos;&apos;          msgbox _(&quot;Cancel&quot;)
&apos;&apos;          REM With specific arguments
&apos;&apos;          REM You must reset UpdatePoSettingsDone before changing languages.
&apos;&apos;          UpdatePoSettingsDone = -1
&apos;&apos;          msgbox _(&quot;Read with an external program&quot;, &quot;tools&quot;, &quot;fr&quot;)
&apos;&apos;          REM Setting the optional fourth parameter to 1 
&apos;&apos;          REM does a reverse translation to English.
&apos;&apos;          msgbox _(&quot;Le script du Festival&quot;, &quot;tools&quot;, &quot;fr&quot;, 1)
&apos;&apos;          REM You must reset UpdatePoSettingsDone before changing languages.
&apos;&apos;          UpdatePoSettingsDone = -1
&apos;&apos;          msgbox _(&quot;s_cancel&quot;, &quot;tools&quot;, &quot;zzy&quot;, 1)
&apos;&apos;      end sub
&apos;&apos;  
&apos;&apos;  
&apos;&apos;  
&apos;&apos;  
&apos;&apos;    [1]: http://sourceforge.net/projects/translate/files/Virtaal/
&apos;&apos;    [2]: http://poedit.net/
&apos;&apos;  
	dim i as integer
	dim iMax as integer
	dim trad as string
	
	if ismissing(sDirPo) or sDirPo = &quot;&quot; then
		sDirPo = &quot;tools&quot;
	endif
	If ismissing(sMyLang) or sMyLang = &quot;&quot; Then
		sMyLang = fsDisplayLanguage()
	Endif
	if ismissing(iAlt) then iAlt = -1
	if msgid = &quot;&quot; then
		exit function
	endif
	dim sMyPoFile : sMyPoFile = &quot;&quot;
	sMyPoFile = convertfromurl(_
			fsMyURL &amp; _
			&quot;/po/&quot; &amp; _
			sDirPo &amp; _
			&quot;/&quot; &amp; _
			sMyLang)
	if UpdatePoSettingsDone &lt;&gt; 1 then UpdatePoSettings(sMyPoFile, sMyLang)
	if iAlt = 1 then
		&apos; Reverse translation
		for i = 0 to ubound(mMyTranslationStr)
			if mMyTranslationStr(i,0)=msgid then 
				 trad=mMyTranslationId(i)
				Exit For 
			end if 
		next i
		if trad=&quot;&quot; then trad=msgid
	elseif iAlt = 0 then
		&apos; Always return a blank for each term
		trad=&quot;&quot;	
	else
		&apos; Normal translation (default)
		for i = 0 to ubound(mMyTranslationId)
			if mMyTranslationId(i)=msgid then 
				 trad=mMyTranslationStr(i,0) 
				Exit For 
			elseif mMyTranslationIdPlur(i)=msgid then 
				trad=mMyTranslationStr(i,1) 
				Exit For 
			end if 
		next i
		if trad=&quot;&quot; then trad=msgid
	endif
	&apos; Convert escaped quotes and remove unescaped quotes.
	trad = fsReplaceText(trad, &quot;\&quot;&quot;&quot;, &quot;\&amp;dblquot;&quot;
	trad = fsReplaceText(trad, &quot;&quot;&quot;&quot;, &quot;&quot;)
	trad = fsReplaceText(trad, &quot;\&amp;dblquot;&quot;, &quot;&quot;&quot;&quot;)
	_=trad 
end Function 


Function fbTranslateTable(_
		message, _
		cntMsg, _
		sMyTranslationType, _
		nbPlural)
	dim a1
	fbTranslateTable = false
	on error goto fbTranslateTableErr
	if message=&quot;&quot; then exit Function 
	if sMyTranslationType=&quot;id&quot; then 
		a1=mMyTranslationId(cntMsg)+message
		mMyTranslationId(cntMsg) = a1
	elseif sMyTranslationType=&quot;idPlur&quot; then 
		a1=mMyTranslationIdPlur(cntMsg)+message 
		mMyTranslationIdPlur(cntMsg) = a1
	elseif sMyTranslationType=&quot;str&quot; then 
		a1 = mMyTranslationStr(cntMsg,nbPlural)+message
		mMyTranslationStr(cntMsg,nbPlural) = a1 
	endif
	fbTranslateTable = true
	exit function
	fbTranslateTableErr:
	fbTranslateTable = false
end Function


Function UpdatePoSettings(_
		podir as string, _
		optional byval isoCode)
	&apos; Adaptation du code écrit par « [Pierre Chef][UpdatePoSettings1] »
	&apos; en juin, 2009. 
	&apos;
	&apos; + Ajouté une option pour le directoire `podir`
	&apos; + Ajouté une option pour les langues `isoCode`.
	&apos; + Avec les fichiers encodé en UTF-8, vous pouvez utiliser
	&apos;   les langues complexes et asiatiques sur le platforme
	&apos;   Windows. (`myTextFile.Encoding=&quot;UTF-8&quot;`)
	&apos; + On ferme le fichier explicitement à la fin. 
	&apos;   (`myTextFile.closeInput`)
	&apos;
	&apos; [UpdatePoSettings1]: http://www.oooforum.org/forum/viewtopic.phtml?t=85441
	&apos;
	UpdatePoSettings = false
	on error goto UpdatePoSettingsErr
	Dim lenLineRead# : lenLineRead = 0  &apos; &apos;length of line read
	Dim cntMsg# : cntMsg = 0  &apos; &apos;message counter
	Dim nbPlural# : nbPlural = 0  &apos; &apos;current plural
	Dim nbPluralMax# : nbPluralMax = 0  &apos; &apos;how many plurals
	Dim position# : position = 0  &apos; &apos;position in a string
	Dim idquo# : idquo= 0  &apos; &apos;1 after first quotation mark
	Dim iNumber# : iNumber = 0  &apos;for file access

	Dim lineRead$ : lineRead = &quot;&quot;  &apos;line read in the po file
	Dim TranslationType$ : TranslationType = &quot;&quot;  &apos;are we on msgctxt, msgid, msgid_plural, msgstr ?
	Dim message$ : message = &quot;&quot;  &apos;string of msgid or msgstr
	if ismissing(isoCode) or isoCode = &quot;&quot; then isoCode = fsDisplayLanguage()  &apos;fr, en, es, it, de, ...
	Dim sFilePath$ : sFilePath = &quot;&quot;
	Dim sf as Object
	Dim myTextFile as Object
	Dim fileStream as Object
	
	sf = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	&apos; check for existance of PO directory and file
	if sf.isFolder(podir) then
		if right(podir,1)&lt;&gt;&quot;/&quot; then podir=podir + &quot;/&quot;

		sFilePath=podir + isoCode + &quot;.po&quot;
		if sf.exists(sFilePath) then
			&apos; Prepare to read the file
			fileStream=sf.openFileRead(sFilePath)
			myTextFile=createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
			myTextFile.InputStream=fileStream
			&apos; Office settings files are encoded as UTF-8
			myTextFile.Encoding=&quot;UTF-8&quot;
		else
			exit Function
		endif
	else
		exit Function
	endif

	cntMsg=-1
	nbPluralMax=0
	Do While Not myTextFile.IsEOF
		lineRead = myTextFile.readLine
		lenLineRead=len(lineRead)
		idquo = InStr(lineRead,&quot;&quot;&quot;&quot;)+1
		if lenLineRead&gt;2 then
			Select Case left(lineRead,1)
			Case &quot;#&quot;:
				&apos; comment
			Case &quot;m&quot;:
			if left(lineRead,5) = &quot;msgid&quot; then
				if left(lineRead,12) = &quot;msgid_plural&quot; then
					if nbPluralMax&gt;0 then
						TranslationType=&quot;idPlur&quot;
					else
						TranslationType=&quot;err&quot;  &apos; error
					endif
				else
					TranslationType=&quot;id&quot;
					cntMsg=cntMsg+1
					redim Preserve mMyTranslationId(cntMsg)
					redim Preserve mMyTranslationIdPlur(cntMsg)
					redim Preserve mMyTranslationStr(cntMsg,nbPluralMax)
				endif
				message=mid(lineRead,idquo,lenLineRead-idquo)
			elseif left(lineRead,6) = &quot;msgstr&quot; then
				TranslationType=&quot;str&quot;
				if left(lineRead,7) = &quot;msgstr[&quot; then
					nbPlural=int(mid(lineRead,8,1))
					if nbPlural&gt;nbPluralMax then
						TranslationType=&quot;err&quot; &apos; error
					endif
				else
					nbPlural=0
				endif
				message=mid(lineRead,idquo,lenLineRead-idquo)
			elseif left(lineRead,7) = &quot;msgctxt&quot; then
				TranslationType=&quot;ctxt&quot;
			endif
			fbTranslateTable(message,cntMsg,TranslationType,nbPlural)
		Case &quot;&quot;&quot;&quot;:
			&apos;idquo=1 obviously
			message = mid(lineRead,idquo,lenLineRead-idquo)
			fbTranslateTable(message,cntMsg,TranslationType,nbPlural)
			if cntMsg=0 and left(lineRead,14) = &quot;&quot;&quot;Plural-Forms:&quot; then
				position=InStr(lineRead,&quot;nplurals=&quot;)
				nbPluralMax=int(mid(lineRead,position+9,1))-1
				if nbPluralMax&lt;0 then nbPluralMax=0
				&apos; Potential bugs : procedure can only use a single digit 
				&apos; number of plurals (max is Arabic with 6)
				&apos; if &quot;\n&quot; in readLine set the plural rule
				&apos; or else you need to get next line(s) until you get &quot;\n&quot;
				&apos;
				&apos; The PO file must end with a chr(10)
				&apos;
				redim Preserve mMyTranslationStr(cntMsg,nbPluralMax)
			endif
			&apos; if cntMsg=0 and TranslationType=&quot;pluralset&quot; then
			&apos;   &apos;update the plural rule then send it
			&apos; if no &quot;\n&quot; TranslationType=&quot;pluralset&quot; else TranslationType=&quot;&quot;
			&apos;endif
		Case Else
			&apos;error in the po file
			End Select
		endif
	Loop
	fileStream.closeInput
	myTextFile.closeInput
	UpdatePoSettingsDone=1
	UpdatePoSettings = true
	exit function
	UpdatePoSettingsErr:
	UpdatePoSettings = false
end Function


Function fsZzxToEnglish(_
		byVal sTermCode, _
		optional byval sMyLang)
	&apos; returns an indexed term or &quot;&quot; If Not in index
	&apos; sTermCode - the code to look up
	&apos; sMyLang - your requested language code (optional)
	&apos; defaults to &quot;en&quot;.  Optionally, you can get the
	&apos; internal code with &quot;zzy&quot;
	&apos;
	fsZzxToEnglish=&quot;&quot;
	&apos; zzy
	Dim isoList0$ : isoList0 = &quot;s_read-text;s_external-program;s_use-festival-with-a-script;s_script-commands;s_read-with-an-external-program;s_command-line-options;s_display;s_always-show-this-dialog;s_about;s_cancel;s_ok;s_command;s_script;s_c-james-holgate;s_test;s_could-not-locate-the-program;s_string-cannot-be-analyzed;s_on-line-help;s_http-help-url;s_use-a-web-application;s_speech-properties;s_system-settings;&quot;
	Dim isoList1$ : isoList1 = &quot;s_touch-screen;s_speech-synthesis;en;af;bg;ca;cs;da;de;el;es;fr;et;fi;ga;hi;hu;id;is;it;ja;ko;lv;lt;mt;nl;pl;pt;ro;ru;sk;sl;sv;tl;tr;uk;zh;ar&quot;
	Dim isolist2$ : isolist2= &quot;;s_album;s_artist;s_genre;s_imagedefault;s_lyrics;s_title;s_track;s_year;s_mdsample&quot;	
	&apos; defaults
	Dim s0$ : s0 = &quot;Read Text;External program;Use Festival with a script;Script commands;Read with an external program;Command line options;Display;Always show this dialog;About;Cancel;OK;Command;Script;© 2008-2015 James Holgate;Test;Could not locate the program.;String cannot be analyzed!;On-line help;https://sites.google.com/site/readtextextension/;Use a web application;Speech properties;System settings;&quot;
	Dim s1$ : s1 = &quot;Touch screen;Speech;English;Afrikaans;Bulgarian;Catalan;Czech;Danish;German;Greek;Spanish;French;Estonian;Finnish;Irish;Hindi;Hungarian;Indonesian;Icelandic;Italian;Japanese;Korean;Latvian;Lithuanian;Maltese;Dutch;Polish;Portuguese;Romanian;Russian;Slovak;Slovenian;Swedish;Tagalog;Turkish;Ukrainian;Chinese;Arabic&quot;
	Dim s2$ : s2 = &quot;;Album;Artist;Genre;Image;Lyrics;Title;Track;Year;Read Text – Speech\n=========\n\n&gt;_Open a document and select some text. Choose “Tools – Add-ons – Impress-View” to run the show._\n\nImpress – View (Present selection)\n--------------\n\n- Open a document and select some text.\n- Choose “Tools – Add-ons – Impress-View” to run the show.\n\n`© 2015 James Holgate.  [cc by 4.0](http://creativecommons.ca/licenses)`&quot;
	&apos; arrays
	Dim a1
	Dim a2
	&apos; controls
	Dim n# : n = 0
	Dim bFound as boolean : bFound = not(true)

	If ismissing(sMyLang) Then
		sMyLang = &quot;en&quot;
	Endif
&apos;	on error goto fsZzxToEnglishErr

	Select Case lcase(sMyLang)
	Case &quot;zzy&quot; &apos;Machine language
		s0 = isolist0
		s1 = isoList1
		s2 = isolist2
	Case Else
		&apos; pass - use default English values
	End Select
	if sTermCode = &quot;s_all_items&quot; then
		&apos; Get a semicolon separated list of all valid tags
		fsLookUpTerm = s0 &amp; s1 &amp; s2
	else
		a1 = split(isolist0 &amp; isoList1 &amp; isolist2,&quot;;&quot;)
		For n = Lbound(a1) to Ubound(a1)
			if a1(n) = sTermCode Then
				bFound = true
				Exit For
			Endif
		next
		if bFound Then
			a2 = split(s0 &amp; s1 &amp; s2, &quot;;&quot;)
			fsZzxToEnglish = a2(n)
		Else
			fsZzxToEnglish = &quot;&quot;
		Endif
	endif
	Exit Function
	fsZzxToEnglishErr:
	&apos; Count the semicolons in the data strings for the new language.
	&apos; It should should match the corresponding isoList
	fsZzxToEnglish = &quot;%fsZzxToEnglishErr%&quot;
End Function


function fsSampleMd(optional byval hl)

	&apos; Markdown sample code that creates presentations with heading
	&apos; levels, block quotes and preformatted text.

	dim cr$ : cr = chr(10)
	dim s1$ : s1 = &quot;&quot;
	dim s2$ : s2 = &quot;&quot;
	dim s3$ : s3 = &quot;&quot;
	
	if ismissing(hl) then
		hl = fsSelectionLanguage()
	endif
	select case hl
	case &quot;ar&quot;
		&apos; Excerpt of a Wikipedia article about [Apache OpenOffice][1] accessed 2015-04-09&quot;.
		&apos; [1]: https://ar.wikipedia.org/wiki/%D8%A3%D9%88%D8%A8%D9%86_%D8%A3%D9%88%D9%81%D9%8A%D8%B3.%D8%A3%D9%88%D8%B1%D8%AC 
		&apos; Chr(8207) is the unicode rtl marker to switch the reading direction from left to right (LTR)
		&apos; to right to left (RTL).
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setComplexDocLanguage(&quot;ar-SA&quot;)
	case &quot;ca&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;ca-ES&quot;)		
	case &quot;de&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;de-DE&quot;)
	case &quot;es&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		s2 = fsDocCountry
		&apos; Use an approximate regional locale to enable speech
		select case s2
		case &quot;MX&quot;, &quot;AR&quot;
			setWesternDocLanguage(&quot;es-&quot; &amp; s2)
		case &quot;BZ&quot;, &quot;CA&quot;, &quot;CR&quot;, &quot;DO&quot;, &quot;SV&quot;, &quot;GT&quot;, &quot;NI&quot;, &quot;PA&quot;, &quot;PR&quot;, &quot;US&quot;
			setWesternDocLanguage(&quot;es-MX&quot;)
		case &quot;BO&quot;, &quot;BR&quot;, &quot;CL&quot;, &quot;CO&quot;, &quot;EC&quot;, &quot;FK&quot;, &quot;PE&quot;, &quot;PY&quot;, &quot;UY&quot;, &quot;VE&quot;
			setWesternDocLanguage(&quot;es-AR&quot;)
		case else
			setWesternDocLanguage(&quot;es-ES&quot;)
		end select
	case &quot;fi&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;fi-FI&quot;)
	case &quot;fr&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;fr-FR&quot;)
	case &quot;hi&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setComplexDocLanguage(&quot;hi-IN&quot;)
	case &quot;it&quot;
		s1 =fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;it-IT&quot;)
	case &quot;nl&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;nl-NL&quot;)
	case &quot;pl&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;pl-PL&quot;)
	case &quot;pt&quot;
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		s2 = fsGetCountry
		select case s2
		case &quot;PT&quot;
			setWesternDocLanguage(&quot;pt-PT&quot;)
		case else
			setWesternDocLanguage(&quot;pt-BR&quot;)
		end select
	case &quot;ru&quot;
		s1 =fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setWesternDocLanguage(&quot;ru-RU&quot;)
	case &quot;zh&quot;
		&apos; 工具 – 函数 is &quot;Tools – Functions&quot;. Is &quot;Functions&quot; a correct
		&apos; translation of &quot;Add-ons&quot;?
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		setAsianDocLanguage(&quot;zh-CN&quot;)
	case else
		&apos; English is the reference language.
		&apos; Model the text of your translation on English.
		&apos; Use &quot;Read Text&quot; as the initial title.
		&apos; Use a style that resembles [LibreOffice help][1].
		&apos;   - [Select Text][2]
		&apos;   - [Showing a Slide Show][3]
		&apos; The [LibreOffice translations] include lists of menu items for all supported languages[4]
		&apos; [1]: https://help.libreoffice.org/
		&apos; [2]: https://help.libreoffice.org/Writer/Edit#Select_Text
		&apos; [3]: https://help.libreoffice.org/Impress/Showing_a_Slide_Show
		&apos; [4]: http://download.documentfoundation.org/libreoffice/src/4.4.2/libreoffice-translations-4.4.2.2.tar.xz
		s1 = fsLookUpTerm(&quot;s_mdsample&quot;, hl)
		s2 = fsGetCountry
		select case s2
		case &quot;GB&quot;
			setWesternDocLanguage(&quot;en-GB&quot;)
		case else
			setWesternDocLanguage(&quot;en-US&quot;)
		end select
	end select
	fsSampleMd = fxStr(s1)
end function


Sub ErrorDisplay
	&apos; Error message
	 Msgbox(fsLookUpTerm(&quot;s_string-cannot-be-analyzed&quot;), 48, _
			fsLookUpTerm(&quot;s_read-text&quot;))
End Sub


Function fsAppSignature As String
	&apos; Helper scripts and office app package settings use the signature to find resources
	fsAppSignature=&quot;ca.bc.vancouver.holgate.james.readtextextension&quot;
End Function


Function fsMyURL As String
	fsMyURL=fsGetPackageDirURL(fsAppSignature)
End Function


function fsMyTempLock(optional byval sExt)
	Dim sTemp, sDiv, sUser As String

	if isMissing(sExt) Then
		sExt = &quot;lock&quot;
	Endif
	sUser = Environ(&quot;USER&quot;)
	if sUser = &quot;&quot; Then
		sUser = Environ(&quot;USERNAME&quot;)
	Endif
	if sUser = &quot;&quot; Then
		sUser = &quot;UNKNOWN-USER&quot;
	Endif
	sTemp=Environ(&quot;TEMP&quot;)
   	If sTemp = &quot;&quot; Then
    	sTemp=Environ(&quot;TMP&quot;)
    Endif
   	If sTemp = &quot;&quot; Then
    	sTemp=Environ(&quot;TMPDIR&quot;)
    Endif
   	If sTemp = &quot;&quot; Then
    	if fileExists(&quot;/tmp/&quot;) Then
    		sTemp = &quot;/tmp/&quot;
    	Endif
    Endif
   	If sTemp = &quot;&quot; Then
    	sTemp=Environ(&quot;HOME&quot;)
    Endif
    if instr(&quot;/\&quot;,right(sTemp, 1)) = 0 Then
    	sDiv = &quot;/&quot;
    Else
    	sDiv = &quot;&quot;
    Endif
    fsMyTempLock = ConvertFromURL(converttourl(sTemp) &amp; _
    		sDiv &amp; fsAppSignature &amp;&quot;.&quot; &amp; sUser &amp; &quot;.&quot; &amp; sExt )
end function


Function fsExtensionVersion As String
	Dim aFile As String
	Dim iNumber As Integer
	Dim sLine As String
	Dim s1 As String
	Dim s2 As String

	s1=fsMyURL &amp; &quot;/description.xml&quot;
	s2=&quot;&quot;
	aFile=ConvertFromURL(s1)
	iNumber=Freefile
	Open aFile For Input As #iNumber
	While (s2=&quot;&quot;) And (Not Eof(iNumber))
		Line Input #iNumber, sLine
		If Instr(sLine, &quot;&lt;version value=&quot;) &gt; 0 Then
			s2=sLine
		Endif
	Wend
	Close #iNumber
	s2=Mid(sLine,Instr(s2,&quot;&quot;&quot;&quot;)+1)
	fsExtensionVersion=Left(s2, Instr(s2,&quot;&quot;&quot;&quot;)-1)
End Function


Function fsPosterImg As String
	&apos; returns a url to the image to use for creating album cover for sound files.
	&apos; It looks first in the `home/yourname/languagename` folder for a file called
	&apos; poster-nnn.xxx, where nnn is the three digit representation of the current
	&apos; track number and xxx is one of &quot;.png&quot; or &quot;jpg&quot; . If it doesn’t
	&apos; find a usable image, the function looks for poster-001.xxx. If Nothing
	&apos; was located, it uses an image in the images directory of the extension.
	&apos; Note - country abbreviations are usually capitalized - ES for Spain
	&apos; Language abbreviations are usually lower case. - es for Spanish
	dim s1, s2, s3  As String
	dim a1, a2
	dim n, o As Integer
	
	s1 = fsSelectionLanguageAndRegion &amp; &quot;,&quot; &amp; fsSelectionLanguage &amp; &quot;,&quot; &amp; fsSelectionCountry
	s2 = &quot;&quot;
	s3 = converttourl(fsGetHomeDir)
		a1 = split(s1, &quot;,&quot;)
		a2 = split(&quot;.jpg,.png&quot;, &quot;,&quot;)
		For o = Lbound(a2) to Ubound(a2)
			fsPosterImg=fsMyURL &amp; &quot;/images/poster-001&quot; &amp; a2(o)
			For n = Lbound(a1) to Ubound(a1)

				if false Then
					&apos;pass
				Elseif fileexists(s3 &amp; _
						a1(n) &amp; _
						&quot;/poster-&quot; &amp; _
						right(&quot;000&quot; &amp; _
						trim(str(fiMyCurrentAudioTrack(false))), 3) &amp; _
						a2(o) ) Then
					s2 = s3 &amp; _
							a1(n) &amp; _
							&quot;/poster-&quot; &amp; _
							right(&quot;000&quot; &amp; _
							trim(str(fiMyCurrentAudioTrack(false))), 3) + a2(o)
				Elseif fileexists(s3 &amp; a1(n) &amp; &quot;/poster-001&quot; &amp; a2(o)) Then
					s2 = s3 &amp; a1(n) &amp; &quot;/poster-001&quot; &amp; + a2(o)
				Elseif fileexists(fsMyURL &amp; &quot;/images/poster-&quot; &amp; a1(n) &amp; a2(o)) Then
					s2 = fsMyURL &amp; &quot;/images/poster-&quot; &amp; a1(n) &amp; a2(o)
				Endif
				if Len(s2) &gt; 0 Then
					fsPosterImg = s2
					Exit For
				Endif
			next
		next
	fsPosterImg = convertfromurl(fsPosterImg)
End Function

Function fsPoster2Png As String
	fsPoster2Png=fsMyURL &amp; &quot;/images/poster-002.png&quot;
End Function


Function fsExtensionTitle As String
	fsExtensionTitle = fsLookUpTerm( &quot;s_read-text&quot;, fsDisplayLanguage())
End Function


Function fsExtensionLogo As String
	fsExtensionLogo = fsMyURL &amp; &quot;/images/textToSpeech_64.png&quot;
End Function


Function fsSpeakerLogo As String
	fsSpeakerLogo=fsMyURL &amp; &quot;/images/testSound_26.png&quot;
End Function


Function fsClipBoardLogo As String
	fsClipboardLogo=fsMyURL &amp; &quot;/images/clipboard_26h.png&quot;
End Function


Function fsSelectionLogo As String
	fsSelectionLogo=fsMyURL &amp; &quot;/images/textToSpeech_26h.png&quot;
End Function


Function fsToolBoxLogo As String
	fsToolBoxLogo=fsMyURL &amp; &quot;/images/toolbox_26.png&quot;
End Function


Function fsLicenseDoc As String
	Dim s1 As String

	s1=fsMyURL &amp; &quot;/license/LICENSE&quot;
	If fileExists(s1 &amp; &quot;.&quot; &amp; fsDisplayLanguage()) Then
		fsLicenseDoc=s1 &amp; &quot;.&quot; &amp; fsDisplayLanguage()
	Elseif fileExists(s1 &amp; &quot;.&quot; &amp; fsGetLanguage()) Then
		fsLicenseDoc=s1 &amp; &quot;.&quot; &amp; fsGetLanguage()
	Else
		fsLicenseDoc=s1
	Endif
End Function


Function fsPythonSpdDoc As String
	fsPythonSpdDoc=fsMyURL &amp; &quot;/python/spd_read_text_file.py&quot;
End Function


Function fsPythonPicoDoc As String
	fsPythonPicoDoc=fsMyURL &amp; &quot;/python/pico_read_text_file.py&quot;
End Function


Function fsPythonEspeakDoc As String
	fsPythonEspeakDoc=fsMyURL &amp; &quot;/python/espeak_read_text_file.py&quot;
End Function


Function fsPythonFestivalDoc As String
	fsPythonFestivalDoc=fsMyURL &amp; &quot;/python/festival_read_text_file.py&quot;
End Function


Function fsPythonPyttsxDoc As String
	fsPythonPyttsxDoc=fsMyURL &amp; &quot;/python/pyttsx_read_text_file.py&quot;
End Function


Function fsPythonOSDoc As String
	fsPythonOSDoc=fsMyURL &amp; &quot;/python/os.py&quot;
End Function


Function fsPythonCreateQR As String
	fsPythonCreateQR=fsMyURL &amp; &quot;/python/create_qr_label.py&quot;
End Function


Function fsDescriptionDoc As String
	Dim s1 As String

	s1=fsMyURL &amp; &quot;/description/component.txt&quot;
	If fileExists(s1 &amp; &quot;.&quot; &amp; fsDisplayLanguage()) Then
		fsDescriptionDoc=s1 &amp; &quot;.&quot; &amp; fsDisplayLanguage()
	Elseif fileExists(s1 &amp; &quot;.&quot; &amp; fsGetLanguage()) Then
		fsDescriptionDoc=s1 &amp; &quot;.&quot; &amp; fsGetLanguage()
	Else
		fsDescriptionDoc=s1
	Endif
End Function


Function fsCopyright As String
	fsCopyright=fsLookUpTerm( &quot;s_c-james-holgate&quot;, fsDisplayLanguage())
End Function


Function fsFestivalScriptName As String
	fsFestivalScriptName=&quot;tts_scr.sh&quot;
End Function


Function fsTTSScriptVBS As String
	fsTTSScriptVBS=fsMyURL &amp; &quot;/script/tts_wscript.vbs&quot;
End Function


Function fsTemporaryTextDoc As String
	fsTemporaryTextDoc=&quot;tts_str.txt&quot;
End Function


Function fsExtensionSettingsIni As String
	fsExtensionSettingsIni=&quot;ooo_text-to-speech.ini&quot;
End Function


Function fiFestivalOption As Integer
	fiFestivalOption=0
End Function


Function fiFestivalPath As Integer
	fiFestivalPath=1
End Function


Function fiFestivalComboChoice As Integer
	fiFestivalComboChoice=2
End Function


Function fiExternalOption As Integer
	fiExternalOption=3
End Function


Function fiExternalProgramPath As Integer
	fiExternalProgramPath=4
End Function


Function fiExternalCommand As Integer
	fiExternalCommand=5
End Function


Function fiAlwaysShowDialogCheckBox As Integer
	fiAlwaysShowDialogCheckBox=6
End Function


Function fiDialogLanguageCombo As Integer
	fiDialogLanguageCombo=7
End Function


Function fiHtmlOption As Integer
	fiHtmlOption=8
End Function


Function fiSmartSelectCheckBox As Integer
	fiSmartSelectCheckBox=9
End Function


Function fiHtmlComboURL As Integer
	fiHtmlComboURL=10
End Function


Function fiCountConfigOptions As Integer
	&apos; This is the size of the array to hold settings from the configuration file
	&apos; and dialog
	fiCountConfigOptions=fiHtmlComboURL
	&apos; this is the last TTS_OPTION item above - an Integer
End Function

&apos; Configuration file  uses these strings As keys


Function fsKeyUSE_FESTIVAL_BOOLEAN  As String
	fsKeyUSE_FESTIVAL_BOOLEAN=&quot;text-To-speech.use.festival.boolean&quot;
End Function


Function fsKeyFESTIVAL_PATH_STRING As String
	fsKeyFESTIVAL_PATH_STRING=&quot;text-To-speech.festival.path.String&quot;
End Function


Function fsKeyFESTIVAL_SCRIPT_STRING As String
	fsKeyFESTIVAL_SCRIPT_STRING=&quot;text-To-speech.festival.script.String&quot;
End Function


Function fsKeyUSE_ESPEAK_BOOLEAN As String
	fsKeyUSE_ESPEAK_BOOLEAN=&quot;text-To-speech.use.espeak.boolean&quot;
End Function


Function fsKeyESPEAK_PATH_STRING As String
	fsKeyESPEAK_PATH_STRING=&quot;text-To-speech.espeak.path.String&quot;
End Function


Function fsKeyESPEAK_COMMANDS_STRING As String
	fsKeyESPEAK_COMMANDS_STRING=&quot;text-To-speech.espeak.options.String&quot;
End Function


Function fsKeyDISPLAY_INFO_INTEGER As String
	fsKeyDISPLAY_INFO_INTEGER=&quot;text-To-speech.display.info.Integer&quot;
End Function


Function fsKeyDISPLAY_LANGUAGE_STRING As String
	fsKeyDISPLAY_LANGUAGE_STRING=&quot;text-To-speech.display.language.String&quot;
End Function


Function fsKeyUSE_HTML_BOOLEAN As String
	fsKeyUSE_HTML_BOOLEAN=&quot;text-To-speech.use.html.boolean&quot;
End Function


Function fsKeyHTML_STRING As String
	fsKeyHTML_STRING=&quot;text-To-speech.html.String&quot;
End Function


Function fsKeyUSE_SMART_SELECT As String
	fsKeyUSE_SMART_SELECT=&quot;text-To-speech.use.smart.select.integer&quot;
End Function


Function fsGetCountry() As String
	fsGetCountry=fsGetSetting(&quot;country&quot;)
End Function


Function fsGetLanguage() As String
	fsGetLanguage=fsGetSetting(&quot;language&quot;)
End Function


Function fsGetOS() As String
	Select Case getGUIType
	Case 1
		fsGetOS=&quot;WINDOWS&quot;
	Case 3
		fsGetOS=&quot;MAC&quot;
	Case 4
		if fileexists(&quot;/usr/bin/osascript&quot;) Then
			fsGetOS=&quot;OSX&quot;
		Elseif Len(Environ(&quot;ANDROID_ROOT&quot;)) &gt; 0 then
			fsGetOS = &quot;ANDROID&quot;
		Else
			fsGetOS=&quot;UNIX&quot;
		Endif
	Case Else
		if Len(Environ(&quot;ANDROID_ROOT&quot;)) &gt; 0 then
			fsGetOS = &quot;ANDROID&quot;
		Else 
			fsGetOS=&quot;UNKNOWN&quot;
		Endif
	End Select
End Function


Function fsGetSetting(sA) As String
	Dim oProdNameAccess As Object

	If Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) Then
		GlobalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	Endif
	oProdNameAccess=GetRegistryKeyContent(&quot;org.openoffice.Setup/Product&quot;)
    Select Case Lcase(sA)
    Case &quot;language&quot;
		fsGetSetting=GetStarOfficeLocale().language
	Case &quot;country&quot;
		fsGetSetting=GetStarOfficeLocale().country
	Case &quot;ooname&quot;
		fsGetSetting=oProdNameAccess.getByName(&quot;ooName&quot;)
	Case &quot;ooversion&quot;,&quot;oosetupversion&quot;
		fsGetSetting=oProdNameAccess.getByName(&quot;ooSetupVersion&quot;)
	Case Else
		fsGetSetting=&quot;???&quot;
	End Select
End Function


Function fsDisplayLanguage As String
	On Error Goto DISPLAYLANGUAGEERROR
	dim s1$: s1 =  f_dlgSpeechSetup.GetControl(&quot;ComboBox3&quot;).Model.Text

	Select Case trim(s1)
	Case &quot;&quot;, &quot;...&quot;, &quot;…&quot;, &quot;Default&quot;, &quot;default&quot;
		fsDisplayLanguage = fsGetLanguage()
	Case Else
		fsDisplayLanguage = s1
	End Select
	Exit Function
	DISPLAYLANGUAGEERROR:
	fsDisplayLanguage=fsGetLanguage()
End Function


Function fsDocLanguage()
	on error goto fsDocLanguageErr
	fsDocLanguage = ThisComponent.CharLocale.Language
	Exit Function
	fsDocLanguageErr: &apos; No document open! Use interface language.
	fsDocLanguage = fsGetLanguage()
End Function

Function fsDocCountry
	on error goto fsDocCountryErr
	fsDocCountry = ThisComponent.CharLocale.Country
	Exit Function
	fsDocCountryErr: &apos; No document open! Use interface country.
	fsDocCountry = fsGetCountry()
End Function

Function fsMediaPlayer(i As Integer) As String
	Dim aA
	Dim sA As String

	sA = &quot;/usr/bin/bangarang,/usr/bin/exail,/usr/bin/ffpla,/usr/bin/gmplayer,&quot;
	sA = sA &amp; &quot;/usr/bin/gnome-open,/usr/bin/kaffeine,/usr/bin/kde-open,&quot;
	sA = sA &amp; &quot;/usr/bin/kplayer,/usr/bin/mpg123,/usr/bin/mpg321,&quot;
	sA = sA &amp; &quot;/usr/bin/mplayer,/usr/bin/noatun,/usr/bin/parole,&quot;
	sA = sA &amp; &quot;/usr/bin/sensible-browser,/usr/bin/totem,/usr/bin/xdg-open,&quot;
	sA = sA &amp; &quot;/usr/bin/xfmedia,/usr/bin/xine,/usr/bin/xmms,audacity,chrome,&quot;
	sA = sA &amp; &quot;chromium,firefox,iceweasel,iexplore,opera,quicktimeplayer.exe,&quot;
	sA = sA &amp; &quot;vlc,winamp,wmplayer,,&quot;
	aA = split(sA, &quot;,&quot;)
    fsMediaPlayer= aA(i)
End Function


Function fiCountMediaPlayers As Integer
	dim n As Integer

	For n = 0 to 40
		if fsMediaPlayer(n) = &quot;&quot; Then
			Exit For
		Else
			fiCountMediaPlayers=n
		Endif
	next
End Function


Function fsSubStringToRight(byval x,byval y)
	dim a1
	dim z As String

	z = x
	if instr(x,y) Then
		a1 = split(x,y)
		z = a1(Ubound(a1))
	Endif
	fsSubStringToRight = z
End Function


Function fsFestivalVoice(n)
	Dim x As String

	x=converttourl(fsFestivalDirectory(n))
	fsFestivalVoice = fsSubStringToRight(x,&quot;/&quot;)
End Function


Function fsFestivalDirectory(n) As String
	Dim s1, s2 As String
	Dim a1

	&apos; List of voices retrieved 2011-03-25 from
	&apos; http://www.cstr.ed.ac.uk/projects/festival/manual/festival_24.html
	&apos; Incorrectly installed voices will be silent. Some instructions on
	&apos; the web for installing mbrola voices need to be updated to work
	&apos; with the latest version of Festival.
	Select Case fsGetOS()
	Case &quot;WINDOWS&quot;
		If fileExists(fsProgramDirectoryx86() &amp; &quot;Festival&quot;) Then
			s2 = converttourl(fsProgramDirectoryx86 &amp; &quot;Festival\voices\&quot;)
		Else
			s2 = converttourl(fsProgramDirectory &amp; &quot;Festival\voices\&quot;)
		Endif
	Case Else
		s2 =  converttourl(&quot;/usr/share/festival/&quot;)
	End Select
	s1 = s2 &amp; &quot;lib/voices/english/en1_mbrola,&quot; &amp; _
		s2 &amp; &quot;lib/voices/english/us1_mbrola,&quot; &amp; _
		s2 &amp; &quot;lib/voices/english/us2_mbrola,&quot; &amp; _
		s2 &amp; &quot;lib/voices/english/us3_mbrola,&quot; &amp; _
		s2 &amp; &quot;voices/castilian/el_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/catalan/upc_ca_ona_hts,&quot; &amp; _
		s2 &amp; &quot;voices/czech/czech_dita,&quot; &amp; _
		s2 &amp; &quot;voices/czech/czech_krb&quot;  &amp; &quot;,&quot; &amp; _
		s2 &amp; &quot;voices/czech/czech_machac,&quot; &amp; _
		s2 &amp; &quot;voices/czech/czech_ph,&quot; &amp; _
		s2 &amp; &quot;voices/english/don_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/english/en1_mbrola,&quot; &amp; _
		s2 &amp; &quot;voices/english/gsw_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/english/kal_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/english/ked_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/english/rab_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/english/us1_mbrola,&quot; &amp; _
		s2 &amp; &quot;voices/english/us2_mbrola,&quot; &amp; _
		s2 &amp; &quot;voices/english/us3_mbrola,&quot; &amp; _
		s2 &amp; &quot;voices/finnish/suo_fi_lj_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/finnish/suo_fi_mv_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/german/german_de2_os,&quot; &amp; _
		s2 &amp; &quot;voices/hindi/hindi_NSK_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/italian/lp_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/italian/pc_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/marathi/marathi_NSK_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/russian/msu_ru_nsh_clunits,&quot; &amp; _
		s2 &amp; &quot;voices/spanish/el_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/telugu/telugu_NSK_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/vietnamese/wow_vi_liz_diphone,&quot; &amp; _
		s2 &amp; &quot;voices/vietnamese/wow_vi_ptn_diphone,&quot; &amp; _
		&quot;,,,,&quot;
	a1 = split(s1,&quot;,&quot;)
	fsFestivalDirectory=convertfromurl(a1(n))
End Function


Function fiCountFestivalDirectory As Integer
	dim n As Integer

	For n = 0 to 40
		if fsFestivalDirectory(n) = &quot;&quot; Then
			Exit For
		Else
			fiCountFestivalDirectory=n
		Endif
	next
End Function


Function fsGetEspeakMbrolaLanguage(i As Integer, j As Integer) As String
	&apos;Values for j
	&apos;1 is mbrola voice file name
	&apos;2 is language and country code
	&apos; See http://www.loc.gov/standards/iso639-2/php/English_list.php
	&apos; and http://www.iso.org/iso/english_country_names_and_code_elements
	&apos;3 is gender
	&apos;4 is name of voice in English
	Dim s(fiCountEspeakMbrolaLanguage(), 4)

	s(0,1)=&quot;vz1&quot;
	s(0,2)=&quot;es-VE&quot;
	s(0,3)=&quot;male&quot;
	s(0,4)=&quot;Venezuelan Spanish 1&quot;
	s(1,1)=&quot;us3&quot;
	s(1,2)=&quot;en-US&quot;
	s(1,3)=&quot;male&quot;
	s(1,4)=&quot;American English 3&quot;
	s(2,1)=&quot;us2&quot;
	s(2,2)=&quot;en-US&quot;
	s(2,3)=&quot;male&quot;
	s(2,4)=&quot;American English 2&quot;
	s(3,1)=&quot;us1&quot;
	s(3,2)=&quot;en-US&quot;
	s(3,3)=&quot;female&quot;
	s(3,4)=&quot;American English 1&quot;
	s(4,1)=&quot;tr2&quot;
	s(4,2)=&quot;tr-TR&quot;
	s(4,3)=&quot;female&quot;
	s(4,4)=&quot;Turkish 2&quot;
	s(5,1)=&quot;tr1&quot;
	s(5,2)=&quot;tr-TR&quot;
	s(5,3)=&quot;male&quot;
	s(5,4)=&quot;Turkish 1&quot;
	s(6,1)=&quot;sw2&quot;
	s(6,2)=&quot;sv-SE&quot;
	s(6,3)=&quot;female&quot;
	s(6,4)=&quot;Swedish 2&quot;
	s(7,1)=&quot;sw1&quot;
	s(7,2)=&quot;sv-SE&quot;
	s(7,3)=&quot;male&quot;
	s(7,4)=&quot;Swedish 1&quot;
	s(8,1)=&quot;ro1&quot;
	s(8,2)=&quot;ro-RO&quot;
	s(8,3)=&quot;male&quot;
	s(8,4)=&quot;Romanian 1&quot;
	s(9,1)=&quot;pt1&quot;
	s(9,2)=&quot;pt-PT&quot;
	s(9,3)=&quot;female&quot;
	s(9,4)=&quot;European Portuguese 1&quot;
	s(10,1)=&quot;pl1&quot;
	s(10,2)=&quot;en-us&quot;
	s(10,3)=&quot;female&quot;
	s(10,4)=&quot;Polish 1&quot;
	s(11,1)=&quot;nl3&quot;
	s(11,2)=&quot;nl-NL&quot;
	s(11,3)=&quot;female&quot;
	s(11,4)=&quot;Dutch 3&quot;
	s(12,1)=&quot;nl2&quot;
	s(12,2)=&quot;nl-NL&quot;
	s(12,3)=&quot;male&quot;
	s(12,4)=&quot;Dutch 1&quot;
	s(13,1)=&quot;nl1&quot;
	s(13,2)=&quot;nl-NL&quot;
	s(13,3)=&quot;male&quot;
	s(13,4)=&quot;Dutch 2&quot;
	s(14,1)=&quot;mx2&quot;
	s(14,2)=&quot;es-MX&quot;
	s(14,3)=&quot;male&quot;
	s(14,4)=&quot;Mexican Spanish 2&quot;
	s(15,1)=&quot;mx1&quot;
	s(15,2)=&quot;es-MX&quot;
	s(15,3)=&quot;male&quot;
	s(15,4)=&quot;Mexican Spanish 1&quot;
	s(16,1)=&quot;la1&quot;
	s(16,2)=&quot;la-IT&quot;
	s(16,3)=&quot;male&quot;
	s(16,4)=&quot;Classical Latin 1&quot;
	s(17,1)=&quot;it4&quot;
	s(17,2)=&quot;it-IT&quot;
	s(17,3)=&quot;female&quot;
	s(17,4)=&quot;Italian 4&quot;
	s(18,1)=&quot;it3&quot;
	s(18,2)=&quot;it-IT&quot;
	s(18,3)=&quot;male&quot;
	s(18,4)=&quot;Italian 3&quot;
	s(19,1)=&quot;it2&quot;
	s(19,2)=&quot;it-IT&quot;
	s(19,3)=&quot;female&quot;
	s(19,4)=&quot;Italian 2&quot;
	s(20,1)=&quot;it1&quot;
	s(20,2)=&quot;it-IT&quot;
	s(20,3)=&quot;male&quot;
	s(20,4)=&quot;Italian 1&quot;
	s(21,1)=&quot;in2&quot;
	s(21,2)=&quot;hi-IN&quot;
	s(21,3)=&quot;female&quot;
	s(21,4)=&quot;Hindi 2&quot;
	s(22,1)=&quot;in1&quot;
	s(22,2)=&quot;hi-IN&quot;
	s(22,3)=&quot;male&quot;
	s(22,4)=&quot;Hindi 1&quot;
	s(23,1)=&quot;id1&quot;
	s(23,2)=&quot;en-us&quot;
	s(23,3)=&quot;male&quot;
	s(23,4)=&quot;Indonesian 1&quot;
	s(24,1)=&quot;hu1&quot;
	s(24,2)=&quot;en-us&quot;
	s(24,3)=&quot;female&quot;
	s(24,4)=&quot;Hungarian 1&quot;
	s(25,1)=&quot;gr2&quot;
	s(25,2)=&quot;he-GR&quot;
	s(25,3)=&quot;male&quot;
	s(25,4)=&quot;Greek 2&quot;
	s(26,1)=&quot;gr1&quot;
	s(26,2)=&quot;he-GR&quot;
	s(26,3)=&quot;male&quot;
	s(26,4)=&quot;Greek 1&quot;
	s(27,1)=&quot;fr7&quot;
	s(27,2)=&quot;fr-FR&quot;
	s(27,3)=&quot;male&quot;
	s(27,4)=&quot;French 7&quot;
	s(28,1)=&quot;fr6&quot;
	s(28,2)=&quot;fr-FR&quot;
	s(28,3)=&quot;male&quot;
	s(28,4)=&quot;French 6&quot;
	s(29,1)=&quot;fr5&quot;
	s(29,2)=&quot;fr-FR&quot;
	s(29,3)=&quot;male&quot;
	s(29,4)=&quot;French 5&quot;
	s(30,1)=&quot;fr4&quot;
	s(30,2)=&quot;fr-FR&quot;
	s(30,3)=&quot;female&quot;
	s(30,4)=&quot;French 4&quot;
	s(31,1)=&quot;fr3&quot;
	s(31,2)=&quot;fr-FR&quot;
	s(31,3)=&quot;male&quot;
	s(31,4)=&quot;French 3&quot;
	s(32,1)=&quot;fr2&quot;
	s(32,2)=&quot;fr-FR&quot;
	s(32,3)=&quot;female&quot;
	s(32,4)=&quot;French 2&quot;
	s(33,1)=&quot;fr1&quot;
	s(33,2)=&quot;fr-FR&quot;
	s(33,3)=&quot;male&quot;
	s(33,4)=&quot;French 1&quot;
	s(34,1)=&quot;es4&quot;
	s(34,2)=&quot;es-ES&quot;
	s(34,3)=&quot;male&quot;
	s(34,4)=&quot;Spanish 4&quot;
	s(35,1)=&quot;es2&quot;
	s(35,2)=&quot;es-ES&quot;
	s(35,3)=&quot;male&quot;
	s(35,4)=&quot;Spanish 2&quot;
	s(36,1)=&quot;es1&quot;
	s(36,2)=&quot;es-ES&quot;
	s(36,3)=&quot;male&quot;
	s(36,4)=&quot;Spanish 1&quot;
	s(37,1)=&quot;en1&quot;
	s(37,2)=&quot;en-GB&quot;
	s(37,3)=&quot;male&quot;
	s(37,4)=&quot;British English 1&quot;
	s(38,1)=&quot;de8&quot;
	s(38,2)=&quot;de-DE&quot;
	s(38,3)=&quot;male&quot;
	s(38,4)=&quot;German 8&quot;
	s(39,1)=&quot;de7&quot;
	s(39,2)=&quot;de-DE&quot;
	s(39,3)=&quot;female&quot;
	s(39,4)=&quot;German 7&quot;
	s(40,1)=&quot;de6&quot;
	s(40,2)=&quot;de-DE&quot;
	s(40,3)=&quot;male&quot;
	s(40,4)=&quot;German 6&quot;
	s(41,1)=&quot;de5&quot;
	s(41,2)=&quot;de-DE&quot;
	s(41,3)=&quot;female&quot;
	s(41,4)=&quot;German 5&quot;
	s(42,1)=&quot;de4&quot;
	s(42,2)=&quot;de-DE&quot;
	s(42,3)=&quot;male&quot;
	s(42,4)=&quot;German 4&quot;
	s(43,1)=&quot;de3&quot;
	s(43,2)=&quot;de-DE&quot;
	s(43,3)=&quot;female&quot;
	s(43,4)=&quot;German 3&quot;
	s(44,1)=&quot;de2&quot;
	s(44,2)=&quot;de-DE&quot;
	s(44,3)=&quot;male&quot;
	s(44,4)=&quot;German 2&quot;
	s(45,1)=&quot;de1&quot;
	s(45,2)=&quot;de-DE&quot;
	s(45,3)=&quot;male&quot;
	s(45,4)=&quot;German-Bavarian 1&quot;
	s(46,1)=&quot;cz2&quot;
	s(46,2)=&quot;cs-CZ&quot;
	s(46,3)=&quot;male&quot;
	s(46,4)=&quot;Czech 2&quot;
	s(47,1)=&quot;cz1&quot;
	s(47,2)=&quot;cs-CZ&quot;
	s(47,3)=&quot;female&quot;
	s(47,4)=&quot;Czech 1&quot;
	s(48,1)=&quot;ca2&quot;
	s(48,2)=&quot;fr-CA&quot;
	s(48,3)=&quot;male&quot;
	s(48,4)=&quot;Canadian French 2&quot;
	s(49,1)=&quot;ca1&quot;
	s(49,2)=&quot;fr-CA&quot;
	s(49,3)=&quot;male&quot;
	s(49,4)=&quot;Canadian French 1&quot;
	s(50,1)=&quot;br4&quot;
	s(50,2)=&quot;pt-BR&quot;
	s(50,3)=&quot;male&quot;
	s(50,4)=&quot;Brazilian Portuguese 4&quot;
	s(51,1)=&quot;br3&quot;
	s(51,2)=&quot;pt-BR&quot;
	s(51,3)=&quot;male&quot;
	s(51,4)=&quot;Brazilian Portuguese 3&quot;
	s(52,1)=&quot;br1&quot;
	s(52,2)=&quot;pt-BR&quot;
	s(52,3)=&quot;male&quot;
	s(52,4)=&quot;Brazilian Portuguese 2&quot;
	s(53,1)=&quot;af1&quot;
	s(53,2)=&quot;af-ZA&quot;
	s(53,3)=&quot;male&quot;
	s(53,4)=&quot;Afrikaans 1&quot;
	fsGetEspeakMbrolaLanguage=s(i,j)
End Function


Function fiCountEspeakMbrolaLanguage
	fiCountEspeakMbrolaLanguage=53
End Function


Function fsDateMyRegion(optional i As Integer) As String
	Dim sL10N As String
	dim s1 as string
	
	if ismissing(i) then
		i = 1
	endif
	
	if i = 0 then
		&apos; Use language of doc
		s1 = fsDocLanguage()
	elseif i = 1 then
		&apos; Use language neutral notation YYYY-MM-DD
		s1 = &quot;zzy&quot;
	else
		&apos; Use language of UI
		s1 = fsGetLanguage()
	endif
	Select case s1
	Case &quot;es&quot;  &apos;el 1 de enero, 2009
		sL10N=&quot;el &quot; &amp; Format(Now,&quot;D&quot; ) &amp; &quot; de &quot; &amp; Format(Now,&quot;MMMM, YYYY&quot;)
	Case &quot;gl&quot;
		sL10N=Format(Now,&quot;D&quot; ) &amp; &quot; de &quot; &amp; Format(Now,&quot;MMMM, YYYY&quot;)
	Case &quot;fr&quot;  &apos;le 1 janvier, 2009
		sL10N=&quot;le &quot; &amp;  Format(Now,&quot;D MMMM, YYYY&quot;)
	Case &quot;hr&quot;,&quot;cs&quot;,&quot;da&quot;,&quot;hu&quot;
		sL10N=Format(Now,&quot;D, MMMM, YYYY&quot;)
	Case &quot;pt&quot;, &quot;ca&quot; &apos;01 de janeiro de 2009
		sL10N=Format(Now,&quot;DD&quot;) &amp; &quot; de &quot; &amp; Format(Now,&quot;MMMM&quot; ) &amp; _
				&quot; de &quot; &amp; Format(Now,&quot;YYYY&quot;)
	Case &quot;de&quot; &apos;der 1. Januar 2009
		sL10N=&quot;der &quot; &amp; Format(Now,&quot;D. MMMM YYYY&quot;)
	Case &quot;sv&quot;,&quot;sl&quot;,&quot;et&quot;
		sL10N=Format(Now,&quot;D. MMMM YYYY&quot;)
	Case &quot;tr&quot;
		sL10N=Format(Now,&quot;D.MMMM.YYYY&quot;)
	Case &quot;cy&quot;,&quot;ga&quot; &apos;
		sL10N=Format(Now,&quot;D MMMM, YYYY&quot;)
	Case &quot;mt&quot;,&quot;no&quot; &apos;
		sL10N=Format(Now,&quot;D, MMMM YYYY&quot;)
	Case &quot;zh&quot;,&quot;zh-CN&quot;,&quot;zh-TW&quot;,&quot;zh-HK&quot;,&quot;zh-MO&quot;,&quot;zh-SG&quot; &apos; 2009年10月25日 星期日
		sL10N=Year(NOW)  &amp; &quot;年&quot; &amp; Month(NOW)  &amp; &quot;月&quot; &amp; Day(NOW)  &amp; &quot;日&quot;
	Case &quot;ja&quot; &apos; 2011年2月6日
		sL10N=Year(NOW)  &amp; &quot;年&quot; &amp; Month(NOW)  &amp; &quot;月&quot; &amp; Day(NOW)  &amp; &quot;日&quot;
	Case &quot;ko&quot;  &apos;Korea
		sL10N=Year(NOW)  &amp; &quot;년&quot; &amp; Month(NOW)  &amp; &quot;월&quot; &amp; Day(NOW)  &amp; &quot;일&quot;
	Case &quot;en&quot;,&quot;lv&quot;,&quot;sk&quot;,&quot;uk&quot;,&quot;tl&quot; &apos;January 1, 2009
		sL10N=Format(Now,&quot;MMMM D, YYYY&quot;)
	Case Else 
		&apos; &quot;af&quot;,&quot;bg&quot;,&quot;el&quot;,&quot;it&quot;,&quot;hi&quot;,&quot;id&quot;,&quot;mk&quot;,&quot;nl&quot;,&quot;po&quot;,&quot;ro&quot;,&quot;ru&quot;,&quot;sl&quot;,&quot;th&quot;,&quot;tr
		sL10N=Year(NOW) &amp; &quot;-&quot; &amp;  right(&quot; 00&quot; &amp; Month(NOW), 2) &amp; &quot;-&quot; &amp; right(&quot; 00&quot; &amp; Day(NOW), 2) 
		&apos; Revised to international time 2011-02-06
	End Select
	fsDateMyRegion=sL10N
End Function


Function fsTimeMyRegion(optional i As Integer) As String
	Dim sL10N As String
	dim s1 as string
	
	if ismissing(i) then
		i = 1
	endif
	
	if i = 0 then
		&apos; Use language of doc
		s1 = fsDocLanguage()
	elseif i = 1 then
		&apos; Use language neutral notation 
		s1 = &quot;zzy&quot;
	else
		&apos; Use language of UI
		s1 = fsGetLanguage()
	endif

	Select Case s1()
	Case &quot;es&quot;  &apos;la 1 y 40 de la mañana; las 2 y 40 de la tarde
		If Hour(NOW)=0 Then
			sL10N=&quot;medionoche y &quot; &amp; Minute(NOW
		Elseif Hour(NOW)=1 Then
			sL10N=&quot;la &quot; &amp; Hour(NOW) &amp; &quot; y &quot; &amp; Minute(NOW) &amp; &quot;de la mañana&quot;
		Elseif Hour(NOW) &lt; 12 Then
			sL10N=&quot;las &quot; &amp; Hour(NOW) &amp; &quot; y &quot; &amp; Minute(NOW) &amp; &quot;de la mañana&quot;
		Elseif Hour(NOW)=12 Then
			sL10N=&quot;mediodia y &quot; &amp; Minute(NOW
		Elseif Hour(NOW)=13 Then
			sL10N=&quot;la &quot; &amp; Hour(NOW) Mod 12 &amp; &quot; y &quot; &amp; Minute(NOW) &amp; &quot;de la tarde&quot;
		Elseif Hour(NOW) &lt; 20 Then
			sL10N=&quot;las &quot; &amp; Hour(NOW) Mod 12 &amp; &quot; y &quot; &amp; Minute(NOW) &amp; &quot;de la tarde&quot;
		Else
			sL10N=&quot;las &quot; &amp; Hour(NOW) Mod 12 &amp; &quot; y &quot; &amp; Minute(NOW) &amp; &quot;de la noche&quot;
		Endif
	Case &quot;fr&quot;
		If Hour(NOW)=1 Then
			sL10N=&quot; &quot; &amp; Hour(NOW) &amp; &quot; heure &quot; &amp; Minute(NOW)
		Else
			sL10N=&quot; &quot; &amp; Hour(NOW) &amp; &quot; heures &quot; &amp; Minute(NOW)
		Endif
	Case &quot;en&quot; &apos;1:40 AM ; 2:40 PM (One forty A M; Two forty P M)
		sL10N=Format(Now,&quot;h:mm AM/PM&quot;)
	Case Else &apos;1:40 ; 14:4
		sL10N=Format(Now,&quot;h:mm&quot;)
	End Select
	fsTimeMyRegion=ltrim(rtrim(sL10N))
End Function


Function fsWeekDayMyRegion() As String
    fsWeekDayMyRegion=ltrim(rtrim(Format(Now,&quot;NNNN&quot;)))
End Function


Function fsUserName
    fsUserName=environ(&quot;USERNAME&quot;)
    if fsUserName=&quot;&quot; Then
    	fsUserName=environ(&quot;USER&quot;)
    Endif
End Function


function fsGetHomeDir()
	&apos; Work directory also known As My Documents or home
	&apos; We look up the home directory. If it was deleted,
	&apos; we try to recreate it. Returns blank if we fail.
	dim s1 , cr As String
	dim n As Integer
	dim a1

	cr = chr(10)
	fsGetHomeDir = &quot;&quot;
	s1 = ConvertFromURL(fsPathSettings(&quot;Work&quot;) &amp; &quot;/&quot;)
	if fileExists(s1) Then
		fsGetHomeDir = s1
	Else
		s1 = ConvertFromURL(fsPathSettings(&quot;Work&quot;) &amp; &quot;/&quot;) &amp; cr
		s1 = s1 &amp; Environ(&quot;pwd&quot;) &amp; &quot;/&quot; &amp; cr
		s1 = s1 &amp; Environ(&quot;HOMEPATH&quot;) &amp; &quot;\&quot; &amp; cr
		s1 = s1 &amp; Environ(&quot;HOME&quot;) &amp; &quot;/&quot; &amp; cr
		a1 = split(s1, cr)
		For n = Lbound(a1) to Ubound(a1)
		if Len(a1(n)) &gt; 0 Then
        	if fbCreateFile(a1(n) &amp; &quot;log.txt&quot;, fsGetSetting(&quot;ooname&quot;) &amp;_
        			&quot; - &quot; &amp; fsFileTime(), &quot;utf-8&quot;) Then
				kill a1(n) &amp; &quot;log.txt&quot;
				fsGetHomeDir = a1(n)
				Exit For
			Endif
		Endif
        next
	Endif
end function


sub debugFsLookUpTerm
    &apos; Check for missing language strings.  With po language files, you
    &apos; might have a partial fill of language strings.  For example,
    &apos; Korean has the main dialog strings, but not any strings
    &apos; relating to adding tags to m4a exports.
    dim s1 As String
	UpdatePoSettingsDone = -1
    s1 = Inputbox(&quot;Enter the code to look up&quot;,&quot;Debug&quot;, &quot;s_mdsample&quot;)
	msgBox fxStr(fsLookupterm(s1, _
	Inputbox(&quot;Enter your language code&quot;, _
			&quot;Debug&quot;, fsDisplayLanguage())) &amp; _
			&quot;\n\nshould be the string for &quot; &amp; _
			s1 &amp; _
			&quot; in your language.&quot;)
end sub

</script:module>
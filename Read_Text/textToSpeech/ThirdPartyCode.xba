<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ThirdPartyCode" script:language="StarBasic">REM *  *  *  *  * BASIC *  *  *  *  *
&apos; ThirdPartyCode
Option Explicit
&apos;&apos; # Third Party Code
&apos;&apos;
&apos;&apos; Code shown here is used or adapted from other sources with permission.
&apos;&apos;
&apos; Unless otherwise attributed, the functions and subs below are adapted
&apos; from Extended PDF 1.4 (c) 2006 [Martin Brown](martin.brown@3bview.com)
&apos; and are distributed under the GNU General Public License
&apos;

Function fbTts_util_stringToBoolean( _
	value As String) As Boolean
	&apos; Converts a String to a boolean value.
	&apos; True=&gt; &quot;True&quot;
	&apos; False=&gt; &quot;False&quot;
	Dim b As Boolean : b = False
	Dim v As String : v = Lcase(Trim(value))
	If StrComp(v,&quot;true&quot;, 0) = 0 _
		Or StrComp(v,&quot;yes&quot;, 0) = 0 _
		Or StrComp(v,&quot;1&quot;, 0) = 0 _
		Or val(v) &lt;&gt; 0 Then
		b = True
	End If
	fbTts_util_stringToBoolean = b
End Function


Function fsTts_util_booleanToString(value As Boolean) As String
    &apos; Converts a Boolean value to a String.
    fsTts_util_booleanToString = IIf(value, &quot;True&quot;, &quot;False&quot;)
End Function


Function fsFullPathOf( _
	filename As String) As String
	&apos;This macro sets a complete path for the user directory for the temporary file
	
	fsFullPathOf = createUnoService(&quot;com.sun.star.util.PathSettings&quot;).userConfig &amp; _
	&quot;/&quot; &amp; _
	filename
End Function


Function fsGetHomePyVer(home As String) As String
	fsGetHomePyVer = &quot;&quot;
	Dim sub_dirs As String : sub_dirs = fsSubDirectories(home)
	Dim x As Integer : x = 0
	Dim a1 As Variant : a1 = split(sub_dirs, Chr(13))
	For x = Lbound(a1) to Ubound(a1)
		If a1(x) &lt;&gt; &quot;Current&quot; Then
			fsGetHomePyVer = a1(x)
			Exit Function
		End If
	Next
End Function


Function fsMacPythonVersion()
	fsMacPythonVersion = &quot;&quot;
	If fsGetOs() &lt;&gt; &quot;MACOS&quot; Then
		Exit Function
	End If
	Dim home As String : home = &quot;/Applications/LibreOffice.app/Contents/Frameworks/LibreOfficePython.framework/Versions&quot;
	fsMacPythonVersion = fsGetHomePyVer(home)
End Function


Function fsLinux64PythonLib() As String
	&apos; Find location of the fedora python library
	fsLinux64PythonLib = &quot;&quot;
	Dim home As String : home = &quot;/usr/lib64&quot;
	Dim sub_dirs As String : sub_dirs = fsSubDirectories(home)
	Dim a1 As Variant : a1 = Split(sub_dirs, Chr(13))
	Dim x As Integer : x = 0
	For x = Lbound(a1) To Ubound(a1)
		if instr(a1(x), &quot;python&quot;) = 1 Then
			 fsLinux64PythonLib = home &amp; &quot;/&quot; &amp; a1(x)
			 Exit Function
		End If
	Next
End Function



Function fbCheckPython3Ok(_cmd) As Boolean
	&apos; For some local users, the system python3 is unavailable or incomplete.
	&apos; &lt;https://github.com/urllib3/urllib3/issues/3020#issuecomment-1539843879&gt;
	&apos; Try importing a library and see if there is an error.
	&apos;
	&apos; NOTE: A Sandboxed version of the Office program might always return `True`
	&apos; because it was not allowed to report any shell errors.  This is to prevent
	&apos; a user from getting characteristics of the host machine.
	fbCheckPython3Ok = False
	Dim _python3 As String : _python3 = BundlePyPath()
	If Len(_cmd) = 0 Then
		_cmd = &quot;import sys;sys.exec_prefix&quot;
	End If
	On Error GoTo fbCheckPython3OkErr
	If Shell(_python3, 0, &quot;-c &quot;&quot;&quot; &amp; _cmd &amp; &quot;&quot;&quot;&quot;) = 0 Then
		fbCheckPython3Ok = True
	End If
	Exit Function
	fbCheckPython3OkErr:
	fbCheckPython3Ok = False
End Function


Function fbYouAreStaffOrAdmin(FileFilter As Variant) As Boolean
&apos; ONNX speech synthesis models are large, requiring careful management of advanced options.
&apos; To restrict access, the script enforces permissions by checking whether key program and
&apos; configuration files are set to &quot;Read-Only&quot;.
&apos;
&apos; If users have permission to modify this script, they can override the default restrictions.
&apos; The script first checks file permissions before verifying whether the user belongs to an
&apos; approved group, such as administrators or staff members.
	
	fbYouAreStaffOrAdmin = False
	Dim  Item As String :  Item = &quot;&quot;
	Dim _cmds()
	For Each  Item In FileFilter
	    If FileExists(Item) Then
	    	If GetAttr(Item) &lt;&gt; 0 Then Exit Function
	    End If
	Next
	On Local Error GoTo fbYouAreStaffOrAdminErr
	Dim groupNames() As String
	Dim i As Integer : i = 0
	Dim dev_test : dev_test = &quot;import os; _check = &quot;&quot;READTEXTUSERADMINKEY&quot;&quot;; os.environ.get(_check) == os.environ.get(&quot;&quot;USER&quot;&quot;) or exec(&quot;&quot;raise NotImplementedError(&apos;Some python commands are not available to a local user&apos;)&quot;&quot;)&quot;
	Select Case getGUIType()
		Case 1
		_cmds = Array(_
		&quot;import ctypes; ctypes.windll.shell32.IsUserAnAdmin() or exec(&apos;raise NotImplementedError(&quot;&quot;Some python commands are not available to this user.&quot;&quot;)&apos;)&quot;, _
		dev_test, _
		)
		Case Else
		groupNames = Array(&quot;admin&quot;, &quot;sudo&quot;, &quot;staff&quot;, &quot;readtextadmin&quot;, &quot;wheel&quot;)
		ReDim Preserve _cmds(UBound(groupNames)+ 1)
		For i = LBound(groupNames) To UBound(groupNames)
		    _cmds(i) = &quot;import os; &quot;&quot;&quot; &amp; groupNames(i) &amp; _
		    &quot;&quot;&quot; in os.popen(&quot;&quot;groups&quot;&quot;).read().strip().split() or exec(&apos;raise NotImplementedError(&quot;&quot;Some &quot; &amp; _
		    groupNames(i) &amp; &quot; python commands are not available to this user.&quot;&quot;)&apos;)&quot;
		Next i
		_cmds(UBound(groupNames)+ 1) = dev_test
	End Select

	For Each  Item In _cmds
		If fbCheckPython3Ok(Item) Then
			fbYouAreStaffOrAdmin = True
			Exit Function
		End If
	Next
	Exit Function
	fbYouAreStaffOrAdminErr:
	fbYouAreStaffOrAdmin = False
End Function


Function PosixPythonPath() As String
	&apos; On MacOS, if you want to use pip3 libraries, the
	&apos; version of the system python or the developer
	&apos; python needs to match the LibreOffice python
	&apos; major and minor versions (i. e.: `3.8` for
	&apos; LibreOffice 7.3). Otherwise you can only use the
	&apos; built-in libraries included with LibreOffice
	&apos; python. (i.e. : `(SPD_READ_TEXT_PY)` works)
	&apos;
	&apos; Linux LibreOffice installations that use the system
	&apos; version of python3 and pip3 just work.
	Dim a0 As Variant
	Dim a1 As Variant
	Dim x As Integer : x = 0
	Dim y As Integer : y = 0
	Dim py_ver As String : py_ver = fsMacPythonVersion()
	PosixPythonPath = &quot;&quot;
	Dim EnvironPy As String : EnvironPy = Environ(&quot;READ_TEXT_USE_PY&quot;)
	If Len(Environ(EnvironPy) &lt;&gt; 0) Then
		&apos; On Posix systems, you can edit a file to specify environmental
		&apos; values. To see your current values, open a console and type
		&apos; `env`. Some platforms use a user dialog to change the settings
		&apos; but it is more typical to just edit a settings file with a text
		&apos; editor. See the documentation for your distribution and desktop.
		&apos; Create an environment variable called `READ_TEXT_USE_PY`. Set
		&apos; the value to the full path of the python executable you want
		&apos; to use.		
		&apos;
		&apos; Once you have modified your default environment settings,
		&apos; when you type `env` in a console you should see a line that
		&apos; looks something like:
		&apos;
		&apos; `READ_TEXT_USE_PY=/usr/.local/bin/python3.12.1`
		&apos;
		&apos; Now, the extension uses that path for python if the path exists.
		If FileExists(EnvironPy) Then
			PosixPythonPath = EnvironPy
			Exit Function
		End If
	End If
	If fsTheOsId() = &quot;POSIX.APPIMAGE&quot; Then
		PosixPythonPath = fsAppImageResourcePath(&quot;python&quot;)
		If Len(Config(pi_external_path_string)) = 0 Then
			Config(pi_external_path_string) = PosixPythonPath	
		End If
		Exit Function
	Else
		Select Case Len(py_ver)
			Case 0
			a0 = Array(&quot;/usr&quot;)
			a1 = Array(&quot;python3&quot;, &quot;python&quot;)
			Case Else
			If fbCheckPython3Ok(&quot;&quot;) Then
			&apos; [developer, system, LibreOffice]
				a0 = Array(_
				&quot;/Library/Frameworks/Python.framework/Versions/&quot; &amp; py_ver, _
				&quot;/usr&quot;, _
				&quot;/Applications/LibreOffice.app/Contents/Frameworks/LibreOfficePython.framework/Versions/&quot; &amp; py_ver)
			Else
			&apos; [developer, LibreOffice]
				a0 = Array(_
				&quot;/Library/Frameworks/Python.framework/Versions/&quot; &amp; py_ver, _
				&quot;/Applications/LibreOffice.app/Contents/Frameworks/LibreOfficePython.framework/Versions/&quot; &amp; py_ver)
			End If
			a1 = Array(&quot;python&quot; &amp; py_ver, &quot;python3&quot;)
		End Select
		
		For y = Lbound(a0) to Ubound(a0)
			For x = Lbound(a1) To Ubound(a1)
				If FileExists(a0(y) &amp; &quot;/bin/&quot; &amp; a1(x)) Then
					PosixPythonPath = a0(y) &amp; &quot;/bin/&quot; &amp; a1(x)
					Exit Function
				End If
			Next
		Next
	End If
End Function


Function fbOsaScriptOk(_command) As Boolean
	&apos; Return `True` if MacOS `osascript` is okay
	fbOsaScriptOk = False
	Dim _exe As String : _exe = &quot;file:///usr/bin/osascript&quot;
	On Error GoTo fbOsaScriptOkErr
	If Len(_command) = 0 Then
		If FileExists(_exe) Then
			fbOsaScriptOK = getattr(_exe) = 1
		End If
		Exit Function
	End If
	fbOsaScriptOk = Shell(_exe, 0, _command) = 0
	Exit Function
	fbOsaScriptOkErr:
	fbOsaScriptOk = False
End Function


Function fbPiperTtsOk(_command) As Boolean
	&apos; Return `True` if `piper` is executable
	On Error Goto fbPiperTtsOkErr
	If Len(_command) = 0 Then
		_command = &quot; -h&quot;
	End If
	Select Case i_CaReadTextExtensionPiperTestResult
		&apos; Only test once per session.
		&apos; Did test complete?
		&apos; Did the test pass?
		Case 2
		Exit Function
		Case 3
		fbPiperTtsOk = True
		Exit Function
	End Select
	Dim sPiperPath As String : sPiperPath = fsPiperPath()
	If Len(sPiperPath) = 0 or Not fbPySupportFStrings() Then
		i_CaReadTextExtensionPiperTestResult = 2
		Exit Function
	End If
	&apos; If you don&apos;t have VLC on Windows systems, then piper needs to write a file
	&apos; instead of streaming. This has the potential for causing a long delay if
	&apos; you select a long string of text to read aloud. Only show the option if
	&apos; someone enables &quot;Enable Experimental Features (May be unstable)&quot; in the
	&apos; Tools - Options - Advanced menu
	If Not fbExperimentalMode() Then
		Select Case fsTheOsId()
			Case &quot;WINDOWS&quot;, &quot;WINDOWS.WINE&quot;, &quot;WINDOWS.NOSCRIPT&quot;
			If Not fbHaveVLC() Then
				i_CaReadTextExtensionPiperTestResult = 2
				Exit Function
			End If
			End Select
	End If
	If Shell(sPiperPath, 0, _command) = 0 Then
		i_CaReadTextExtensionPiperTestResult = 3
		fbPiperTtsOk = True
	Else
		i_CaReadTextExtensionPiperTestResult = 2
	End If
	Exit Function
	fbPiperTtsOkErr:
	i_CaReadTextExtensionPiperTestResult = 0
	fbPiperTtsOk = False
End Function


Function PiperModelFile(file_name As String) As String
	&apos; returns the path to data from the piper `voices.json` catalog
	&apos; of available voices, if available, otherwise return
	&apos; `&quot;&quot;`
	PiperModelFile = &quot;&quot;
	If Len(file_name) = 0 Then
		file_name = &quot;models.txt&quot;
	End If
	Dim _item As String : _item = &quot;&quot;
	Dim _home As String : _home = &quot;&quot;
	Dim _paths As Variant
	Select Case getGUIType()
		Case 1 &apos; WINDOWS
		_home = converttourl(Environ(&quot;APPDATA&quot;))
		_paths = Array(_
		&quot;/piper-tts/piper-voices/&quot; &amp; file_name, _
		&quot;/piper/piper-voices/&quot; &amp; file_name, _
		)
		Case Else
		_home = Environ(&quot;HOME&quot;)
		_paths = Array(_
		&quot;/.local/share/piper-tts/piper-voices/&quot; &amp; file_name, _
		&quot;/.local/share/piper/piper-voices/&quot; &amp; file_name, _
		)
	End Select
	For Each _item in _paths
		If FileExists(_home &amp; _item) Then
			PiperModelFile = _home &amp; _item
			Exit Function
		End If
	Next
End Function


Function fbPiperModelInstalled(Model) As Boolean
	fbPiperModelInstalled = False
	Dim Item As String
	Dim Langs() As String : Langs = Split(Model, &quot;-&quot;)
	Select Case Ubound(Langs)
		Case 2
		For Each Item in PiperModelList(Langs(0), False)
			If Instr(Item, &quot;##&quot;) = 0 And Len(Item) &gt; 2 Then
				fbPiperModelInstalled = True
				Exit Function
			End If
		Next
	End Select
End Function


Function PiperModelList(ByVal _lang As String, ByVal validate As Boolean) As Variant
&apos; Returns a filtered list of Piper-compatible model entries from the
&apos; models.txt file
	Dim _model_file As String : _model_file = PiperModelFile(&quot;models.txt&quot;)
	If Len(_model_file) = 0 Then
		PiperModelList = Array()  &apos; Return empty array if file not found
		Exit Function
	End If

	&apos; Read file contents into string, split by carriage return
	Dim _contents As String : _contents = getTextFromFile(_model_file, &quot;UTF-8&quot;, 0)
	Dim _lines As Variant : _lines = Split(_contents, Chr(13))

	&apos; Create list of language keys to try
	Dim _searchKeys As Variant
	Select Case Len(_lang)
		Case 0
			_searchKeys = Array(&quot;&quot;)
		Case Else
			_searchKeys = Array( _
				fsReplaceText(_lang, &quot;-&quot;, &quot;_&quot;), _
				Split(_lang, &quot;_&quot;)(0), _
				Split(_lang, &quot;-&quot;)(0))
	End Select

	&apos; Prepare result container
	Dim _result() As String
	ReDim _result(0)
	Dim i As Integer : i = 0
	Dim x As Integer : x = 0

	Dim key As String, lineText As String
	Dim found As Boolean : found = False

	For x = LBound(_searchKeys) To UBound(_searchKeys) 
		If found Then Exit For
		key = Trim(_searchKeys(x))
		Select Case Len(key)
			Case 0  &apos; Return all valid entries when no filter is provided
				For Each lineText In _lines
					lineText = Trim(lineText)
					If UBound(Split(lineText, &quot;#&quot;)) = 2 Then  &apos; Only entries with one &quot;#&quot; (2 parts)
						If i = 0 And Len(_result(0)) = 0 Then
							_result(0) = lineText
						Else
							i = i + 1
							ReDim Preserve _result(i)
							_result(i) = lineText
						End If
					End If
				Next

			Case Else  &apos; Filter by language prefix
				For Each lineText In _lines
					If InStr(lineText, key) = 1 Then  &apos; line starts with language code
						If (Not validate) Or (InStr(lineText, &quot;#&quot;) &lt;&gt; 0) Then
							If Not ExistsInArray(_result, lineText) Then
								If i = 0 And Len(_result(0)) = 0 Then
									_result(0) = lineText
								Else
									i = i + 1
									ReDim Preserve _result(i)
									_result(i) = lineText
								End If
								found = True  &apos; Stop after finding matches
							End If
						End If
					End If
				Next
		End Select
	Next
	PiperModelList = _result
End Function


Function ExistsInArray(arr As Variant, value As String) As Boolean
&apos; Checks if a string already exists in an array
	ExistsInArray = False
	Dim item As String
	For Each item In arr
		If item = value Then
			ExistsInArray = True
			Exit Function
		End If
	Next
End Function


Function PiperLocalSuggestion(ByVal _lang As String, ByVal _high As Boolean) As String
	&apos; Return a selection from a curated list of voice models. If `_high` is
	&apos; `True`, then return a high quality voice model.
	&apos;
	&apos; [Canadian and Indian accent reference](http://www.festvox.org/cmu_arctic/)
	If Len(_lang) = 0 Then
		_lang = fsSelectionLanguageAndRegion(False)
	End If
	PiperLocalSuggestion = &quot;&quot;
	Dim models() As String
	Dim found_model() As String
	If _high Then
		PiperLocalSuggestion = &quot;en_US-lessac-high#0&quot;
		models = Array(_
		Array(&quot;de_DE&quot;, &quot;de_DE-thorsten-high#0&quot;),_
		Array(&quot;en_GB&quot;, &quot;en_GB-cori-high#0&quot;),_
		Array(&quot;es_MX&quot;, &quot;es_MX-claude-high#0&quot;),_
		Array(&quot;kk_KZ&quot;, &quot;kk_KZ-issai-high#0&quot;),_
		)
	Else
		models = Array(_
		Array(&quot;ar_JO&quot;, &quot;ar_JO-kareem-medium#0&quot;),_
		Array(&quot;ca_ES&quot;, &quot;ca_ES-upc_ona-medium#0&quot;),_
		Array(&quot;cs_CZ&quot;, &quot;cs_CZ-jirka-medium#0&quot;),_
		Array(&quot;de_DE&quot;, &quot;de_DE-thorsten-medium#0&quot;),_
		Array(&quot;en_CA&quot;, &quot;en_US-arctic-medium#8&quot;),_
		Array(&quot;en_GB&quot;, &quot;en_GB-vctk-medium#64&quot;),_
		Array(&quot;en_IE&quot;, &quot;en_GB-jenny_dioco-medium#0&quot;),_
		Array(&quot;en_IN&quot;, &quot;en_US-arctic-medium#3&quot;),_
		Array(&quot;en_US&quot;, &quot;en_US-lessac-medium#0&quot;),_
		Array(&quot;es_ES&quot;, &quot;es_ES-sharvard-medium#0&quot;),_
		Array(&quot;fa_IR&quot;, &quot;fa_IR-gyro-medium#0&quot;),_
		Array(&quot;fi_FI&quot;, &quot;fi_FI-harri-medium#0&quot;),_
		Array(&quot;fr_FR&quot;, &quot;fr_FR-upmc-medium#0&quot;),_
		Array(&quot;nl_BE&quot;, &quot;nl_BE-rdh-medium&quot;), _
		Array(&quot;nl_NL&quot;, &quot;nl_NL-ronnie-medium#0&quot;), _
		Array(&quot;pl_PL&quot;, &quot;pl_PL-darkman-medium#0&quot;),_
		Array(&quot;pt_BR&quot;, &quot;pt_BR-cadu-medium#0&quot;),_
		Array(&quot;pt_PT&quot;, &quot;pt_PT-tugão-medium#0&quot;),_
		Array(&quot;ru_RU&quot;, &quot;ru_RU-dmitri-medium#0&quot;),_
		Array(&quot;sv_SE&quot;, &quot;sv_SE-nst-medium#0&quot;),_
		Array(&quot;uk_CA&quot;, &quot;uk_UA-ukrainian_tts-medium#0&quot;),_
		Array(&quot;uk_RU&quot;, &quot;uk_UA-ukrainian_tts-medium#1&quot;),_
		Array(&quot;uk_UA&quot;, &quot;uk_UA-ukrainian_tts-medium#2&quot;),_
		Array(&quot;vi_VN&quot;, &quot;vi_VN-vais1000-medium#0&quot;),_
		)
	End If
	Dim langs As Variant : langs = Array(_
	fsReplaceText(_lang, &quot;-&quot;, &quot;_&quot;,), _
	Split(_lang, &quot;-&quot;)(0), _
	Split(_lang, &quot;_&quot;)(0))
	Dim x As Integer : x = 0
	Dim y As Integer : y = 0
	For x = Lbound(langs) To Ubound(langs)
		For y = Lbound(models) to Ubound(models)
			If instr(models(y)(0), langs(x)) = 1 Then
				PiperLocalSuggestion = models(y)(1)
				Exit Function
			End If
		Next
	Next
	Select Case Instr(PiperLocalSuggestion, &quot;-&quot;)
	Case 0
		found_model = Split(PiperModelList(_lang, False)(0), &quot;#&quot;)
		Select Case Ubound(found_model)
			Case 2
				PiperLocalSuggestion = found_model(0) &amp; &quot;#&quot; &amp; found_model(2)
			Case Else
				PiperLocalSuggestion = &quot;en_GB-jenny_dioco-medium#0&quot;
		End Select
	End Select
End Function


Function fiPosixProgram023(_command As String, _challenge As String) As Integer
	&apos; Return `3` if `os.sys(f&quot;{command} {_challenge}) == 0`
	On Error Goto fiPosixProgram023Err
	fiPosixProgram023= 0
	If getGUIType() = 1 Then
		Exit Function
	End If
	If Shell(_command, 0, _challenge) = 0 Then
		fiPosixProgram023 = 3
	Else
		fiPosixProgram023= 2
	End If
	Exit Function
	fiPosixProgram023Err:
	fiPosixProgram023= 2
End Function


Function fbPosixProgramOK(_command As String, _challenge As String) As Boolean
	&apos; Handles local error for command ` If Shell(_command, 0, _challenge) = 0 Then ...
	&apos; Usage:  If fiPosixProgramOK(&quot;pico2wave&quot;, &quot;--usage &gt; /dev/null&quot;) Then
	fbPosixProgramOK = fiPosixProgram023(_command, _challenge) = 3
End Function
&apos; If getGUIType() = 1


Function fbSpdSayOk() As Boolean
	&apos; Return `True` if `spd-say` is executable
	fbSpdSayOk = False
	Select Case i_CaReadTextExtensionSpdSayTestResult
		&apos; Only test once per session.
		&apos; Did test complete?
		&apos; Did the test pass?
		Case 2
		Exit Function
		Case 3
		fbSpdSayOk = True
		Exit Function
	End Select
	i_CaReadTextExtensionSpdSayTestResult = fiPosixProgram023(&quot;spd-say&quot;, &quot;-v &gt; /dev/null&quot;)
	fbSpdSayOk = (i_CaReadTextExtensionSpdSayTestResult = 3)
End Function


Function fbUpdateLexiconFile(_
		_language As String,_
		_model As String,_
		_json_file_in As String) As Boolean
    &apos; Update json and remove duplicate items. When you download an untrusted
    &apos; json file, return `True` only if the data structure is compatible.
    &apos; NOTE: Apache OpenOffice 4 for Windows does not support python 3
    fbUpdateLexiconFile = False
	Dim _command As String : _command = &quot;&quot;
	Dim _app As String : _app = BundlePyPath()
	If Len(_app) = 0 Then
		Exit Function
	End If
	Select Case getGUIType()
		Case 1  &apos; WINDOWS
		_command = Join(Array(_
		&quot;&quot;&quot;&quot;, ConvertFromUrl(_app), &quot;&quot;&quot; &quot;&quot;&quot;, ConvertFromUrl(fsMyURL() &amp;_
		&quot;/python/find_replace_phonemes.py&quot;), &quot;&quot;&quot; --language &quot;, _language,_
		&quot; --model &quot;, _model, &quot; &quot;&quot;&quot;, ConvertFromUrl(_json_file_in), &quot;&quot;&quot;&quot;), &quot;&quot;)
		If fbIsLibreOffice() Then
			fbUpdateLexiconFile = fbDoWinBat(_command)
		Else
			fbUpdateLexiconFile = False
		End If
		Case Else
		_command = Join(Array(_
		&quot;&quot;&quot;&quot;, ConvertFromUrl(fsMyURL() &amp; &quot;/python/find_replace_phonemes.py&quot;),_
		&quot;&quot;&quot; --language &quot;, _language, &quot; --model &quot;, _model, &quot; &quot;&quot;&quot;,_
		ConvertFromUrl(_json_file_in), &quot;&quot;&quot;&quot;), &quot;&quot;)
		fbUpdateLexiconFile = Shell(_app, 0, _command) = 0
	End Select
	Exit Function
	fbUpdateLexiconFileErr:
	fbUpdateLexiconFile = False
End Function


Function GoogleTranslateDefault()
	Dim s1 As String : s1 = &quot;https://translate.google.com/?&amp;langpair=auto|(LANGUAGE_CODE)&amp;tbb=1&amp;ie=&amp;hl=(LANGUAGE_CODE)&amp;text=(OOO_WEBTEXT)&quot;
	GoogleTranslateDefault = s1
	On Local Error GoTo GoogleTranslateDefaultErr
	Dim a1 As Variant : a1 =  faDialog1ComboBox4Array(s1, fsDocLanguage() &amp; &quot;-&quot; &amp; fsDocCountry())
	If Len(a1(0)) &lt;&gt; 0 Then
		GoogleTranslateDefault = a1(0)
	End If
	Exit Function
	GoogleTranslateDefaultErr:
	GoogleTranslateDefault = s1
End Function


Function fbDisplayOpenJapanese() As Boolean
	&apos; Enable display of `open_jtalk` Language options if it is installed
	&apos; and the current environment, document or text selection is Japanese.
	fbDisplayOpenJapanese = False
	Dim _item As String
	If fbPosixProgramOK(&quot;open_jtalk&quot;, &quot; &gt; /dev/null&quot;) Then
		For Each _item in fvGetIsoLangArray()
			If Left(_item, 2) = &quot;ja&quot; Then
				fbDisplayOpenJapanese = True
				Exit Function
			End If
		Next
	End If
End Function


Function fvTts_config_createDefaultConfig( _
	msgs() As Variant, _
	errorCode As Integer) As Variant
	Dim player7 As String : player7 = &quot;&quot;
	&apos; The place to store the configuration data
	If UboundCurrentConfigItems() &gt; 0 Then
		fvTts_config_createDefaultConfig() = f_CaReadTextExtensionCurrentConfig
		Exit Function
	End If
	Dim Config(fiUboundConfigOptions) As Variant
	Config(pi_anonymous_key_string) = fsGetFirstKey(Config)
	Dim bPiperOk As Boolean : bPiperOk = fbPiperTtsOk(&quot;&quot;)
	Dim bUsingWine As Boolean : bUsingWine = False
	Dim sGetLanguage As String : sGetLanguage = fsGetLanguage()
	Dim sLocalHostSpeech As String : sLocalHostSpeech = &quot;&quot;
	Dim Item As Variant
	Dim bHaveNetworkTTS As Boolean : bHaveNetworkTTS = fbHaveNetworkTTS()
	Dim sPython As String : sPython = &quot;&quot;
	&apos; Create default values for variables

	Dim pyFallBack As String : pyFallBack = &quot;-c &quot;&quot;import webbrowser;webbrowser.open_new_tab(&apos;https://quickchart.io/qr?size=350&amp;text=(OOO_WEBTEXT)&apos;)&quot;&quot;&quot;
	Select Case getGUIType()
		Case 1  &apos; Windows
		bUsingWine = fbUsingWine(False)
		If not bUsingWine Then
			player7 = &quot;&quot;
		End If
		If bPiperOk Then
			Config(pi_use_experimental_boolean) = False
			Config(pi_experimental_path_string) = ConvertFromURL(BundlePyPath())
			Config(pi_experimental_options_string) = &quot;&quot;&quot;(PIPER_READ_TEXT_PY)&quot;&quot;&quot; &amp; player7 &amp; &quot; --voice &quot; &amp; _
			PiperLocalSuggestion(&quot;&quot;, False) &amp; &quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		Else
			Config(pi_use_experimental_boolean) = False
			If FileExists(fsProgramDirectoryx86() &amp; &quot;festival&quot;) Then
				Config(pi_experimental_path_string) = fsProgramDirectoryx86() &amp; &quot;festival\festival.exe&quot;
			Else
	 			Config(pi_experimental_path_string) = fsProgramDirectory() &amp; &quot;festival\festival.exe&quot;
			End If
			Config(pi_experimental_options_string) = &quot;(audio_mode &apos;async)(tts&quot;&quot;(TMP)&quot;&quot; nil) (quit)&quot;		
		End If
		Config(pi_use_external_boolean) = True
		Config(pi_use_html_boolean) = False
		Config(pi_use_smart_select_integer) = 0
		Config(pi_html_string) = GoogleTranslateDefault()
		If Len(WinSpeechProgramPath()) = 0 Then
			Config(pi_external_path_string) = ConvertFromURL(BundlePyPath())
			Config(pi_external_options_string) = &quot;(RESET_ALL)&quot;
		ElseIf bUsingWine Then
			&apos; Don&apos;t attempt SAPI speech by default using Wine for Posix.
			Config(pi_external_path_string) = ConvertFromURL(BundlePyPath())
			Config(pi_experimental_path_string) = Config(pi_external_path_string)
			Config(pi_experimental_options_string) = &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot; --voice &quot;&quot;AUTO&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			If bPiperOk Then
				Config(pi_external_options_string) = &quot;&quot;&quot;(PIPER_READ_TEXT_PY)&quot;&quot;&quot; &amp; player7 &amp; &quot; --voice &quot; &amp; _
				PiperLocalSuggestion(&quot;&quot;, False) &amp; &quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			Else
				Config(pi_external_options_string) = &quot;(RESET_ALL) &quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot; --client_id &quot;&quot;(SESSION_ID)&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
				Config(pi_experimental_options_string) = pyFallBack
			End If
		Else
			Config(pi_external_path_string) = WinSpeechProgramPath()
			Config(pi_external_options_string) = WinSpeechArgument()		
		End If
		Config(pi_display_info_integer) = 0
		Config(pi_display_language_string) = sGetLanguage

		Case Else
		&apos; Posix or MacOS

		sPython = PosixPythonPath()
		If bPiperOk Then
			Config(pi_use_experimental_boolean) = False
			Config(pi_experimental_path_string) = sPython
			Config(pi_experimental_options_string) = &quot;&quot;&quot;(PIPER_READ_TEXT_PY)&quot;&quot; --player 7 --voice &quot; &amp; _
			PiperLocalSuggestion(&quot;&quot;, False) &amp; &quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		ElseIf fsGetOS() = &quot;MACOS&quot; Then
			Config(pi_use_experimental_boolean) = False
			Config(pi_experimental_path_string) = sPython
			Config(pi_experimental_options_string) = &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot; --voice &quot;&quot;AUTO&quot;&quot; --rate &quot;&quot;70%&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		Else  &apos; Posix
			If FileExists(&quot;/usr/bin/festival&quot;) Then
				Config(pi_use_experimental_boolean) = False
				Config(pi_experimental_path_string) = &quot;/usr/bin/festival&quot;
				Config(pi_experimental_options_string) = &quot;(audio_mode &apos;async)(tts&quot;&quot;(TMP)&quot;&quot; nil) (quit)&quot;
			ElseIf fbSpdSayOk() Then
				Config(pi_use_experimental_boolean) = False
				Config(pi_experimental_path_string) = sPython
				Config(pi_experimental_options_string) = &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot; --voice &quot;&quot;AUTO&quot;&quot; --rate &quot;&quot;70%&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;			
			ElseIf fbIsLibreOffice() Then
				Select Case fsTheOsId()
					Case &quot;POSIX&quot;, &quot;POSIX.EXPERIMENTAL&quot;
					Config(pi_use_experimental_boolean) = False
					Config(pi_experimental_path_string) = sPython
					Config(pi_experimental_options_string) = &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot; --voice &quot;&quot;AUTO&quot;&quot; --rate &quot;&quot;70%&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;			
					Case Else
					Config(pi_use_experimental_boolean) = False
					Config(pi_experimental_path_string) = sPython
					Config(pi_experimental_options_string) = pyFallBack
				End Select			
			Else
				Config(pi_use_experimental_boolean) = False
				Config(pi_experimental_path_string) = sPython
				Config(pi_experimental_options_string) = pyFallBack
			End If
		End If
		Config(pi_use_external_boolean) = True
		Config(pi_use_html_boolean) = False
		Config(pi_use_smart_select_integer) = 0
		If Len(fsLocalHostSpeech()) = 0 Then
			Config(pi_html_string) = GoogleTranslateDefault()
		Else
			Config(pi_html_string) = fsLocalHostSpeech()
		End If
		If fsGetOS() = &quot;POSIX&quot; Then
			&apos; Linux
			If Len(PosixPythonPath()) &lt;&gt; 0 Then
				Config(pi_external_path_string) = sPython
			Else
				Config(pi_external_path_string) = &quot;/usr/bin/python&quot;
			End If
			Select Case fsTheOsId()
				Case &quot;POSIX.SNAP&quot;, &quot;POSIX.FLATPAK&quot;
				If bHaveNetworkTTS Then
					Config(pi_external_options_string) = &quot;&quot;&quot;(NETWORK_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
						&quot;--language (SELECTION_LANGUAGE_COUNTRY_CODE) --voice &quot;&quot;FEMALE1&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
				Else
					Config(pi_external_options_string) = pyFallBack
				End If
				Case Else
				If fbIsSandboxed() Then
					Config(pi_external_options_string) = &quot;-m webbrowser -t &quot; &amp; _
					&quot;&quot;&quot;https://translate.google.com/?sl=auto&amp;tl=(LANGUAGE_CODE)&amp;text=(OOO_WEBTEXT)&quot;&quot;&quot;
				ElseIf fbPosixProgramOK(&quot;pico2wave&quot;, &quot; --usage &gt; /dev/null&quot;) Then
					Config(pi_external_options_string) = &quot;&quot;&quot;(PICO_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
					&quot;--language (SELECTION_LANGUAGE_COUNTRY_CODE) &quot;&quot;(TMP)&quot;&quot;&quot;
				ElseIf fbDisplayOpenJapanese() Then
					&apos; Japanese
					Config(pi_external_options_string) = &quot;&quot;&quot;(OPENJTALK_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
					&quot;&quot;&quot;(TMP)&quot;&quot;&quot;
				ElseIf bPiperOk Then
					Config(pi_external_options_string) = &quot;&quot;&quot;(PIPER_READ_TEXT_PY)&quot;&quot;&quot; &amp; _
					&quot; --rate 100% --voice AUTO0#0 --language (SELECTION_LANGUAGE_COUNTRY_CODE)&quot; &amp; _
					&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
				ElseIf Len(fsFindAppPath(&quot;text2wave&quot;)) &lt;&gt; 0 Or fbPosixProgramOK(&quot;flite&quot;, &quot;-? &gt; /dev/null&quot;) Then
					Config(pi_external_options_string) = &quot;&quot;&quot;(FESTIVAL_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
					&quot;&quot;&quot;(TMP)&quot;&quot;&quot;
				ElseIf fbHaveEspeak() Then
					Config(pi_external_options_string) = &quot;&quot;&quot;(ESPEAK_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
					&quot;--language (SELECTION_LANGUAGE_COUNTRY_CODE) &quot;&quot;(TMP)&quot;&quot;&quot;
				ElseIf fbPySupportFStrings() Then
						Config(pi_external_options_string) = &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot; &amp; _
						&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot;&quot; &amp; _
						&quot; --client_id &quot;&quot;(SESSION_ID)&quot;&quot;&quot; &amp; _
						&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
					&apos; Mimic3 and MaryTTS servers include an English voice model by default.
					&apos; Piper server uses the system language. Rhvoice-Rest and OpenTTS include
					&apos; multiple voice models by default.
					sLocalHostSpeech = fsLocalHostSpeech()
					For Each Item in SpeechHostInfoList()
						If InStr(Item.langs, sGetLanguage) &lt;&gt; 0 And Instr(sLocalHostSpeech, Item.url) = 1 Then
							Config(pi_external_options_string) =  &quot;&quot;&quot;(NETWORK_READ_TEXT_PY)&quot;&quot; &quot; &amp; _
						&quot;--language (SELECTION_LANGUAGE_COUNTRY_CODE) &quot;&quot;(TMP)&quot;&quot;&quot;
							Exit For
						End If		
					Next
				Else
					If bHaveNetworkTTS Then
						Config(pi_external_options_string) = Config(pi_external_options_string)
					Else
						Config(pi_external_options_string) = pyFallBack
					End If
				End If
			End Select
		Elseif fbIsLibreOffice() Then
			&apos;Mac (MacOS)
			If fbOsaScriptOk(&quot;&quot;) And fbHaveItunes() Then
				Config(pi_external_path_string) = AppleScriptPath()
				Config(pi_external_options_string) = &quot;&quot;&quot;(SAY_APPLESCRIPT)&quot;&quot;&quot;
			ElseIf bHaveNetworkTTS Then
				Config(pi_external_path_string) = sPython
				Config(pi_external_options_string) =  &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot; &amp; _
				&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot;&quot; &amp; _
				&quot; --voice &quot;&quot;AUTO&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			Else
				Config(pi_external_path_string) = sPython
				Config(pi_external_options_string) =  &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot; &amp; _
				&quot; --language &quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot;&quot; &amp; _
				&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			End If
		Else
			If fbOsaScriptOk(&quot;&quot;) And fbHaveItunes() Then
				Config(pi_external_path_string) = AppleScriptPath()
				Config(pi_external_options_string) = &quot;&quot;&quot;(SAY_APPLESCRIPT)&quot;&quot;&quot;
			Else
				Config(pi_external_path_string) = PosixPythonPath()
				Config(pi_external_options_string) = pyFallBack
			End If		
		End If
		Config(pi_display_info_integer) = 1
		Config(pi_display_language_string) = fsGetLanguage()
	End Select
	fvTts_config_createDefaultConfig() = Config()
End Function


Sub tts_config_writeFile( _
	Config() As Variant,ByVal configFilePath As String)
	&apos; Writes a configuration file from an array.
	&apos; This function updated 2013-08-29 - always write as UTF-8
	On Local Error Goto tts_config_writeFileErr
	Dim sA As String : sA = &quot;&quot;
	Dim CR As String : CR = Chr(10)
	Dim ExternalCommand As String : ExternalCommand = &quot;&quot;
	Dim PyVersion() As String
	Dim x As Integer : x = 0
	Dim EnvironPy As String : EnvironPy = Environ(&quot;READ_TEXT_USE_PY&quot;)
	If Len(EnvironPy) &lt;&gt; 0 Then
		If FileExists(EnvironPy) Then
			ExternalCommand = EnvironPy
		End If
	End If
	If Len(ExternalCommand) = 0 Then
		ExternalCommand = Config(pi_external_options_string)
		PyVersion = Array(&quot;4&quot;, &quot;3&quot;, &quot;2.7&quot;, &quot;2&quot;, &quot;&quot;)
		If fsTheOsId() = &quot;POSIX.APPIMAGE&quot; Then
			&apos; Do not record a temporary Posix python application path.
			ExternalCommand = fsAppImageResourcePath(&quot;python&quot;)
		End If
	End If
	If InStr(Config(pi_external_path_string), &quot;python&quot;) &lt;&gt; 0 Then
		&apos; After updating `~/.local/share/piper-tts/piper-tts/voices.json`, then
		&apos; store the active command without the update flag.
		Select Case Instr(ExternalCommand, &quot; --language (SELECTION_LANGUAGE_COUNTRY_CODE)&quot;)
			Case 0
			ExternalCommand = fsReplaceText(ExternalCommand, &quot; --update True&quot;, _
			&quot; --language (SELECTION_LANGUAGE_COUNTRY_CODE)&quot;)
			Case Else
			ExternalCommand = fsReplaceText(ExternalCommand, &quot; --update True&quot;, _
			&quot;&quot;)
		End Select
	End If
	If Len(Config(pi_anonymous_key_string)) = 0 Then
	&apos; Update `text-to-speech.anonymous.key.string` on computers when you update
	&apos; the extension version.
	&apos;
	&apos; An organization&apos;s networked services can use this key to verify
	&apos; permission to connect without using your personal information.
	&apos; Resetting the extension&apos;s settings deletes the local key permanently.
		Config(pi_anonymous_key_string) = fsGetFirstKey(Config)
	End If
	If Len(Config(pi_display_language_string)) = 0 Then
		Config(pi_display_language_string) = fsGetLanguage()
	End If
	
	sA = Join(Array(_
	&quot;dialog1.anonymous.key.string=&quot;, Config(pi_anonymous_key_string), CR, _
	&quot;dialog1.display.info.integer=&quot;, Config(pi_display_info_integer), CR, _
	&quot;dialog1.external.options.string=&quot;,Config(pi_external_options_string), CR, _
	&quot;dialog1.use.external.boolean=&quot;, fsTts_util_booleanToString(Config(pi_use_external_boolean)), CR, _
	&quot;dialog1.use.html.boolean=&quot;, fsTts_util_booleanToString(Config(pi_use_html_boolean)), CR, _
	&quot;dialog1.html.string=&quot;, Config(pi_html_string), CR, _
	&quot;dialog1.use.experimental.boolean=&quot;, fsTts_util_booleanToString(Config(pi_use_experimental_boolean)), CR, _
	&quot;dialog1.experimental.options.string=&quot;, Config(pi_experimental_options_string), CR, _
	&quot;dialog1.external.path.string=&quot;, Config(pi_external_path_string), CR, _
	&quot;dialog1.experimental.path.string=&quot;, Config(pi_experimental_path_string), CR, _
	&quot;dialog1.use.smart.select.integer=&quot;, Config(pi_use_smart_select_integer), CR, _
	&quot;dialog1.display.language.string=&quot;, Config(pi_display_language_string), CR), &quot;&quot;)
	CreateFile(configFilePath, sA, &quot;&quot;)
	Exit Sub
	tts_config_writeFileErr:
	ResetAll()
End Sub


Sub tts_config_parseFile( _
	ByVal configFilePath As String, _
	Config() As Variant, _
	errorCode As Integer)
	&apos; Parses the configuration file into an array.
	&apos;
	&apos; Parameters:
	&apos; configFilePath (in) The path to the configuration file
	&apos; Config() (in out) The configuration settings to update with settings
	&apos;				   from the file.
	&apos; errorCode (in out) The Error parameter.
	&apos;
   On Local Error GoTo tts_config_parseFileErr
	Dim sA As String
	Dim CR As String : CR = Chr(13)
	Dim CR2 As String : CR2 = Chr(10)
	Dim key As String
	Dim value As String
	Dim msgs() As Variant
	Dim _items As Variant
	Dim _item As String
	Dim _pair As Variant
	Dim x As Integer

	If Not FileExists(configFilePath) Then
		&apos; Use defaults
		Config = fvTts_config_createDefaultConfig(msgs(), errorCode)
		Exit Sub
	End If

	sA = getLimitedTextFromFile(configFilePath)
	
	If InStr(sA, &quot;dialog1.&quot;) = 0 Then
		&apos; Use defaults: wrong keys or could not read the file.
		Config = fvTts_config_createDefaultConfig(msgs(), errorCode)
		Exit Sub
	End If

	_items = Split(sA, CR)
	If UBound(_items) = 0 Then
		_items = Split(sA, CR2)
	End If
	For Each _item In _items
		If Instr(_item, &quot;=&quot;) = 0 Or Instr(_item, &quot;#&quot;) = 1 Then
			GoTo ContinueParsing
		End If
		_pair = Split(_item, &quot;=&quot;)
		key = Trim(_pair(LBound(_pair)))
		value = &quot;&quot;
		If Ubound(_pair) &lt;&gt; 0 Then
			For x = 1 To Ubound(_pair)
				Select Case x
					Case Ubound(_pair)
					value = value &amp; _pair(x)
					Case Else
					value = value &amp; _pair(x) &amp; &quot;=&quot;
				End Select 
			Next	
		End If
		If Len(key) &lt;&gt; 0 And Len(value) &lt;&gt; 0 Then
			Select Case key
				Case &quot;dialog1.use.experimental.boolean&quot;
					Config(pi_use_experimental_boolean) = fbTts_util_stringToBoolean(Trim(value))
				Case &quot;dialog1.experimental.path.string&quot;
					Config(pi_experimental_path_string) = Trim(value)
				Case &quot;dialog1.experimental.options.string&quot;
					Config(pi_experimental_options_string) = Trim(value)
				Case &quot;dialog1.use.external.boolean&quot;
					Config(pi_use_external_boolean) = fbTts_util_stringToBoolean(Trim(value))
				Case &quot;dialog1.external.path.string&quot;
					Select Case fsTheOsId()
						Case &quot;POSIX&quot;, &quot;POSIX.APPIMAGE&quot;, &quot;POSIX.SNAP&quot;, &quot;MACOS&quot;
							If InStr(value, &quot;/python&quot;) &lt;&gt; 0 And Not fbExperimentalMode() Then
								Config(pi_external_path_string) = ConvertFromUrl(BundlePyPath())
							Else
								Config(pi_external_path_string) = Trim(value)
							End If
						Case Else
							Config(pi_external_path_string) = Trim(value)
					End Select
				Case &quot;dialog1.external.options.string&quot;
					Config(pi_external_options_string) = value
					Select Case fsTheOsId()
						Case &quot;POSIX&quot;, &quot;POSIX.APPIMAGE&quot;, &quot;POSIX.SNAP&quot;, &quot;MACOS&quot;
							If InStr(value, &quot;/python&quot;) &lt;&gt; 0 And Not fbExperimentalMode() Then
								Config(pi_external_options_string) = &quot;&quot;
							End If
					End Select
				Case &quot;dialog1.use.html.boolean&quot;
					Config(pi_use_html_boolean) = fbTts_util_stringToBoolean(Trim(value))
				Case &quot;dialog1.html.string&quot;
					Config(pi_html_string) = Trim(value)
				Case &quot;dialog1.anonymous.key.string&quot;
					Config(pi_anonymous_key_string) = Trim(value)
				Case &quot;dialog1.display.info.integer&quot;
					Config(pi_display_info_integer) = fiStringToInteger(Trim(value))
				Case &quot;dialog1.display.language.string&quot;
					Config(pi_display_language_string) = Trim(value)
				Case &quot;dialog1.use.smart.select.integer&quot;
					Config(pi_use_smart_select_integer) = Trim(value)
			End Select
		End If
		ContinueParsing:
	Next
	f_CaReadTextExtensionCurrentConfig = Config
	Exit Sub
tts_config_parseFileErr:
	ResetAll()
End Sub


Function fsSuperTrim( _
	ByVal sA As String, _
	ByVal unwanted_chrs As String) As String
	&apos; Trim extra unwanted characters from left and right
	&apos; of a string - like python `strip`
	&apos; * `sA` - The string to trim
	&apos; * `unwanted_chrs` - String of characters to strip
	&apos;    in the form `Chr(10) &amp; Chr(13)` or `&quot;,:;-&quot;.`
	If Len(unwanted_chrs) = 0 Then
		unwanted_chrs = Chr(10) &amp; Chr(13)
	End If
	Dim n As Integer
	Dim limit as Integer
	limit = 100
	If Len(sA) &lt; limit Then
		limit = Len(sA)
	End If
	For n = 1 To limit
		sA = Trim(sA)
		If Len(sA) = 0 Then
			Exit For
		ElseIf Instr(unwanted_chrs, Right(sA, 1)) &lt;&gt; 0 Then
			sA = Left(sA, Len(sA) - 1)
			sA = Trim(sA)
		Else
			Exit For
		End If
	Next
	For n = 1 to limit
		sA = Trim(sA)
		If Len(sA) = 0 Then
			Exit For
		ElseIf Instr(unwanted_chrs, Left(sA, 1)) &lt;&gt; 0 Then
			sA = Mid(sA, 2)
			sA = Trim(sA)
		Else
			Exit For
		End If
	Next		
	fsSuperTrim = sA
End Function


Function fsRetrieveCalcActiveCellProperty( _
	strA) As String
	&apos; Modified from sub from: Paolo Mantovani
	&apos; email: mantovani.paolo@tin.it
	&apos; published at https://sourceforge.net/projects/ooomacros/files/Andrew%20Pitonyak_s%20Macro%20Doc/2006-01-25/AndrewMacro_2006-01-25.zip/download
	&apos; Gets property of the active cell.
	Dim oOldSelection  &apos;The original selection of cell ranges
	Dim oRanges  &apos;A blank range created by the document
	Dim oActiveCell  &apos;The current active cell
	Dim sCellContent As String
	
	Rem store the current selection
	oOldSelection = ThisComponent.CurrentSelection
	oRanges = ThisComponent.createInstance(&quot;com.sun.star.sheet.SheetCellRanges&quot;)
	ThisComponent.CurrentController.Select(oRanges)
	&apos;get the active cell!
	oActiveCell = ThisComponent.CurrentSelection
	Select Case strA
		Case &quot;country&quot;
		sCellContent = oActiveCell.CharLocale.Country
		Case &quot;language&quot;
		sCellContent = oActiveCell.CharLocale.Language
		Case &quot;asian-language&quot;
		sCellContent = oActiveCell.CharLocaleAsian.Language
		Case &quot;complex-language&quot;
		sCellContent = oActiveCell.CharLocaleComplex.Language
		Case &quot;asian-country&quot;
		sCellContent = oActiveCell.CharLocaleAsian.Country
		Case &quot;complex-country&quot;
		sCellContent = oActiveCell.CharLocaleComplex.Country
		Case Else
		sCellContent = oActiveCell.getString()
	End Select
	&apos;restore the old selection (but loosing the previous active cell)
	ThisComponent.CurrentController.Select(oOldSelection)
	fsRetrieveCalcActiveCellProperty = sCellContent
End Function


Function fsGetPackageDirURL( _
	sIdentifier As String) As String
	&apos;http://www.oooforum.org/forum/viewtopic.phtml?t=72633
	Dim oPIP As Object
	
	oPIP = GetDefaultContext().getByName( _
	&quot;/singletons/com.sun.star.deployment.PackageInformationProvider&quot;)
	fsGetPackageDirURL = oPIP.getPackageLocation(sIdentifier)
End Function


Function fsGetPicturePath() As String
	Dim oDialog
	Dim oAllFiles
	Dim oFrame
	Dim oBar
	Dim sFilePickerArgs
	
	On Error Goto fsGetPicturePathErr
	oDialog = createUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	sFilePickerArgs = Array(com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_LINK_PREVIEW)
	oDialog.Initialize(sFilePickerArgs())
	oDialog.setMultiSelectionMode(0)
	oDialog.AppendFilter( &quot;JPEG, PNG&quot;, &quot;*.jpeg;*.jpg;*.png&quot;)
	oDialog.AppendFilter( &quot;BMP, GIF, JPEG, PNG, TIF, TGA&quot;, &quot;*.bmp;*.gif;*.&quot; &amp; _
	&quot;jpeg;*.jpg;*.png;*.tif;*.tiff;*.tga&quot;)
	oDialog.setTitle(fsLookUpTerm(&quot;s_read-text&quot;) &amp; _
	&quot; - &quot; &amp; &quot; (MY_IMAGE)&quot;)
	If oDialog.execute = 0 Then
		fsGetPicturePath = ConvertFromUrl(fsPosterImg()) &apos;Default picture
	End If
	oAllFiles() = oDialog.getFiles()
	fsGetPicturePath = ConvertFromUrl(oAllFiles(0))
	If fsGetPicturePath = &quot;&quot; Then
		fsGetPicturePath = ConvertFromUrl(fsPosterImg()) &apos;Default picture
	End If
	Exit Function
	fsGetPicturePathErr:
	
	fsGetPicturePath = &quot;&quot;
End Function


Function CreatePoint( _
	ByVal x As Long, _
	ByVal y As Long) As com.sun.star.awt.Point
	&apos; OpenOffice.org Macros Explained, Third Ed., 2015. [Andrew Pitonyak](http://www.pitonyak.org)
	Dim oPoint
	oPoint = createUnoStruct( &quot;com.sun.star.awt.Point&quot; )
	oPoint.X = x
	oPoint.Y = y
	CreatePoint = oPoint
End Function


Function CreateSize( _
	ByVal x As Long, _
	ByVal y As Long) As com.sun.star.awt.Size
	&apos; OpenOffice.org Macros Explained, Third Ed., 2015. [Andrew Pitonyak](http://www.pitonyak.org)
	Dim oSize
	oSize = createUnoStruct( &quot;com.sun.star.awt.Size&quot; )
	oSize.Width = x
	oSize.Height = y
	CreateSize = oSize
End Function


Sub ChangeBackground( _
	ByVal i, _
	ByVal r1, _
	ByVal g1, _
	ByVal b1)
	&apos;AndrewMacro.odt - [Andrew Pitonyak](http://www.pitonyak.org)
	Dim oDoc As object
	Dim oDrawPages As object
	Dim oDrawPage As object
	Dim oBackground As object
	
	oDoc = ThisComponent
	If oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) Or _
		oDoc.supportsService(&quot;com.sun.star.drawing.DrawingDocument&quot;) Then
		oDrawPages = oDoc.getDrawPages()
		oDrawPage = oDrawPages.getByIndex(i)
		oBackground = oDoc.createInstance(&quot;com.sun.star.drawing.Background&quot;)
		oBackground.FillColor = RGB(r1, g1, b1)
		oDrawPage.Background = oBackground
	End If
End Sub


Function PlaySound(s_soundpath as string) As Boolean
	&apos; Return `True` if there is no error. For Windows and Linux. Adapted from:
	&apos; &lt;https://forum.openoffice.org/en/forum/viewtopic.php?p=387091&amp;sid=3eead031a698db5d92833cf3df9bfaad#p387091&gt;
	&apos; &lt;https://opengrok.libreoffice.org/xref/core/avmedia/source/macavf/avmediaMacAVF.component?r=43d2f3d5&gt;
	&apos; On supported platforms, the function blocks BASIC code execution while the sound is playing.
	PlaySound = False
	If Len(s_soundpath) = 0 Then Exit Function
	On Error GoTo PlaySoundErr
	Dim oPlayer1 As Object
	Dim sUrlSound As String
	Dim oSounMgr As Object
	Dim Player As String : Player = &quot;&quot;
	Dim ErrNo As Integer : ErrNo = 0
	
	sUrlSound = ConvertToUrl(s_soundpath)

	If Not FileExists(sUrlSound) And Instr(sUrlSound, &quot;file://&quot;) = 1 Then	   
		MsgBox sUrlSound &amp; &quot; does not exist&quot;, 16
		Exit Function
	End If
	Select Case fsTheOsId()
	Case &quot;WINDOWS.WINE&quot;
		Exit Function
	Case &quot;POSIX.APPIMAGE&quot;
		PlaySound = webHelp(sUrlSound)
		Exit Function
	End Select

	If GetGuiType() = 1 Then
		For Each Player in Array(_
			fsFindAppPath(&quot;VideoLAN/VLC/vlc.exe&quot;))
			If Len(Player) &gt; 0 Then
				ErrNo = Shell(Player, 6, &quot;--intf dummy &quot;&quot;&quot; &amp; sURLSound &amp; _
				&quot;&quot;&quot; &quot;&quot;vlc://quit&quot;&quot;&quot;, True)
				PlaySound = ErrNo = 0
				Exit Function
			End If
		Next
		Select Case inStr(sUrlSound, &quot;file://&quot;)
			Case 1
			oSounMgr = CreateUnoService(&quot;com.sun.star.media.Manager_DirectX&quot;)
			
			Case Else
			&apos; `oPlayer1.isPlaying` is unreliable using DirectX with online content. The
			&apos; `webHelp command intiates the default player or web browser.
			PlaySound = webHelp(sUrlSound)

		End Select
	ElseIf fsGetOs() = &quot;POSIX&quot; Then
		If fbPySupportFStrings() Then
			oSounMgr = CreateUnoService(&quot;com.sun.star.comp.media.Manager_GStreamer&quot;)
		Else
			PlaySound = webHelp(sUrlSound)
			Exit Function	
		End If
	Else
		oSounMgr = CreateUnoService(&quot;com.sun.star.media.Manager_MacAVF&quot;)
	End If
	
	If Not IsNull(oSounMgr) Then
		oPlayer1 = oSounMgr.createPlayer(sUrlSound)
		With oPlayer1
			.setMediaTime(0.0)
			.setVolumeDB(-10) &apos; Adjust volume as needed
			.setPlayBackLoop(0) &apos; Set to 1 if you want to loop
			.start(0)
			While .isPlaying()
				DoEvents
			Wend
		End With
		oPlayer1 = Nothing
		oSounMgr = Nothing
		PlaySound = True
	End If
	Exit Function
	PlaySoundErr:
	PlaySound = False
End Function


Function UpdateSpeechDispatcher(byVal sModel As String) As Boolean
	&apos; On an installed ONNX voice model, `Dialog4` can update Speech Dispatcher
	&apos; settings. Returns `True` if the voice model is fully qualified with a
	&apos; language, name, quality, and voice number and if running the command
	&apos; causes no error.
	&apos;
	&apos; The Dialog4 button **should** be disabled or hidden if it is not usable for
	&apos; editing the speech dispatcher local settings.
	&apos;
	&apos; If the application does not support `speech-dispatcher`, show a sample
	&apos; phrase using a supported language in a web browser.
	UpdateSpeechDispatcher = False
	Dim ErrorCode : ErrorCode = 0
	Dim bWait : bWait = False
	Dim sProgram As String : sProgram = PosixPythonPath()
	Dim sCommand As String : sCommand = &quot;&quot;
	Dim Item As Variant
	Dim Divider() As String
	Dim FoundMatch As Boolean : FoundMatch = False
	Dim SampleTextURLIndex As Integer : SampleTextURLIndex = 9
	Dim default_model As String : default_model = &quot;en_GB-jenny_dioco-medium#0&quot;


	For Each Item in Array(sModel, default_model)
		On Local Error Resume Next
		For Each Divider in Array(_
		Array(&quot;_&quot;, 1), _
		Array(&quot;#&quot;, 1), _
		Array(&quot;-&quot;, 2) _
		)
			If Len(sModel) = 0 Then
				sModel = default_model
			End If
			If Ubound(Split(Item, Divider(0))) = Divider(1) Then
				sModel = Item
				FoundMatch = True
				Exit For

			End If
			If FoundMatch Then
				Exit For

			End If
		Next
	Next
	Select Case fsTheOsId()
		Case &quot;POSIX&quot;
		If fbPiperTtsOk(&quot;&quot;) Then
			sCommand = &quot;&quot;&quot;&quot; &amp; ConvertFromUrl(fsMyURL() &amp; &quot;/python/spd_say_set.py&quot;) &amp; _
			&quot;&quot;&quot; &quot; &amp; sModel
		Else
			sCommand = &quot;&quot;&quot;&quot; &amp; ConvertFromUrl(fsMyURL() &amp; &quot;/python/update_piper.py&quot;)
		End If
		ErrorCode = Shell(_
		converttourl(_
		sProgram), 0, sCommand, bWait)

		Case &quot;WINDOWS.EXPERIMENTAL&quot;, &quot;WINDOWS&quot;
		If fbPiperTtsOk(&quot;&quot;) Then
			webHelp(GetModelCard(SanitizeModel(sModel), SampleTextURLIndex))
		Else
			sCommand = &quot;&quot;&quot;&quot; &amp; ConvertFromUrl(fsMyURL() &amp; &quot;/python/update_piper.py&quot;)
			ErrorCode = Shell(_
			converttourl(_
			sProgram), 0, sCommand, bWait)

		End If
		Case Else
		&apos; The office application cannot use speech-dispatcher, so do not create or
		&apos; overwrite any files. We show some sample online Text in the default web
		&apos; browser. NOTE: After testing, link to online WMD editor like 
		&apos; &lt;https://try.commonmark.org&gt;, but accessible.
		webHelp(GetModelCard(SanitizeModel(sModel), SampleTextURLIndex))

	End Select
	UpdateSpeechDispatcher = (ErrorCode = 0)
End Function


</script:module>
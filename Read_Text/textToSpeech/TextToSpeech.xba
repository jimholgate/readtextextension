<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TextToSpeech" script:language="StarBasic">Rem *  *  *  *  * BASIC *  *  *  *  *
&apos; TextToSpeech
Option Explicit
&apos;&apos; # Read Text Extension
&apos;&apos; 
&apos;&apos; ##  ![About Read Text Extension][1]
&apos;&apos; 
&apos;&apos; **Read Text** reads text aloud, saves audio or video files from text,
&apos;&apos; and can use resources from the web based on the selected text.
&apos;&apos; 
&apos;&apos; -   Select text.
&apos;&apos; -   Click the *Read selection…* button.
&apos;&apos; -   To read aloud, accept the default in the dialogue, or choose another
&apos;&apos;     action from the menus.
&apos;&apos; 
&apos;&apos; ## Features
&apos;&apos; 
&apos;&apos; -   Automatically change languages according to the text language.
&apos;&apos; -   Create sound or still-image speech files for listening on the go.
&apos;&apos; -   Use web resources to translate, look up, listen, post, or interface
&apos;&apos;     with web applications.
&apos;&apos; -   Get help by pressing the **\[F1\]** key while your computer shows
&apos;&apos;     a Read Text Extension dialog.
&apos;&apos; 
&apos;&apos; ## Installation
&apos;&apos; 
&apos;&apos; Get *Read Text* from the download page and install it by double-clicking
&apos;&apos; it.
&apos;&apos; 
&apos;&apos; -   [Apache OpenOffice][2]
&apos;&apos; -   [LibreOffice][3]
&apos;&apos; -   [GitHub][4]
&apos;&apos; 
&apos;&apos; ### Mixed Asian, Complex and Western Text
&apos;&apos; 
&apos;&apos; Speech synthesis for text with mixed Asian, complex and western contents
&apos;&apos; may not work as you expect.
&apos;&apos; 
&apos;&apos; -   In writer, you can check the language of the selected text in the
&apos;&apos;     status bar. *Mixed* text includes an ambiguous or undefined text
&apos;&apos;     string.
&apos;&apos; -   if mixed text is interpreted as undefined or western, the speech
&apos;&apos;     synthesizer might be silent or it might spell our character codes
&apos;&apos;     instead of using Asian or complex speech synthesis.
&apos;&apos; 
&apos;&apos; ------------------------------------------------------------------------
&apos;&apos; 
&apos;&apos; ## Procedures
&apos;&apos; 
&apos;&apos; Procedures are called from menu items or from the tool bar.
&apos;&apos; 
&apos;&apos; ### Use *Read Selection* on the tool bar
&apos;&apos; 
&apos;&apos; The first time you use this command on a supported platform, the
&apos;&apos; extension reads text aloud, then if you click it while the 
&apos;&apos; computer is talking, it stops talking.
&apos;&apos; 
&apos;&apos; ### Tools - Add-ons - Read Selection…
&apos;&apos; 
&apos;&apos; On supported platforms, you can use this to manage the extension options.
&apos;&apos; The ability to change the default options could be disabled on some
&apos;&apos; computers. In this case, the menu item works like the *Read Selection*
&apos;&apos; button on the tool bar.
&apos;&apos; 
&apos;&apos; ### Tools - Add-ons - Read Clipboard
&apos;&apos; 
&apos;&apos; Use this to read the clipboard from any module that supports a text
&apos;&apos; clipboard, including the Macro editor. You normally fill the clipboard
&apos;&apos; by selecting some text, then using *Edit - Copy*. if this is useful,
&apos;&apos; assign a key combination to the macro with *Tools - Customize*.
&apos;&apos; 
&apos;&apos; #### Clipboard disabled?
&apos;&apos; 
&apos;&apos; if the program shows an input box when you select *Tools - Read
&apos;&apos; Clipboard* it is because the current version of the office suite or the
&apos;&apos; computer platform doesn’t read the clipboard reliably. Please paste text
&apos;&apos; into the input box.
&apos;&apos; 
&apos;&apos; #### Resetting the clipboard lock
&apos;&apos; 
&apos;&apos; On current versions of the extension, reset the lock by entering the
&apos;&apos; token `(RESET_ALL)` in the the *External program* box in the main
&apos;&apos; dialogue. 
&apos;&apos; 
&apos;&apos; On legacy versions of the extension you can do the same by typing
&apos;&apos; some random characters into the *External program* box in the main
&apos;&apos; dialogue. The extension shows an error message and deletes the settings
&apos;&apos; files that the extension creates. When you click the *Read Selection*
&apos;&apos; button, the settings are rebuilt from scratch.
&apos;&apos; 
&apos;&apos; ### Exporting Audio Files
&apos;&apos; 
&apos;&apos; Some computers are able to export audio files using a system interface (API).
&apos;&apos; Some are able to export audio files if you install specialized software.
&apos;&apos; However, your computer might not support exporting speech synthesis to an
&apos;&apos; audio file or your system administrator might disable it.
&apos;&apos; 
&apos;&apos; For those platforms that support exporting audio files, including cover
&apos;&apos; art requires a compatible converter program like [Nero AAC Encoder][5],
&apos;&apos; [Avconv][6], [FFmpeg][7] or [iTunes][8].
&apos;&apos; 
&apos;&apos; ---
&apos;&apos; 
&apos;&apos; (c) [James Holgate][9], 2024.
&apos;&apos; 
&apos;&apos;   [1]: https://github.com/jimholgate/readtextextension/blob/master/Read_Text/images/textToSpeechAbout_64h.png?raw=true
&apos;&apos;   [2]: https://extensions.services.openoffice.org/en/project/read-text
&apos;&apos;   [3]: https://extensions.libreoffice.org/en/extensions/show/read-text
&apos;&apos;   [4]: https://github.com/jimholgate/readtextextension
&apos;&apos;   [5]: https://www.nero.com
&apos;&apos;   [6]: https://libav.org/
&apos;&apos;   [7]: https://www.ffmpeg.org
&apos;&apos;   [8]: https://www.apple.com/itunes/
&apos;&apos;   [9]: https://raw.githubusercontent.com/jimholgate/readtextextension/master/Read_Text/registration/LICENSE?raw=true

Private s_CaReadTextExtensionLastSpokenDocTitle As String
Private i_CaReadTextExtensionLastSpokenTrack As Integer
Private s_CaReadTextExtensionWorkingCountryLanguage As String
Private b_CaReadTextExtensionHideExports As Boolean
Private i_CaReadTextExtensionWinItunesVersion As Integer
Private s_CaReadTextExtensionLocalHostSpeechURI As String
Private i_CaReadTextExtensionPiperTestResult As Integer
Private s_CaReadTextExtensionCurrentSessionCookie As String
Private s_CaReadTextExtensionCurrentAnonymousKey As String
Private s_CaReadTextExtensionGetOS As String
Private f_CaReadTextExtensionCurrentConfig As Variant
Private i_CheckInitialState As Integer 
Private UpdatePoSettingsDone As Integer
Private mMyTranslationId(0) As Variant
Private mMyTranslationIdPlur(0) As Variant
Private mMyTranslationStr(0,0) As Variant
Private Config As Variant


Sub CheckInitialState()
	Dim s_item As String
	Select Case i_CheckInitialState
	Case 1
	&apos; pass
	Case Else
	&apos; Perform tasks on initial start
	For Each s_item in Array(&quot;lock&quot;, &quot;net_speech&quot;, &quot;bat&quot;)
		fbRemoveFile(fsMyTempLock(s_item))
	Next
	i_CheckInitialState = 1
	End Select
End Sub


Function fsAboutScriptHint(file_spec)
	On Error GoTo fsAboutScriptHintErr
	fsAboutScriptHint = &quot;OS ID : &quot; &amp; fsTheOsId()
	If FileExists(file_spec) Then
		fsAboutScriptHint = &quot;OS ID : &quot; &amp; fsTheOsId() &amp; &quot;; REV : &quot; &amp; FileDateTime(file_spec)
	End If
	Exit Function
	fsAboutScriptHintErr:
	fsAboutScriptHint = &quot;&quot;
End Function


Function JavaSettingFile() As String
	&apos; Returns java settings file path in the URI format
	&apos; i. e.: `file:///home/user/.config/libreoffice/4/config/&lt;file&gt;.xml`
	JavaSettingFile = &quot;&quot;
	Dim sPath As String
	Dim sDir as String
	Dim sValue as String
	
	sPath = CreateUNOService(_
		&quot;com.sun.star.util.PathSettings&quot;).userConfig
	sValue = Dir$(sPath + getPathSeparator + &quot;java*.xml&quot;, 0)
	Do
		If sValue &lt;&gt; &quot;.&quot; and sValue &lt;&gt; &quot;..&quot; Then
		sDir = sValue
		End If
		sValue = Dir$
	Loop Until sValue = &quot;&quot;
	If Len(sDir) Then
		JavaSettingFile = sPath &amp; &quot;/&quot; &amp; sDir
	End If
End Function


Function fbJavaActive() As Boolean
	fbJavaActive = False
	On Error GoTo fbJavaActiveErr
	Dim s1 As String  : s1 = JavaSettingFile()
	Dim Content As String : Content = &quot;&quot;
	Dim sLook As String : sLook = &quot;&quot;
	If FileExists(s1) Then
		Content = getLimitedTextFromFile(s1)
		For Each sLook in Array(&quot;&lt;enabled xsi:nil=&quot;&quot;true&quot;&quot;&quot;, &quot;&lt;enabled xsi:nil=&quot;&quot;-1&quot;&quot;&quot;)
			If Instr(Content, sLook) &lt;&gt; 0 Then
				fbJavaActive = True
				Exit Function
			End If
		Next
	End If
	Exit Function
	fbJavaActiveErr:
	fbJavaActive = False
End Function


Function fbStandardPosix()
	&apos; Quick check if the os filesystem has a standard posix file structure.
	&apos; and that it does not have not standard or temporary folders in the
	&apos; path.
	On Local Error GoTo fbStandardPosixErr
	fbStandardPosix = False
	Dim EnviroPath$ : EnviroPath = Environ(&quot;PATH&quot;)
	Select Case Getattr(&quot;/usr/local/&quot;)
		Case 17, 16
		If Instr(EnviroPath, &quot;:/tmp/.mount_&quot;) = 0 Then
			If Instr(EnviroPath, &quot;/app/sbin:/app/bin:/usr/sbin:/usr/bin&quot;) = 0 Then
				If Instr(EnviroPath, &quot;/snap/&quot;) = 0 Then
					fbStandardPosix = True
				End If
			End If
		End If
	End Select
	Exit Function
	fbStandardPosixErr:
	&apos; `FileNotFoundError` because `GetAttrib` cannot locate the file or directory.
	fbStandardPosix = False
End Function


Function fbReadOnlyCode() As Boolean
	&apos; If this extension is installed as a shared extension then
	&apos; the code in the Macro editor is read only.
	On Error GoTo fbReadOnlyCodeErr
	fbReadOnlyCode = Instr(fsMyURL(), &quot;/&quot; &amp; fsUser() &amp; &quot;/&quot;) = 0
	Exit Function
	fbReadOnlyCodeErr:
	fbReadOnlyCode = True
End Function


Function fbTestLibraryLoaded(_library As String) As Boolean
	fbTestLibraryLoaded = False 
	On Error GoTo fbTestLibraryLoadedErr
	If Not GlobalScope.BasicLibraries.isLibraryLoaded(_library) Then
		GlobalScope.BasicLibraries.LoadLibrary(_Library)
	End If
		fbTestLibraryLoaded = True
	Exit Function
	fbTestLibraryLoadedErr:
End Function


Function fbHaveSnap() As Boolean
	&apos; By default, Snap Ubuntu installations run in strict containment mode and
	&apos; therefore might not be able to access certain paths, programs, data etc.
	fbHaveSnap = False
	On Local Error GoTo fbHaveSnapErr
	Select Case getGUIType()
	Case 4
		fbHaveSnap = shell(&quot;snap&quot;, 0, &quot; --version &gt; /dev/null&quot;) = 0
	End Select
	Exit Function
	fbHaveSnapErr:
	fbHaveSnap = False
End Function


Function fbDefaultToSpeechDispatcher() As Boolean
	&apos; Implies that the python3 `speechd` (speech-dispatcher) library is current.
	&apos; https://help.libreoffice.org/latest/en-US/text/sbasic/python/main0000.html
	If fbIsLibreOffice() Then
		fbDefaultToSpeechDispatcher = GetSolarVersion() &gt; 70400
	ElseIf fsTheOsId() = &quot;WINDOWS.WINE&quot; Then
		fbDefaultToSpeechDispatcher = True
	Else
		&apos; Is python current?
		fbDefaultToSpeechDispatcher = False
	End If
End Function


Function fbPySupportFStrings() As Boolean
	&apos; Supports strings with fields using `f(&quot;Version {solar_version}&quot;)`
	fbPySupportFStrings = GetSolarVersion() &gt; 60406
End Function


Sub ReadTextAloud()
&apos; Use *Read Selection* on the tool bar
	Dim sFile As String : sFile = fsExtensionSettingsIni()
	Dim msgs()As Variant
	Dim errorCode As Integer : errorCode = 0
	Dim Config(fiUboundConfigOptions()) As Variant
	Dim locklist As Variant : locklist = Array(&quot;lock&quot;)
	Dim LockItem As String : LockItem = &quot;&quot;
	Dim bDone As Boolean : bDone = False
	CheckInitialState
	Select Case fsTheOsId()
	Case &quot;POSIX&quot;, &quot;POSIX.EXPERIMENTAL&quot;
		locklist = Array(&quot;lock&quot;, &quot;net_speech&quot;)
		&apos; Don&apos;t show the dialog on first run.
		&apos; Load default settings.
		If Not FileExists(sFile) and fbDefaultToSpeechDispatcher() Then
			MsgSpeak(fsGetTextSelection(False, True))
			Exit Sub
		End If
	Case &quot;WINDOWS&quot;, &quot;WINDOWS.EXPERIMENTAL&quot;, &quot;WINDOWS.NOSCRIPT&quot;
		If Not FileExists(sFile) Then
				&apos; Don&apos;t show the dialog on first run.
				fsNetSAPI5WindowsSpeech(_
			fsGetTextSelection(False, True), _
				fsSelectionLanguageAndRegion(False), _
			)
				Exit Sub
			End If
	Case &quot;MACOS&quot;, &quot;MACOS.EXPERIMENTAL&quot;, &quot;WINDOWS.WINE&quot;
		&apos; No working Windows SAPI
		&apos; Don&apos;t show the dialog on first run.
		&apos; Load default settings.
		If Not FileExists(sFile) Then
			MsgSpeak(fsGetTextSelection(False, True))
			Exit Sub
		End If
	End Select

	If FileExists(sFile) Then
		tts_config_parseFile(sFile, Config(), errorCode)
		If Config(pi_display_info_integer) = 1 Then
			ConfigureReadTextAloud()
		Else
			On Error Resume Next
			ClearWorkingCountryLanguage()
			For Each LockItem in locklist
				If FileExists(fsMyTempLock(LockItem)) Then
					&apos; Check file size so that the script pauses and
					&apos; succeeds at deleting files on slow drives.
					If FileLen(fsMyTempLock(LockItem)) = 0 Then
						wait 0.25
					End If
					fbRemoveFile(fsMyTempLock(LockItem))
					bDone = True
				End If
			Next
			If bDone Then
				resetSpeechDispatcher(True)
			Else
				ttsActuate(Config(), _
				msgs(), _
				errorCode, _
				&quot;&quot;)
			End If
		End If
	Else
		ConfigureReadTextAloud()
	End If
End Sub


Sub SetupReadTextAloud
&apos; Tools - Add-ons - Read Selection...
	CheckInitialState
	Select Case getGUIType()
	Case 1
	&apos; Some versions of Windows will disable `wscript.exe`. In this case the
	&apos; script defaults to using the built-in office NET scripting environment to
	&apos; enable reading the selected text aloud. Visual Basic Script (vbs) might be
	&apos; available as an optional Windows add-in. If you enable the option, then
	&apos; this menu item will behave normally.
		If Len(WinSpeechProgramPath()) = 0 Then
			fsNetSAPI5WindowsSpeech(fsGetTextSelection(False, True), _
			fsSelectionLanguageAndRegion(False))
			Exit Sub
		End If
	End Select
	ConfigureReadTextAloud()
End Sub


Sub ReadClipBoard
&apos; Tools - Add-ons - Read Clipboard
	Dim s1$
	s1 = fsFullPathOf(&quot;ReadClipBoard.lock&quot;)
	Dim s2$
	s2 = &quot;&quot;
	On Error Goto ReadClipBoardErr
	CheckInitialState
	ClearWorkingCountryLanguage
	If FileExists(fsMyTempLock(&quot;lock&quot;)) Then
		resetSpeechDispatcher(True)
	Else
		If FileExists(s1) Or fbClipBoardAvailable() = False Then
			If FileExists(s1) Then
				If fsGetSetting(&quot;oosetupversion&quot;) &lt;&gt; getLimitedTextFromFile(s1) Then
					&apos; You updated office after a crash, so resume
					&apos; the normal operation on the next run.
					fbRemoveFile(s1)
				End If
			End If
			s2 = InputBox( _
			fsLookUpTerm( _
			fsSelectionLanguage()), _
			fsLookUpTerm( _
			&quot;s_read-text&quot;), _
			&quot; &quot;)
			If Not(s2 = &quot;&quot;) Then
				msgSpeak(s2)
			End If
		Else
			CreateFile(s1, fsGetSetting(&quot;oosetupversion&quot;), &quot;&quot;)
			fsGetClipBoard(False)
			&apos; Try it - if it crashes, then we are left with the lock file
			fbRemoveFile(s1)
			msgSpeak(fsGetClipBoard(True))
		End If
	End If
	Exit Sub
	ReadClipBoardErr:
	
	MsgBox fsLookUpTerm( _
	&quot;s_string-cannot-be-analyzed&quot;) &amp; _
	Chr(10) &amp; _
	Chr(10) &amp; _
	&quot;`TextToSpeech:fsGetClipBoard()`&quot;, _
	0, _
	fsLookUpTerm( _
	&quot;s_read-text&quot;)
End Sub


Function FsRefreshAppImagePythonPath(byVal sPythonPath As String) As String
	&apos; Test stale AppImage Location. Try to update the python path; return the
	&apos; path if found, or `&quot;&quot;` if not found. `&quot;POSIX.APPIMAGE&quot;`
	FsRefreshAppImagePythonPath = &quot;&quot;
	On Error GoTo FsRefreshAppImagePythonPathErr
	ps_appimageresourcepath = &quot;&quot;
	FsRefreshAppImagePythonPath = fsAppImageResourcePath(&quot;python&quot;)
	Exit Function
	FsRefreshAppImagePythonPathErr:
	FsRefreshAppImagePythonPath = &quot;&quot;
End Function


Sub ResetAll()
	&apos; Reset the extension to the original settings on error or dialog option to
	&apos; `&quot;(RESET_ALL)&quot;`
	fbRemoveFile(fsExtensionSettingsIni())
	fbRemoveFile(fsFullPathOf(&quot;ReadClipBoard.lock&quot;))
	resetSpeech()
	f_CaReadTextExtensionCurrentConfig = Array()
End Sub


Function UboundCurrentConfigItems() As Integer
	&apos; Reliably report the ubound value of items in the current configuration.
	&apos; The value of Ubound corresponds to the highest legal value for `x`
	&apos; in a statement like `For x = 0 to UboundCurrentConfigItems()`
	&apos; If the `f_CaReadTextExtensionCurrentConfig` variant is not initiated,
	&apos; then it returns a value of `1`, so `UboundCurrentConfigItems - 1`
	&apos; represents the count of the items.
	On Error GoTo UboundCurrentConfigItemsErr
	UboundCurrentConfigItems = ubound(f_CaReadTextExtensionCurrentConfig)
	Exit Function
	UboundCurrentConfigItemsErr:
	UboundCurrentConfigItems = -1
End Function


Sub ReadImpress()
&apos; Tools - Add-ons - Impress-View
	PresentSelection2(fsGetLanguage())
End Sub

Sub testRtl
	PresentSelection2(&quot;ar&quot;)
End Sub

Sub testAsia
	PresentSelection2(&quot;zh&quot;)
End Sub

Sub testLTR
	PresentSelection2(&quot;hi&quot;)
End Sub

Sub PresentSelection2(sB)
	&apos; sB - the language to show.  Defaults to interface language or
	&apos; English if the interface language is not available.
	&apos;
	&apos; sB = &quot;ar&quot;  &apos; Arabic - RTL complex script
	&apos; sB = &quot;ca&quot;  &apos; Catalan language -- not country of Canada.
	&apos; sB = &quot;de&quot;  &apos; German is the original language of StarOffice
	&apos; sB = &quot;en&quot;  &apos; case else (English default)
	&apos; sB = &quot;es&quot;  &apos; Spanish (International)
	&apos; sB = &quot;fi&quot;  &apos; Finnish
	&apos; sB = &quot;fr&quot;  &apos; French (International)
	&apos; sB = &quot;hi&quot;  &apos; Hindi - LTR complex script (Devanagari)
	&apos; sB = &quot;it&quot;  &apos; Italian
	&apos; sB = &quot;nl&quot;  &apos; Dutch - check word wrap
	&apos; sB = &quot;pl&quot;  &apos; Polish
	&apos; sB = &quot;pt&quot;  &apos; Portuguese (Brazil and Portugual)
	&apos; sB = &quot;ru&quot;  &apos; Russian - Cyrillic script
	&apos; sB = &quot;zh&quot;  &apos; Simplified Chinese - Asian characters
	&apos;
	&apos; # Show Help Template
	&apos;
	&apos; We put the complete sample text in the first slide&apos;s note.
	&apos; Normally, the first slide&apos;s note includes a summary of
	&apos; the selected text contents in point note form and the
	&apos; subsequent slides include a summary on the slide with
	&apos; the full text of each paragraph in the notes.
	&apos;
	&apos; - if there is no specific language selection, the presentation
	&apos;   routines use the user interface language.
	&apos; - As a result,  Right to left languages will only be aligned
	&apos;   to the right margin in the help template if the language of
	&apos;   the user interface is a right to left language.
	&apos;   
	Dim b1 As Boolean
	Dim i As Integer
	Dim j As Integer
	Dim sA As String
	
	ClearWorkingCountryLanguage
	If ThisComponent.supportsService(&quot;com.sun.star.formula.formulaProperties&quot;) Or _
		ThisComponent.supportsService(&quot;com.sun.star.sdb.DatabaseContext&quot;) Then
		b1 = False
	Else
		b1 = True
	End If
	sA = fsGetTextSelection(True, False)
	If FileExists(fsMyTempLock(&quot;lock&quot;)) Then
		resetSpeechDispatcher(True)
	End If
	If Len(sA) &gt; 1 Then
		NewPresentionFromSelection()
		If b1 Then
			&apos; Present slide following the title slide
			wait 1000
			ThisComponent.getcurrentcontroller().setCurrentPage(ThisComponent.drawpages(1))
			ThisComponent.Presentation.Start
			ThisComponent.setModified(False)
		End If
	End If
End Sub


Sub ReadTheSlidenote
&apos; Read the note
	Dim s1 As String
	Dim nPage As Integer
	
	nPage = fiCurrentSlideIndex
	If nPage =  - 1 Or _
		Not(ThisComponent.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;)) Then
		&apos; not a valid index or document
		Exit Sub
	Else
		If FileExists(fsMyTempLock(&quot;lock&quot;)) Then
			resetSpeechDispatcher(False)
		Else
			s1 = ThisComponent.getDrawPages( _
			).getByIndex(nPage _
			).getnotesPage.getByIndex(fiGetSlidenoteIndex _
			).getText( _
			).getString( _
			)
			If fbGoingOnline() Then
				Select Case fiReportOnlineRequest()
					Case 6 &apos; if you click &quot;Yes&quot;,
					msgSpeak(s1)
					Case 7 &apos; if you click &quot;No&quot;,
					ConfigureReadTextAloud()
					Case Else &apos; if you click &quot;Cancel&quot;
					Exit Sub
				End Select
			Else
				msgSpeak(s1)
			End If
		End If
	End If
End Sub


Sub WinStopSpeaking()
	On Error GoTo WinStopSpeakingErr
	Select Case getGUIType()
	Case 1
		Dim speech As Object
		Dim WinSVSFPurgeBeforeSpeak# : WinSVSFPurgeBeforeSpeak = 2
		Dim WinvbNullString$ : WinvbNullString = &quot;&quot;
		Dim WinSVSFlagsAsync# : WinSVSFlagsAsync = 1
		Set speech = Createobject(&quot;Sapi.SpVoice&quot;)
		speech.Speak WinvbNullString, WinSVSFlagsAsync + WinSVSFPurgeBeforeSpeak
		Set speech = Nothing
	End Select
	Exit Sub
	WinStopSpeakingErr:
End Sub


Function WinMarkup(_text As String, _lang As String) As String
	Dim s3 As String : s3 = &quot;&quot;
	Dim a1 As Variant : a1 = Array( _
	fsWindowsCloseMatchLanguage(_lang), _
	fsWindowsCloseMatchLanguage(LCase(Split(_lang, &quot;-&quot;)(0))))
	Dim x As Integer : x = 0
	If Len(_text) = 0 Then
		WinMarkup = &quot;&quot;
		Exit Function
	ElseIf Len(fsFindAppPath(&quot;Microsoft/Edge/Application/msedge.exe&quot;)) = 0 Then
		WinMarkup = _text
		Exit Function
	End If
	For x = Lbound(a1) To Ubound(a1)
		If fbWindowsHasVoiceInThisLanguage(a1(x)) Then
			_text = Replace(_
				Replace(_
					_text, &quot;&gt;&quot;, &quot;&amp;#62;&quot;), &quot;&lt;&quot;, &quot;&amp;#60;&quot;)
			s3 = Join(Array(_
			&quot;&lt;?xml version = &quot;&quot;1.0&quot;&quot;?&gt; &lt;speak version = &quot;&quot;1.0&quot;&quot; xmlns =&quot;, _
			&quot; &quot;&quot;http://www.w3.org/2001/10/synthesis&quot;&quot;&quot;, _
			&quot; xmlns:xsi = &quot;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&quot;&quot;, _
			&quot; xsi:schemaLocation = &quot;&quot;http://www.w3.org/2001/10/synthesis&quot;, _
			&quot; http://www.w3.org/TR/speech-synthesis/synthesis.xsd&quot;&quot;&quot;, _
			&quot; xml:lang = &quot;&quot;&quot;, _
			a1(x), _
			&quot;&quot;&quot;&gt;&quot;, _
			_text, _
			&quot;&lt;/speak&gt;&quot;), &quot;&quot;)
			Exit For
		End If
	Next
	If Len(s3) = 0 Then
		s3 = _text
	End If
	WinMarkup = s3
End Function


Function fsNetSAPI5WindowsSpeech(_
		ByVal sB, _
		ByVal sLang) As String
	&apos; NET tool for Windows that invokes SAPI5 directly.
	&apos;
	&apos; See also: [SpVoice Speak method][InvokeSAPI2]
	&apos;
	&apos; [InvokeSAPI2]: https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ms723609(v=vs.85)
	&apos;
	fsNetSAPI5WindowsSpeech = &quot;&quot;
	Dim s2$ : s2 = &quot;&quot;
	Dim iRate# : iRate = 0
	Dim oFrame
	oFrame = ThisComponent.getCurrentController().getFrame() &apos; Current frame
	Dim oBar
	oBar = oFrame.createStatusIndicator() &apos; Generated status bar
	If fbUsingWine(False) Then
		s2 = fsMyTempLock(&quot;lock&quot;)
		oBar.start(_
		fsLookUpTerm(_
		&quot;s_speech-synthesis&quot;) &amp; &quot; (&quot; &amp; sLang &amp; &quot;)&quot;, 100)
		oBar.Value = 65
		If fbWineSpdSay(sB, sLang) Then
			oBar.Value = 85
			fsNetSAPI5WindowsSpeech = sB
		End If
		oBar.Value = 100	
		oBar.End()	
	Else
		oBar.start(_
			fsLookUpTerm(_
			&quot;s_speech-synthesis&quot;) &amp; &quot; (&quot; &amp; fsWindowsCloseMatchLanguage(sLang) &amp; &quot;)&quot;, 100)
		s2 = fsMyTempLock(&quot;lock&quot;)
		If FileExists(s2) Then
			fbRemoveFile(s2)
			WinStopSpeaking()
			oBar.End()
			Wait 20
			Exit Function
		End If
		oBar.Value = 70
		CreateFile(s2, fsAppSignature(), &quot;&quot;)
		Dim WinSVSFPurgeBeforeSpeak# : WinSVSFPurgeBeforeSpeak = 2
		Dim WinvbNullString$ : WinvbNullString = &quot;&quot;
		Dim WinSVSFlagsAsync# : WinSVSFlagsAsync = 1
		Dim speech As Object
	
		On Local Error GoTo fsNetSAPI5WindowsSpeechErr
		Set speech = Createobject(&quot;Sapi.SpVoice&quot;)
		speech.Rate = iRate
		speech.Speak WinvbNullString, WinSVSFlagsAsync + WinSVSFPurgeBeforeSpeak
		speech.Speak WinMarkup(sB, sLang), WinSVSFlagsAsync + WinSVSFPurgeBeforeSpeak
		Do
			&apos; Talking...
		Loop Until (speech.waitUntilDone(1) or _
				Not(FileExists(s2)))
		Set speech = Nothing
		Wait 28
		oBar.Value = 85
		Wait 14
		fbRemoveFile(s2)
		oBar.Value = 100	
		oBar.End()
		fsNetSAPI5WindowsSpeech = sB
	End If
	Exit Function
	fsNetSAPI5WindowsSpeechErr:
	fsNetSAPI5WindowsSpeech = &quot;&quot;
End Function

</script:module>
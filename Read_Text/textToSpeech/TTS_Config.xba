<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TTS_Config" script:language="StarBasic">REM  *****  BASIC  *****
OPTION EXPLICIT
&apos; Variable holding the dialog box.
private f_dlgSpeechSetup as variant
private f_dlgAboutReadSelection as variant
&apos; Persistent information about the current recording track and 
&apos; the URL of last processed document.
global s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle as string
global i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack as integer
global s_CaBcVancouverHolgateJamesReadtextextensionWorkingCountryLanguage as string
global b_CaBcVancouverHolgateJamesReadtextextensionHideExports as boolean
&apos;&apos; # Configuration tools
&apos;&apos;  
&apos;&apos; These procedures make dialogues, get settings and write settings.
&apos;&apos; Dialogues in Read Text Extension are updated each time that you
&apos;&apos; see them.  You can immediately change the dialogue language from
&apos;&apos; the display preferences field of the main dialogue.
&apos;&apos; 

sub ClearWorkingCountryLanguage()
	s_CaBcVancouverHolgateJamesReadtextextensionWorkingCountryLanguage = &quot;&quot;
end sub

sub SetWorkingCountryLanguage()
	s_CaBcVancouverHolgateJamesReadtextextensionWorkingCountryLanguage = fsSelectionLanguageAndRegion()
end sub

function fiMyCurrentAudioTrack(_
		optional byval bIncrement)
&apos;&apos; # Audio tracks
&apos;&apos;
&apos;&apos; An mp3 album can have up to 255 tracks.  This extension uses
&apos;&apos; the document *title* as the album title.  The track number is
&apos;&apos; the number of times you have created a sound file from a 
&apos;&apos; document with the same title. if the track number is over
&apos;&apos; 255, then the counter restarts at 1.
&apos;&apos;
&apos;&apos; Title vs. file name
&apos;&apos; -------------------
&apos;&apos;
&apos;&apos; The document title is *not* the same as the file name, and
&apos;&apos; any number of files can have the same title.  The title is
&apos;&apos; used as the album name of exported sound files.  You can
&apos;&apos; assemble an album made up of different documents, by setting
&apos;&apos; the title of each document to the same value.  Use
&apos;&apos; *File - Properties - Description - Title* to set a document
&apos;&apos; title.
&apos;&apos;	
	fiMyCurrentAudioTrack = 1
	on error goto fiMyCurrentAudioTrackErr
	if ismissing(bIncrement) then
		bIncrement = False
	end if
	if bIncrement then
		&apos; Add one to the track index
		if s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle = fsThisDocTitle then
			if i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack &lt; 256 and _
					i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack &gt; 0 then
				i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = _
				i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack + 1
			else
				i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 1
			end if
		else
			i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 1
			s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle = fsThisDocTitle
		end if
	else
		if not(s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle = fsThisDocTitle) then
			i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 1
			s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle = fsThisDocTitle
		end if
	end if
	fiMyCurrentAudioTrack = i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack
	exit function
	fiMyCurrentAudioTrackErr:
	fiMyCurrentAudioTrack = 1
	i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 1
	s_CaBcVancouverHolgateJamesReadtextextensionLastSpokenDocTitle = fsThisDocTitle
end function


sub ConfigureReadTextAloud ()
	dim sFile as string
	dim msgs() as variant
	dim errorCode as integer 
	dim config(fiCountConfigOptions) as variant
	dim bHideExports as boolean : bHideExports = False
	
	&apos; Open up the dialog
	CheckUnixSpeech
	ClearWorkingCountryLanguage
	DialogLibraries.LoadLibrary( &quot;textToSpeech&quot; )
	f_dlgSpeechSetup=CreateUnoDialog( DialogLibraries.textToSpeech.Dialog1 )
    Select Case fsGetOS()
    Case &quot;OSX&quot;
    	&apos; New versions of MacOS restrict third party apps from writing
    	&apos; media files, so the extension hides export options in the main
    	&apos; dialogue.  High Sierra and newer versions of MscOS do not 
    	&apos; include a built-in telnet command.
    	bHideExports = not(_
    			fileexists(_
    			&quot;/usr/bin/telnet&quot;))
    End Select
    b_CaBcVancouverHolgateJamesReadtextextensionHideExports = bHideExports
    with f_dlgSpeechSetup
        if fbHelpIsInstalled then
            .model.HelpURL= fsAppSignature &amp; &quot;/set_up.xhp&quot;
        else 
            .model.HelpURL=&quot;&quot;
        end if
        &apos;Load default settings, so any settings undefined by settings file are not empty
        config()=fvTts_config_createDefaultConfig(msgs(), errorCode)
        &apos;Load the settings you used last time
        sFile=fsFullPathOf(fsExtensionSettingsIni)
        if fileexists(sFile) then
            tts_config_parseFile(sFile, config(), errorCode)
        else
            &apos; The &quot;About&quot; dialog needs this file to show current information
            tts_config_writeFile(config(), sfile)
        end if								 
        &apos;Now apply the settings to the dialog box
        .GetControl(&quot;CheckBox1&quot;).Model.State=config(fiAlwaysShowDialogCheckBox)
        if fbEnhancedRTVersion and fbClipBoardAvailable then
            .GetControl(&quot;CheckBox2&quot;).Model.State=config(fiSmartSelectCheckBox)
        else
            .GetControl(&quot;CheckBox2&quot;).Model.State= 0
            .GetControl(&quot;CheckBox2&quot;).Visible = False
        end if
        ttsUpdateCombo2a(False)
        &apos;Update the labels with your language
		ttsUpdateLabels
        .GetControl(&quot;ComboBox1&quot;).Model.Text=config(fiFestivalComboChoice)
        .GetControl(&quot;ComboBox2&quot;).Model.Text=config(fiExternalCommand)
        .GetControl(&quot;ComboBox3&quot;).Model.Text=config(fiDialogLanguageCombo)
        .GetControl(&quot;ComboBox4&quot;).Model.Text=config(fiHtmlComboURL)
        .GetControl(&quot;FileControl1&quot;).Model.Text=config(fiFestivalPath)
        .GetControl(&quot;FileControl2&quot;).Model.Text=config(fiExternalProgramPath)
        .GetControl(&quot;OptionButton1&quot;).Model.State= config(fiFestivalOption)
        .GetControl(&quot;OptionButton2&quot;).Model.State= config(fiExternalOption)
        .GetControl(&quot;OptionButton3&quot;).Model.State=config(fiHtmlOption)

        ttsUpdateCombo1()
    
		&apos;Default choices are for custom scripts or apps - Win, Mac, Linux, Unix etc.

		ttsUpdateDisplay
		&apos; Stop Linux or OSX speech daemon from continuing to speak
		&apos; or delete the Windows temporary lock file so speech ends.
		&apos; The speech only stops if you use the one of the scripts shown
		&apos; by default in the extension dialogue.
		if fileexists(sFile) or fileexists(fsMyTempLock) then
			if .GetControl(&quot;OptionButton2&quot;).Model.State then
				resetSpeechDispatcher(true)
			elseif .GetControl(&quot;OptionButton1&quot;).Model.State then
				if fileexists(&quot;/usr/bin/killall&quot;) or fileexists(&quot;/usr/local/bin/killall&quot;) then
					Shell(&quot;killall&quot;,0,&quot;festival&quot;,true)
				end if
				if fileexists(fsMyTempLock) then
					kill fsMyTempLock
				end if
			end if
		end if
		if .Execute() &lt;&gt; 0 then
			&apos;Replace the old settings file
			config()=fvCurrentDialogConfig()
			.Dispose()
			if fileexists(sFile) then
				kill sFile
			end if	
			tts_config_writeFile(config(), sfile)
			&apos;Call the shell to execute the program specified with the commands specified
			ttsActuate(config(),_
					msgs(),_
					errorCode,_
					&quot;&quot;)
		end if
	end with
end sub


sub ttsUpdateCombo1()
	 dialog1Combo1ShowFESTIVALScripts(f_dlgSpeechSetup)
end sub


sub ttsUpdateCombo2()
	ttsUpdateCombo2a(True)
end sub


sub ttsUpdateCombo2F()
	ttsUpdateCombo2a(False)
end sub

	
sub ttsUpdateCombo2a(_
		bRefreshText)
	if Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),_
			&quot;\wscript.exe&quot;) &gt; 0 then
		dialog1Combo2ShowSAPIChoices(f_dlgSpeechSetup)
	&apos; Typical for Mac
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;bin/say&quot;) &gt; 0 then
		dialog1Combo2ShowSAYChoices(f_dlgSpeechSetup)
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;bin/osascript&quot;) &gt; 0 then
		dialog1Combo2ShowAppleScriptChoices(f_dlgSpeechSetup)
	&apos; Typical for Linux
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;espeak&quot;) &gt; 0 then
		dialog1Combo2ShowESPEAKChoices(f_dlgSpeechSetup)
	&apos;Festival
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;festival&quot;) &gt; 0 then
		dialog1Combo2ShowFESTIVALChoices(f_dlgSpeechSetup)
	&apos;Festival text2wav
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;text2wave&quot;) &gt; 0 then
		dialog1Combo2ShowTEXT2WAVEChoices(f_dlgSpeechSetup)
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;/bin/python&quot;) &gt; 0 then 
		fiDialog1Combo2ShowMyPythonChoices(f_dlgSpeechSetup)
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;python.exe&quot;) &gt; 0 then 
		fiDialog1Combo2ShowMyPythonChoices(f_dlgSpeechSetup)
	elseif Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;/bin/open&quot;) &gt; 0 And _
		fsGetOS()=&quot;OSX&quot; Or fsGetOS()=&quot;MAC&quot; then
		&apos;The system chooses an application to open the file or URL (See man: gnome-open and xdg-open)
		&apos;There are some examples at https://ss64.com/osx/open.html and 
		&apos;https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/open.1.html
		dialog1Combo2ShowMEDIAChoices(f_dlgSpeechSetup)
	&apos; You entered a media player
	elseif fbIsAMediaPlayer(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text)) then
		dialog1Combo2ShowMEDIAChoices(f_dlgSpeechSetup)
	else
	
	end if
	if bRefreshText and FileExists(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text) then
		f_dlgSpeechSetup.GetControl(&quot;ComboBox2&quot;).Model.Text=f_dlgSpeechSetup.GetControl(&quot;ComboBox2&quot;).GetItem(0)
	end if
end sub


sub ttsUpdateLabels()
	dim s1 as string
	UpdatePoSettingsDone = -1
	s1 = fsDisplayLanguage()
	&apos;Update the labels with your language
	with f_dlgSpeechSetup
		.GetControl(&quot;CheckBox1&quot;).model.Label = fsLookUpTerm( &quot;s_always-show-this-dialog&quot;,s1)
		.GetControl(&quot;CheckBox2&quot;).model.Label = fsLookUpTerm( &quot;s_touch-screen&quot;,s1)
		.GetControl(&quot;CommandButton1&quot;).model.Label = fsLookUpTerm( &quot;s_ok&quot;, s1)
		.GetControl(&quot;CommandButton2&quot;).model.Label = fsLookUpTerm( &quot;s_cancel&quot;, s1)
		.GetControl(&quot;CommandButton3&quot;).model.Label = fsLookUpTerm( &quot;s_about&quot;, s1) &amp; &quot;...&quot;
		.GetControl(&quot;FrameControl1&quot;).model.Label = fsLookUpTerm( &quot;s_external-program&quot;, s1)
		.GetControl(&quot;FrameControl2&quot;).model.Label = fsLookUpTerm( &quot;s_display&quot;, s1)
		.GetControl(&quot;Label1&quot;).model.Label = fsLookUpTerm( &quot;s_script-commands&quot;, s1)
		.GetControl(&quot;Label2&quot;).model.Label = fsLookUpTerm( &quot;s_command-line-options&quot;, s1)
		.GetControl(&quot;OptionButton1&quot;).model.Label = fsLookUpTerm( &quot;s_use-festival-with-a-script&quot;, s1)
		.GetControl(&quot;OptionButton2&quot;).model.Label = fsLookUpTerm( &quot;s_external-program&quot;, s1)
		.GetControl(&quot;OptionButton3&quot;).model.Label = fsLookUpTerm( &quot;s_use-a-web-application&quot;, s1)
		.model.Title = fsLookUpTerm( &quot;s_read-text&quot;, s1)
	end with
end sub


sub ttsUpdateDisplay()
	&apos; These dialog items toggle between enabled And disabled depending On option button selected
	with f_dlgSpeechSetup
		dim i# : i = len(.GetControl(&quot;FileControl1&quot;).Model.Text)
		&apos; If festival is installed, then enable the festival option in `Dialog1`.
		if i = 0 then
			&apos; No text in file control box
			.GetControl(&quot;OptionButton1&quot;).model.enabled=False
			.GetControl(&quot;ComboBox1&quot;).model.enabled=False
			.GetControl(&quot;FileControl1&quot;).model.enabled=False
			.GetControl(&quot;Label1&quot;).model.enabled=False
		else
			if FileExists(.GetControl(&quot;FileControl1&quot;).Model.Text) then
				&apos; Festival is installed
				.GetControl(&quot;OptionButton1&quot;).model.enabled=True
				.GetControl(&quot;ComboBox1&quot;).model.enabled=.GetControl(&quot;OptionButton1&quot;).Model.State
				.GetControl(&quot;FileControl1&quot;).model.enabled=.GetControl(&quot;OptionButton1&quot;).Model.State
				.GetControl(&quot;Label1&quot;).model.enabled=.GetControl(&quot;OptionButton1&quot;).Model.State
			else
				&apos; Cannot find festival
				.GetControl(&quot;OptionButton1&quot;).model.enabled=False
				.GetControl(&quot;ComboBox1&quot;).model.enabled=False
				.GetControl(&quot;FileControl1&quot;).model.enabled=False
				.GetControl(&quot;Label1&quot;).model.enabled=False		
			end if
		
		end if
		.GetControl(&quot;ComboBox2&quot;).model.enabled=.GetControl(&quot;OptionButton2&quot;).Model.State
		.GetControl(&quot;ComboBox4&quot;).model.enabled=.GetControl(&quot;OptionButton3&quot;).Model.State
		.GetControl(&quot;FileControl2&quot;).model.enabled=.GetControl(&quot;OptionButton2&quot;).Model.State		
		.GetControl(&quot;Label2&quot;).model.enabled=.GetControl(&quot;OptionButton2&quot;).Model.State
	end with
end sub


function fvCurrentDialogConfig() as variant
	dim config(fiCountConfigOptions) as variant
	with f_dlgSpeechSetup
		config(fiAlwaysShowDialogCheckBox)=.GetControl(&quot;CheckBox1&quot;).model.State
		config(fiSmartSelectCheckBox)=.GetControl(&quot;CheckBox2&quot;).model.State
		config(fiDialogLanguageCombo)=.GetControl(&quot;ComboBox3&quot;).model.Text
		config(fiExternalCommand)=.GetControl(&quot;ComboBox2&quot;).model.Text
		config(fiExternalOption)=.GetControl(&quot;OptionButton2&quot;).Model.State
		config(fiExternalProgramPath)=.GetControl(&quot;FileControl2&quot;).Model.Text
		config(fiFestivalComboChoice)=.GetControl(&quot;ComboBox1&quot;).model.Text
		config(fiFestivalOption)=.GetControl(&quot;OptionButton1&quot;).Model.State
		config(fiFestivalPath)=.GetControl(&quot;FileControl1&quot;).Model.Text
		config(fiHtmlComboURL)=.GetControl(&quot;ComboBox4&quot;).model.Text
		config(fiHtmlOption)=.GetControl(&quot;OptionButton3&quot;).Model.State
	end with
	fvCurrentDialogConfig()=config()
end function


sub aboutReadTextDialog()
	&apos; In LibreOffice 7x for MacOS, go to the web for help because displaying
	&apos; a dialog from another dialog might crash LibreOffice. Otherwise, show
	&apos; a dialog with version, command line and script information.
	select case fsGetOS()
	case &quot;OSX&quot;
		select case lcase(fsGetSetting(&quot;ooName&quot;))
		case &quot;libreoffice&quot;, &quot;libreofficedev&quot;
			if GetSolarVersion &gt; 69999 then
				WebHelp()
				exit sub
			end if
		end select
	end select
	dim config(fiCountConfigOptions) as variant
	config()=fvCurrentDialogConfig()
	AboutAddOn(config(), &quot;&quot;)
end sub


sub AboutAddOn(_
		config() as variant, _
		myText as string)
	dim f_dlgAboutReadSelection as variant
	dim sFile as string
	dim sA as string
	dim msgs() as variant
	dim errorCode as integer
	dim s1$ : s1 = fsDisplayLanguage()
	dim s2$ : s2 = fsHomeDrive()
	dim s3$ : s3 = fsFullPathOf(&quot;ReadClipBoard.lock&quot;)
	dim s4$ : s4 = &quot;&quot;
	
	&apos; Open up the dialog
	DialogLibraries.LoadLibrary( &quot;textToSpeech&quot; )
	f_dlgAboutReadSelection=CreateUnoDialog( DialogLibraries.textToSpeech.Dialog3)
	with f_dlgAboutReadSelection
		&apos;Update the labels And button with your language
		.model.Title = fsLookUpTerm( &quot;s_about&quot;, s1) &amp; _
			&quot; &quot; &amp; fsLookUpTerm( &quot;s_read-text&quot;, s1) &amp; _
			&quot; &quot; &amp; fsExtensionVersion
		if fbHelpIsInstalled then
			.model.HelpURL= fsAppSignature &amp; &quot;/set_up.xhp&quot;
		end if
		.GetControl(&quot;CommandButton1&quot;).model.Label = fsLookUpTerm( &quot;s_ok&quot;, s1)
		.GetControl(&quot;CommandButton2&quot;).model.helpText = fsLookUpTerm( &quot;s_http-help-url&quot;, s1)
		.GetControl(&quot;CommandButton2&quot;).model.Label = fsLookUpTerm( &quot;s_on-line-help&quot;, s1) &amp; &quot;...&quot;
		.GetControl(&quot;FrameControl1&quot;).model.Label = fsLookUpTerm( &quot;s_about&quot;, s1)
		.GetControl(&quot;FrameControl2&quot;).model.Label = fsLookUpTerm( &quot;s_script&quot;, s1)
		.GetControl(&quot;FrameControl3&quot;).model.Label = fsLookUpTerm( &quot;s_command&quot;, s1)
		.GetControl(&quot;ImageControl1&quot;).model.helpText = .model.Title
		.GetControl(&quot;ImageControl1&quot;).model.ImageURL = fsExtensionLogo
		.GetControl(&quot;ImageControl2&quot;).model.helpText = fsLookUpTerm( &quot;s_test&quot;, s1)
		.GetControl(&quot;ImageControl2&quot;).model.ImageURL = fsSpeakerLogo
		.GetControl(&quot;ImageControl3&quot;).model.helpText = left(fsGetTextSelection(False, False),99) 
		.GetControl(&quot;ImageControl3&quot;).model.ImageURL = fsSelectionLogo

		if fbIsWin64Program and (not(_
				fbClipBoardAvailable) or _
				(fsGetSetting(_
				&quot;oosetupversion&quot;) = &quot;5.0&quot; and _
				lcase(_
				fsGetSetting(_
				&quot;ooName&quot;)) = &quot;libreoffice&quot;)) then
			.GetControl(&quot;ImageControl4&quot;).model.ImageURL = fsClipBoardLogo
			.GetControl(&quot;ImageControl4&quot;).model.Enabled = False
			.GetControl(&quot;Label2&quot;).model.Enabled = False
		else
			CreateFile(s3, fsGetSetting(&quot;oosetupversion&quot;), &quot;UTF-8&quot;)  &apos; lock clipboard
			fsGetClipBoard(False)
			&apos; To avoid a crash, the testing version of office 
			&apos; needs a dummy run of function before evaluating
			&apos; the results.
			&apos; if it crashes, then we are left with a lock file.
			if fileexists(s3) then  &apos; unlock clipboard
				kill s3
			end if
			s4 = fsGetClipBoard(False)
			.GetControl(&quot;ImageControl4&quot;).model.helpText = left(_
					s4, 99)
			.GetControl(&quot;Label2&quot;).model.helpText = left(_
					s4, 99)
			.GetControl(&quot;ImageControl4&quot;).model.ImageURL = fsClipBoardLogo
			.GetControl(&quot;Label2&quot;).model.Label = len(s4)
		end if
		if fileexists(s2 &amp; &quot;\Windows\SysWOW64\Speech\SpeechUX\sapi.cpl&quot;) or _
			fileexists(s2 &amp; &quot;\Windows\System32\Speech\SpeechUX\sapi.cpl&quot;) or _
			fileexists(s2 &amp; &quot;\WINDOWS\ServicePackFiles\i386\sapi.cpl&quot;) or _
			fileexists(fsProgramDirectory() &amp; &quot;Common Files\Microsoft Shared\Speech\sapi.cpl&quot;) then
			.GetControl(&quot;ImageControl5&quot;).model.helpText = fsLookUpTerm(_
					&quot;s_speech-properties&quot;, s1)
		else
			.GetControl(&quot;ImageControl5&quot;).model.helpText = fsLookUpTerm(_
					&quot;s_system-settings&quot;, s1)
		end if
		.GetControl(&quot;ImageControl5&quot;).model.ImageURL = fsToolBoxLogo
		.GetControl(&quot;Label1&quot;).model.helpText = left(fsGetTextSelection(False, False),99) 
		.GetControl(&quot;Label1&quot;).model.Label = len(fsGetTextSelection(False, False))

		&apos;Change the text in the information text boxes
		if config(fiFestivalOption) then
			.GetControl(&quot;TextField3&quot;).model.Text=config(fiFestivalPath) &amp; &quot; &quot; &amp; _
				&quot;&quot;&quot;&quot; &amp; ConvertFromURL(fsFullPathOf(fsFestivalScriptName)) &amp; &quot;&quot;&quot;&quot;
			sA=replaceLocalTokensWithStr(config(fiFestivalComboChoice))
			sA=replacePublicTokensWithStr(sA)
			.GetControl(&quot;TextField2&quot;).model.Text = sA 
		elseif config(fiExternalOption) then 
			sA=replaceLocalTokensWithStr(config(fiExternalCommand))
			sA=replacePublicTokensWithStr(sA)
			.GetControl(&quot;TextField3&quot;).model.Text=&quot;&quot;&quot;&quot; &amp; config(fiExternalProgramPath) &amp; &quot;&quot;&quot; &quot; &amp; sA
			if Instr(config(fiExternalCommand),&quot;(TTS_WSCRIPT_VBS)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsVBSTextString
			elseif Instr(config(fiExternalCommand),&quot;(SPD_READ_TEXT_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsSPDTextString
			elseif Instr(config(fiExternalCommand),&quot;(ESPEAK_READ_TEXT_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsEspeakTextString
			elseif Instr(config(fiExternalCommand),&quot;(FESTIVAL_READ_TEXT_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsFestivalTextString
			elseif Instr(config(fiExternalCommand),&quot;(PICO_READ_TEXT_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsPicoTextString
			elseif Instr(config(fiExternalCommand),&quot;(PYTTSX_READ_TEXT_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsPyttsxTextString
			elseif Instr(config(fiExternalCommand),&quot;(OS_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsOSTextString
			elseif Instr(config(fiExternalCommand),&quot;(CREATE_QR_LABEL_PY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fsQRTextString
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;&quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_SLOWLY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;-r 110 &quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_QUICKLY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;-r 240 &quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_AIRPLAY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;-a AirPlay &quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_AIRPLAY_SLOWLY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;-a AirPlay -r 110 &quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_AIRPLAY_QUICKLY)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;-a AirPlay -r 240 &quot;, _
						fsSelectionLanguageAndRegion(true))
			elseif Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_SYSTEM_VOICE)&quot;) then
				.GetControl(&quot;TextField2&quot;).model.Text=fswriteOSXSpeechScript(&quot;&quot;, _
						&quot;&quot;)
			else
				.GetControl(&quot;TextField2&quot;).model.Text=&quot;&quot;
			end if
		else &apos; if config(fiHtmlOption) then
			sA=replacePublicTokensWithStr(config(fiHtmlComboURL))
			.GetControl(&quot;TextField3&quot;).model.Text=&quot;[com.sun.star.system.SystemShellExecute]&quot;
			if Instr(sA,&quot;.google.&quot;) then
				sA=sA &amp; chr(13) &amp; chr(13) &amp; &quot;Powered by Google TM&quot;
			elseif instr(sA,&quot;vozme.com&quot;) then
				sA=sA &amp; chr(13) &amp; chr(13) &amp; &quot;Powered by Vozme TM&quot;
			end if
			.GetControl(&quot;TextField2&quot;).model.Text=sA		
		end if
		.GetControl(&quot;TextField1&quot;).model.Text=fsAbout
		&apos; Show the dialog
		.Execute()
	 end with
end sub


</script:module>
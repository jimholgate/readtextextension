<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TTS_Utilities" script:language="StarBasic">REM  *****  BASIC  *****
OPTION EXPLICIT
&apos;&apos; # TTS_Utilities
&apos;&apos;
&apos;&apos; These functions handle events, create combo box listings,
&apos;&apos; read and write strings to files, get selected text, clean
&apos;&apos; up strings, etc.  There are some strings that may need to
&apos;&apos; be modified over time, including URLs and command lines
&apos;&apos; for programs that get revised or don&apos;t work anymore.
&apos;&apos;
&apos;&apos; In this program, external scripts do the work.  The script
&apos;&apos; language is different for each major platform.  In Apple
&apos;&apos; OSX, the language is osascript, also known as Apple Script.
&apos;&apos; Linux and other Unix-like platforms use python scripts.
&apos;&apos; Windows uses vbs.  Read the script and command line for
&apos;&apos; your platform by clicking the **About...** button from the
&apos;&apos; main dialogue window.
&apos;&apos;
&apos;&apos; The abilities of Read Text vary by platform and installed
&apos;&apos; software.  for example, in Windows, installing iTunes allows
&apos;&apos; you to save files in the .m4a format for portable players.
&apos;&apos; In Linux, `avconv` or `ffmpeg` allow you to save sounds in
&apos;&apos; various audio formats according to the packages installed
&apos;&apos; on your computer.  if you install a new program, then the
&apos;&apos; Read Text dialogue updates to reflect the new capabilities
&apos;&apos; of your computer.
&apos;&apos;
&apos;&apos; Specific information for your platform is included in the
&apos;&apos; program listing shown when you view the **About** dialogue.
&apos;&apos;

sub OK_MouseUp(_
		Event As Object)
	&apos; This sub uses the current dialog settings without dismissing
	&apos; the dialog if you right click the OK button.
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.RIGHT then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(), _
				errorCode, _
				&quot;&quot;)
	elseif Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(), _
				errorCode, _
				f_dlgSpeechSetup.GetControl(&quot;CommandButton1&quot;).model.Label)
	end if
end sub


sub Cancel_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;CommandButton2&quot;).model.Label)
	end if
end sub


sub Reset_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;CommandButton4&quot;).model.Label)
	elseif Event.Buttons AND com.sun.star.awt.MouseButton.LEFT then
		resetSpeech()

	end if
end sub


sub About_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;CommandButton3&quot;).model.Label)
	else
		aboutReadTextDialog()
	end if
end sub


sub UseFestival_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;FrameControl1&quot;).model.Label &amp; _
				&quot;,&quot; &amp; _
				f_dlgSpeechSetup.GetControl(&quot;OptionButton1&quot;).model.Label)
	end if
end sub


sub Label1_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig()_
				,msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;Label1&quot;).model.Label)
	end if
end sub


sub Label2_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;Label2&quot;).model.Label)
	end if
end sub


sub UseExternal_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;FrameControl1&quot;).model.Label &amp; _
				&quot;,&quot; &amp; _
				f_dlgSpeechSetup.GetControl(&quot;OptionButton2&quot;).model.Label)
	end if
end sub


sub UseWeb_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;FrameControl1&quot;).model.Label &amp; _
				&quot;,&quot; &amp; _
				f_dlgSpeechSetup.GetControl(&quot;OptionButton3&quot;).model.Label)
	end if
end sub


sub UseAlwaysShow_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons AND com.sun.star.awt.MouseButton.MIDDLE then
		ttsActuate(fvCurrentDialogConfig(),_
				msgs(),_
				errorCode,_
				f_dlgSpeechSetup.GetControl(&quot;FrameControl2&quot;).model.Label &amp; _
				&quot;,&quot; &amp; _
				f_dlgSpeechSetup.GetControl(&quot;CheckBox1&quot;).model.Label)
	end if
end sub


sub AboutButton_MouseUp(_
		Event As Object)
	dim msgs() as variant
	dim errorCode as integer

	if Event.Buttons then
		if fileexists(fsMyTempLock) then
			resetSpeechDispatcher
		else
			ttsActuate(fvCurrentDialogConfig(),msgs(),errorCode,fsAbout())
		end if
	end if
end sub


sub webHelpButton()
	&apos; Dialog3 Button on LibreOffice cannot call webHelp directly because of input
	&apos; parameter
	webHelp
end sub


sub webHelp(_
		optional sURL)
	dim oSvc

	on error goto webHelpErr
	if ismissing(sURL) then
		sURL = fsLookUpTerm( &quot;s_http-help-url&quot;, fsDisplayLanguage())
	end if

	if len(sURL) &gt; 12 then
		oSvc=createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)
		oSvc.execute(sURL, &quot;&quot;, 0)
	end if
	exit sub
	webHelpErr:
end sub


function fbUsingTouchScreen()
&apos;&apos;
&apos;&apos; # Touch Screen
&apos;&apos;
&apos;&apos; if you are using a touch screen or another pointing device that makes it difficult
&apos;&apos; to manually select text, you can enable enhanced text selection by checking the
&apos;&apos; *Touch Screen* checkbox in the main dialogue.  The extension will try to
&apos;&apos; determine what you want to select before processing the text.  for example, 
&apos;&apos; in the word processor, the extension will read to the end of the paragraph 
&apos;&apos; containing the cursor, then move the cursor to the beginning of the next 
&apos;&apos; paragraph.
&apos;&apos;
&apos;&apos; When the Touch Screen function is enabled, the extension might use the system 
&apos;&apos; clipboard to retrieve text.  if you are using accessibility software or hardware
&apos;&apos; that also uses the clipboard to retrieve text, check whether the extension 
&apos;&apos; interferes with your software or hardware when you enable the Touch Screen function.
&apos;&apos;
	dim sFile as string
	dim iSmart as integer
	dim config
	dim errorCode

	on error goto fbUsingTouchScreenErr
	sFile=fsFullPathOf(fsExtensionSettingsIni)
	if fileexists(sFile)then
		tts_config_parseFile(sFile,config(),errorCode)
		iSmart=config(fiSmartSelectCheckBox)
	else
		iSmart = 0
	end if
	if iSmart = 0 then
		fbUsingTouchScreen = False
	else
		fbUsingTouchScreen = True
	end if
	exit function
	fbUsingTouchScreenErr:
	fbUsingTouchScreen = False
end function


function fbUsingPosixTalkProgram(_
		Optional byval s1)
	fbUsingPosixTalkProgram = False
	dim i# : i = 0
	dim a1 : a1 = array(&quot;espeak&quot;,&quot;festival&quot;,&quot;padsp&quot;,&quot;say&quot;)
	if ismissing(s1) or s1 = &quot;&quot; then
		s1 = fsProgramCommand
	end if
	if s1 = &quot;&quot; then exit function
	for i = lbound(a1) to ubound(a1)
		if right(s1, len(a1(i))) = a1(i) then
			fbUsingPosixTalkProgram = True
			exit for
		end if
	Next	
end function


function fsProgramCommand()
&apos;&apos;
	dim sFile as string
	dim sSmart as string
	dim config
	dim errorCode
	dim msgs

	on error goto fsProgramCommandErr
	sFile=fsFullPathOf(fsExtensionSettingsIni)
	&apos;Load default settings, so any settings undefined by settings file are not empty
	config()=fvTts_config_createDefaultConfig(msgs(), errorCode)
	&apos;Load the settings you used last time
	sFile=fsFullPathOf(fsExtensionSettingsIni)
	if fileexists(sFile) then
		tts_config_parseFile(sFile, config(), errorCode)
	else
		&apos; The &quot;About&quot; dialog needs this file to show current information
		tts_config_writeFile(config(), sfile)
	end if

	sSmart=config(fiExternalProgramPath)
	
	if not(sSmart = &quot;&quot;) and FileExists(sSmart) then
		fsProgramCommand = sSmart
	else
		fsProgramCommand = &quot;&quot;
	end if
	exit function
	fsProgramCommandErr:
	fsProgramCommand = &quot;&quot;
end function


function fiReportMetaData(_
		optional byval bVerify)
	&apos; bVerify - if bVerify is False, the function always 
	&apos; returns 6 (&quot;Yes&quot;) but if bVerify is true, then the
	&apos; function  returns 6 if you click &quot;Yes&quot;, 7 if you
	&apos; click &quot;No&quot;, and 2 if you click Cancel
	&apos;
	dim iYes as integer
	dim iNo as integer
	dim iCancel as integer
	dim iYesNoCancel as integer
	dim sA as string
	dim CR as string
	dim n as integer
	
	on error goto fiReportMetaDataErr  
	iYes = 6
	iNo = 7
	iCancel = 2
	iYesNoCancel = 3
	n = iYes
	if ismissing(bVerify) then
		bVerify = True
	end if
	CR = chr(10)
	sA = &quot;&quot; &amp; _
			fsLookUpTerm(&quot;s_album&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; fsThisDocTitle() &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_artist&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; fsThisDocAuthor() &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_genre&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; fsThisDocGenre() &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_title&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; fsThisSoundTitle() &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_track&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; fiMyCurrentAudioTrack(False) &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_year&quot;) &amp; &quot; : &quot;&quot;&quot; &amp; year(now) &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			fsLookUpTerm(&quot;s_imagedefault&quot;) &amp; &quot; : &quot; &amp; trim(convertfromURL(fsPosterImg)) &amp; CR
	if bVerify then
		n = msgbox(sA, _
				iYesNoCancel, _
				fsLookUpTerm(&quot;s_read-text&quot;) &amp; _
				&quot; - &quot; &amp; _
				fsLookUpTerm(&quot;s_speech-properties&quot;) &amp; _
				&quot; - &quot; &amp; _
				fsLookUpTerm(&quot;s_ok&quot;) &amp; _
				&quot; ? &quot;)
	end if
	fiReportMetaData = n
	exit function
	fiReportMetaDataErr:
	&apos; MetaData has a problem, so return &quot;No&quot;.
	fiReportMetaData = iNo
end function


function fiReportOnlineRequest(_
		optional byval bVerify)
	&apos; bVerify - if bVerify is False, the function always 
	&apos; returns 6 (&quot;Yes&quot;) but if bVerify is true, then the
	&apos; function  returns 6 if you click &quot;Yes&quot;, 7 if you
	&apos; click &quot;No&quot;, and 2 if you click Cancel
	&apos;
	dim iYes as integer
	dim iNo as integer
	dim iCancel as integer
	dim iYesNoCancel as integer
	dim sA as string
	dim CR as string
	dim n as integer
	
	on error goto fiReportOnlineRequestErr  
	iYes = 6
	iNo = 7
	iCancel = 2
	iYesNoCancel = 3
	n = iYes
	if ismissing(bVerify) then
		bVerify = True
	end if
	CR = chr(10)
	sA = &quot;&quot; &amp; _
			fsLookUpTerm(&quot;s_use-a-web-application&quot;) &amp; _
				&quot; - &quot; &amp; _
				fsLookUpTerm(&quot;s_ok&quot;) &amp; _
				&quot; ? &quot;
	if bVerify then
		n = msgbox(sA, _
				iYesNoCancel, _
				fsLookUpTerm(&quot;s_read-text&quot;)
	end if
	fiReportOnlineRequest = n
	exit function
	fiReportOnlineRequestErr:
	&apos; MetaData has a problem, so return &quot;No&quot;.
	fiReportOnlineRequest = iNo
end function


function fbHelpIsInstalled() as Boolean
	dim sA as string

	sA=fsPathSettings(&quot;Help&quot;) &amp; &quot;/&quot;
	if fileexists(sA &amp; fsGetLanguage) then
		fbHelpIsInstalled=True
	elseif fileexists(sA &amp; &quot;en&quot;) then
		fbHelpIsInstalled=True
	elseif fileexists(sA &amp; &quot;fr&quot;) then
		fbHelpIsInstalled=True
	elseif fileexists(sA &amp; &quot;de&quot;) then
		fbHelpIsInstalled=True
	else
		fbHelpIsInstalled=False
	end if
end function


function soundsDirectory() as string
	&apos;This function returns the application sound gallery location
	dim strA as string
	dim intA as integer

	strA=fsPathSettings(&quot;Gallery&quot;)
	intA=Instr(strA,&quot;;&quot;)
	if intA &lt;&gt; 0 then
		strA=left(strA,intA - 1)
		&apos; We do not want the semi-colon or the string that follows it
	end if
	soundsDirectory=ConvertFromURL(strA &amp; &quot;/sounds/&quot;)
end function

function fbEnhancedRTVersion()
	&apos; Version 9 of the Read Text Extension enables smart text
	&apos; and includes a help file for Tools - Add-ons - Impress-view.
	fbEnhancedRTVersion = fileexists(fsMyURL() &amp; _
			&quot;/help/en/&quot; &amp; _
			fsAppSignature() &amp; _
			&quot;/impress_view.xhp&quot;) 
end function


function fsGetTextSelection(_
		optional byval bHideMDCode as Boolean, _
		optional bgoRight as Boolean) as string
	if ismissing(bHideMDCode) then
		bHideMDCode = True
	end if
	if ismissing(bgoRight) then
		bgoRight = False
	end if
	&apos; Check whether extension should use fsGetSmartTextSelection or
	&apos; fsGetOnlySelectedText.  The fsGetSmartTextSelection tries more
	&apos; strategies to determine the selected text and can automatically
	&apos; update the position of the text cursor to the next paragraph as
	&apos; it reads.  In Impress, it will read the note or the text of the 
	&apos; screen if no text is selected.
	&apos;
	if fbUsingTouchScreen() or _
			ThisComponent.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) then
		fsGetTextSelection = fsGetSmartTextSelection(bHideMDCode, bgoRight)
	else
		fsGetTextSelection = fsGetOnlySelectedText()
	end if
end function


function fsGetOnlySelectedText() as string
	dim oDoc   As Object
	dim oSelection As Object
	dim sSelectedText as string
	dim n as integer
	On Error Goto fsGetOnlySelectedTextErr
	oDoc=thisComponent
	if oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;) then
		sSelectedText=fsRetrieveCalcActiveCellText()
	elseif oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.drawing.DrawingDocument&quot;) then
		sSelectedText=fsDrawText()
	elseif oDoc.supportsService(&quot;com.sun.star.text.TextDocument&quot;) or _
			 oDoc.supportsService(&quot;com.sun.star.text.WebDocument&quot;) or _
			 oDoc.supportsService(&quot;com.sun.star.text.globalDocument&quot;) then
		oSelection=oDoc.getCurrentSelection()
		sSelectedText=&quot;&quot;  	
		if oSelection.supportsService(&quot;com.sun.star.text.TextRanges&quot;) then
			for n = 0 To (oSelection.getCount() - 1)
				sSelectedText=sSelectedText &amp; _
		&quot; &quot; &amp; _
		oSelection.getByIndex(n).getString()
			Next
		else 
			sSelectedText=oSelection.getByIndex(0).getString()
		end if
		if sSelectedText=&quot; &quot; then
			sSelectedText=fsgetCursorWord()
		end if
	else &apos;unsupported document format
		sSelectedText=&quot;&quot;  
	end if
	fsGetOnlySelectedText=Trim(sSelectedText)
	exit function
	fsGetOnlySelectedTextErr:
	fsGetOnlySelectedText=&quot;&quot;
end function


function fsGetSmartTextSelection(_
		optional byval bHideMDCode as Boolean, _
		optional bgoRight as Boolean) as string
	&apos; for audio presentations we lightly clean [Markdown][1] code.
	&apos; (Imagine a computer voice saying &quot;equals&quot; 79 times in a row.)
	&apos; for visual presentation, we can show it.
	&apos; [1]: https://daringfireball.net/projects/markdown/
	dim oDoc As Object
	dim oSelection As Object
	dim sSelectedText as string
	dim n as integer

	&apos;On Error Goto fsGetSmartTextSelectionErr
	if ismissing(bHideMDCode) then
		bHideMDCode = True
	end if
	if ismissing(bgoRight) then
		bgoRight = False
	end if
	oDoc=thisComponent
	if oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;) then
		sSelectedText=fsRetrieveCalcActiveCellText()
	elseif oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.drawing.DrawingDocument&quot;) then
		sSelectedText=fsDrawText()
		if sSelectedText = &quot;&quot; then
			&apos; if no text is selected, read the text of the note
			&apos; This is to allow you to provide text for pictures
			&apos; and graphs that don&apos;t translate directly into audio.
			sSelectedText = fsGetSlidenote(bHideMDCode)
			if sSelectedText = &quot;&quot; then
				&apos; Read the text of the slide
				sSelectedText = fsSlidePlainText()
			end if
		end if
	elseif oDoc.supportsService(&quot;com.sun.star.text.TextDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.text.WebDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.text.globalDocument&quot;) then
		oSelection = oDoc.getCurrentSelection()
		sSelectedText = &quot;&quot;
		if oSelection.supportsService(&quot;com.sun.star.text.TextRanges&quot;) then
			fsGetSelectionAndCopy()
			for n = 0 To (oSelection.getCount() - 1)
				sSelectedText = sSelectedText &amp; &quot; &quot; &amp; oSelection.getByIndex(n).getString()
			next
		else 
			sSelectedText = fsGetSelectionAndCopy()
		end if
		if sSelectedText = &quot; &quot; then
				if bgoRight then
					sSelectedText = fsGetTextSelectiontoend(true)
					fbGoRight
				end if
		end if
	else &apos; unsupported document format
		sSelectedText=&quot;&quot;
	end if

	if fbCreatingMediaFile(&quot;.aif,.aiff,.ogg,.m4a,.mp3&quot;) then
		&apos; Gapless music players make sentences run into each other.
		&apos; Insert a brief pause at the end of the recording.
		sSelectedText = trim(sSelectedText)
	end if
	fsGetSmartTextSelection = sSelectedText
	exit function
	fsGetSmartTextSelectionErr:
	fsGetSmartTextSelection=&quot;&quot;
end function


function fsgetTextSelectiontoend(_
		optional bAsPara as boolean) as string
	dim sA as string
	dim sB as string
	
&apos;	on error goto fsgetTextSelectiontoendErr
	on error resume next
	if ismissing(bAsPara) then
		bAsPara  =  False
	end if
	if bAsPara then
		sA = fsSupertrim(fsgetCursorWord(False))	
		fbSelecttoendofParagraph()
		SetWorkingCountryLanguage()
		sB = fsGetSelectionAndCopy
		if len(sA) = 0 then
			fbGoLeft
		end if
	else
		fbSelecttoendofDoc()
		sB = fsGetSelectionAndCopy
	end if
	fsgetTextSelectiontoend = sB
	
	exit function
	fsgetTextSelectiontoendErr:
	fsgetTextSelectiontoend = &quot;&quot;
end function


function fsgetCursorWord(_
		optional bSelectWord as boolean) as string
	&apos; function to get a word under the current cursor position.
	&apos; Adapted from code contributed On 2009-04-25  by JohnV To 
	&apos; http://www.oooforum.org/
	dim oDoc
	dim oTC
	dim oTCtring
	dim oVC

	if ismissing(bSelectWord) then 
		bSelectWord  =  true
	end if
	oDoc = ThisComponent
	oVC = oDoc.getCurrentController.getViewCursor
	oTC = oDoc.getText.createTextCursorByRange(oVC,False)
	oTC.gotoendOfWord(False)
	oTC.gotoStartOfWord(True)
	fsgetCursorWord = oTC.String
	if bSelectWord then 
		selectAWord()
	end if
end function


function fsGetSelectionAndCopy()
	&apos;We copy to the clipboard, then return the clipboard contents as text. 
	&apos;The clipboard contents can be used for external tools for the disabled that use
	&apos;the clipboard. Examples include Braille pads or pictographic symbol displays.
	dim document   as object
	dim dispatcher as object

	document = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	dispatcher.executeDispatch(document, &quot;.uno:Copy&quot;, &quot;&quot;, 0, Array())
	fsGetSelectionAndCopy = fsGetClipBoard(False)
end function


function fbGoRight()
	fbGoRight = fbGoToMark(&quot;right&quot;)
end function


function gotoend()
	gotoend = fbGoToMark(&quot;end&quot;)
end function


function fbGoLeft()
	fbGoLeft = fbGoToMark(&quot;left&quot;)
end function


function fbSelecttoendofParagraph()
	fbSelecttoendofParagraph  =  fbGoToMark(&quot;paragraphselect&quot;)
end function


function fbSelecttoendofDoc()
	fbSelecttoendofDoc  =  fbGoToMark(&quot;endselect&quot;)
end function


function fbGoToMark(MarkType)
	dim document   as object
	dim dispatcher as object
	dim args1(1) as new com.sun.star.beans.PropertyValue

	on error goto fbGoToMarkErr
	document = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	args1(0).Name  = &quot;Count&quot;
	args1(0).Value  =  1
	args1(1).Name  = &quot;Select&quot;
	args1(1).Value  = &quot;False&quot;
	select case lcase(MarkType)
	case &quot;left&quot;
		dispatcher.executeDispatch(document, &quot;.uno:GoLeft&quot;, &quot;&quot;, 0, args1())
	case &quot;right&quot;
		dispatcher.executeDispatch(document, &quot;.uno:GoRight&quot;, &quot;&quot;, 0, args1())
	case &quot;paragraphselect&quot;
		dispatcher.executeDispatch(document, &quot;.uno:endOfParaSel&quot;, &quot;&quot;, 0, Array())
	case &quot;endselect&quot;
		dispatcher.executeDispatch(document, &quot;.uno:GoToPrevWord&quot;, &quot;&quot;, 0, Array())
		dispatcher.executeDispatch(document, &quot;.uno:endOfDocumentSel&quot;, &quot;&quot;, 0, Array())
	case else  &apos; &quot;end&quot;
		dispatcher.executeDispatch(document, &quot;.uno:GoToendOfDoc&quot;, &quot;&quot;, 0, Array())
	end select
	fbGoToMark  =  true
	exit function
	fbGoToMarkErr:
	fbGoToMark  =  False
end function


function fbClipBoardAvailable()
	&apos; if program has crashed or is a version known to 
	&apos; crash when reading the clipboard, provide
	&apos; an alternative to reading the clipboard directly.
	fbClipBoardAvailable = fbOfficeSupports(_
			&quot;com.sun.star.datatransfer.clipboard.SystemClipboard&quot;)
	if fileexists(fsFullPathOf(&quot;ReadClipBoard.lock&quot;)) then
		fbClipBoardAvailable = False
	end if
	if fbIsWin64Program and _
			(fsGetSetting(_
			&quot;oosetupversion&quot;) = &quot;5.0&quot; and _
			lcase(_
			fsGetSetting(_
			&quot;ooName&quot;)) = &quot;libreoffice&quot;) then
		fbClipBoardAvailable = False
	end if
end function


function fbOfficeSupports(_
		optional byval s1)
	&apos; Based on code listing 3 on page 173 of 
	&apos; Pitonyak, Andrew.  *OpenOffice Macros Explained*. Milwaukee, Hentzenwerke, 2004.
	&apos; ISBN:9781930919518
	dim b1 : b1 = False
	dim vManager
	dim a1
	dim i#
	if ismissing(s1) then s1 = &quot;com.sun.star.datatransfer.clipboard.SystemClipboard&quot;
	vManager = GetProcessServiceManager()
	a1 = vManager.getAvailableServiceNames()
	for i = lbound(a1) to ubound(a1)
		if a1(i) = s1 then
			b1 = True
			exit for
		end if
	next
	fbOfficeSupports = b1
end function


function fsGetClipBoard(_
		optional byval bSuggest) as string
	&apos; if bSuggest is true, then show inputbox prompt if the clipboard
	&apos; does not contain text data.
	&apos;
	&apos; Based On listing Listing 5.64: View the clipboard As text.
	&apos; by Andrew Pitonyak at http://www.pitonyak.org/AndrewMacro.odt 
	&apos; October 28,2010
	&apos;

	fsGetClipBoard = &quot;&quot;
	if ismissing(bSuggest) then bSuggest = False
	if not(fbClipBoardAvailable) then
		fsGetClipBoard = &quot;&quot;
		exit function
	end if

	dim oClip
	dim oTypes
	dim oClipContents
	dim oConverter
	dim convertedString$
	dim i%
	dim iPlainLoc% : iPlainLoc = -1
	
	dim s$ : s$=&quot;com.sun.star.datatransfer.clipboard.SystemClipboard&quot;
	oClip = createUnoService(s$)
	oConverter = createUnoService(&quot;com.sun.star.script.Converter&quot;) 
	&apos;Print &quot;Clipboard name=&quot; &amp; oClip.getName()fsGetClipBoard
	&apos;Print &quot;Implementation name=&quot; &amp; oClip.getImplementationName()
	oClipContents = oClip.getContents()
	oTypes=oClipContents.getTransferDataFlavors()

	for i=lbound(oTypes) To ubound(oTypes)
		 if oTypes(i).MimeType=&quot;text/plain;charset=utf-16&quot; then 
			iPlainLoc = i
			exit for
		 end if
	next

	if(iPlainLoc &gt;= 0) then
		convertedString = oConverter.convertToSimpleType( _
				oClipContents.getTransferData(oTypes(iPlainLoc)),_
				com.sun.star.uno.TypeClass.STRING)
		fsGetClipBoard = convertedString
	else
		if bSuggest then
			fsGetClipBoard = inputbox(_
					fsLookUpTerm(_
					fsSelectionLanguage), _
					fsLookUpTerm(_
					&quot;s_read-text&quot;), _
					&quot; &quot;)
		end if
	end if
end function


function WinSpeechProgramPath() as string
	&apos; 2011-03-14
	&apos; Always default to wscript.
	&apos; The dialog shows all compatible SAPI5 voices
	&apos; SAPI5 can&apos;t use Microsoft Speech Server voices
	dim s1 as string

	if fileexists(&quot;C:\Windows\SysWOW64\wscript.exe&quot;) then
		s1=&quot;C:\Windows\SysWOW64\wscript.exe&quot;
	else
		s1=&quot;C:\WINDOWS\system32\wscript.exe&quot;
	end if
	WinSpeechProgramPath=s1
end function


function WinSpeechArgument() as string
	&apos;OOo for Windows always default to wscript.exe
	dim s1 as string
	s1= &quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	WinSpeechArgument=s1
end function


function fbWindowsHasAnInternationalVoice(_
		optional byval bShow, _
		optional byval sSearch)
	&apos; if only US English voices are installed, don&apos;t show multilingual option
	&apos; optional search term - search by a specific language or region
	&apos;	if fbWindowsHasAnInternationalVoice (False, &quot;United States&quot;) then
	&apos; 		&apos; We have another country&apos;s voice
	&apos;		Do stuff
	&apos;	end if
	dim b1 as boolean
	dim n as integer
	dim s1 as string
	dim s2 as string
	dim cr as string

	if ismissing (bShow) then
		bShow = False
	end if
	if ismissing (sSearch) then
		sSearch = &quot;united states&quot;
	end if
	s2 = &quot;&quot;
	cr = chr(10)
	on error goto fbWindowsHasAnInternationalVoiceErr
	b1=true
	if fsGetOS=&quot;WINDOWS&quot; then
		dim sapi As Object
		Set Sapi=CreateObject(&quot;Sapi.SpVoice&quot;)
		b1 = False
		for n = 0 to Sapi.GetVoices.Count - 1
			s1=(Sapi.GetVoices.Item(n).GetDescription)
			s2 = s2 &amp; s1 &amp; cr
			s1 = lcase(s1)
			if Instr(s1, &quot;microsoft sam&quot;) &gt; 0 then
				exit for
			elseif Instr(s1, lcase(sSearch)) = 0 then
				&apos; We found a non-matching voice
				b1 = True
				if not(bShow) then
					exit for
				end if
			end if
		Next
		if bShow then
			msgbox(s2, _
					0, _
					fsLookUpTerm(&quot;s_read-text&quot;) &amp; _
					&quot; &quot; &amp; _
					fsLookUpTerm(&quot;s_test&quot;) &amp; _
					&quot; - &quot; &amp; _
					b1)
		end if
	end if
	fbWindowsHasAnInternationalVoice = b1
	exit function
	fbWindowsHasAnInternationalVoiceErr:
	fbWindowsHasAnInternationalVoice = False
end function


sub dialog1Combo2ShowSAPIChoices(_
		oDialog)
&apos;&apos;
&apos;&apos; # Windows dialogue
&apos;&apos; 
&apos;&apos; **Read text** reads text aloud, saves audio files and
&apos;&apos; can use resources from the web based on the selected
&apos;&apos; text.
&apos;&apos;
&apos;&apos; * Select text.
&apos;&apos; * Click the *Read selection* button.
&apos;&apos; * To read aloud, accept the default in the dialogue, or choose
&apos;&apos;   another action from the menus.
&apos;&apos;
&apos;&apos; Saving files
&apos;&apos; ------------
&apos;&apos;
&apos;&apos; Windows lets you save sound files in an uncompressed`.wav` format.
&apos;&apos; To save space, convert `.wav` files to small `.m4a` or `mp3` files
&apos;&apos; that you can share on most mobile phones, music players and tablets.
&apos;&apos;
&apos;&apos; Language support
&apos;&apos; ----------------
&apos;&apos;
&apos;&apos; This script uses the Windows speech application programming
&apos;&apos; interface (`SAPI`). Depending on the version and locale of
&apos;&apos; Windows, voices in different languages may be available.
&apos;&apos;
&apos;&apos; Examples:
&apos;&apos; ---------
&apos;&apos;
&apos;&apos; External program:
&apos;&apos;
&apos;&apos;     C:\Windows\SysWOW64\wscript.exe
&apos;&apos;
&apos;&apos; Command line options (default):
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; or (save as a .wav file in the home directory):
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /soundfile:&quot;(HOME)(now).wav&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; or (use a named voice)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /voice:&quot;Microsoft Hortense Desktop - French&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; or (read a little slower)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /rate:-3 &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; or (change voice by language)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /language:&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; **note**: Selecting this option doesn&apos;t work with the SAPI
&apos;&apos; speech synthesizer if you haven&apos;t installed a voice in the
&apos;&apos; language.
&apos;&apos;
&apos;&apos; Optional formats
&apos;&apos; ================
&apos;&apos;
&apos;&apos; ## Audacity
&apos;&apos;
&apos;&apos; [Audacity](https://sourceforge.net/projects/audacity/) is a free cross platform audio editor. It can
&apos;&apos; use an [FFmpeg](https://ffmpeg.org/) library to save audio files in different formats.
&apos;&apos;
&apos;&apos; ### FFmpeg for Audacity
&apos;&apos;
&apos;&apos; Windows security policies may prevent you from installing the Audacity FFmpeg converter
&apos;&apos; library using the `ffmpeg-win-2.2.2.exe` installer.  You can install the FFmpeg library
&apos;&apos; by downloading the `ffmpeg-win-2.2.2.zip` archive and copying the contents to a
&apos;&apos; directory that is available to all users.
&apos;&apos;
&apos;&apos; 1. Log in with an administrator account.
&apos;&apos; 2. Go to the [MP3 for Audacity page](https://lame.buanzo.org/#lamewindl).
&apos;&apos; 3. Directly underneath &quot;for FFmpeg/LAME on Windows click below:&quot;, left-click the link
&apos;&apos;   `ffmpeg-win-2.2.2.zip` and save the file anywhere on your computer.
&apos;&apos; 4. Double-click `ffmpeg-win-2.2.2.zip` to open the archive.
&apos;&apos; 5. if the directory `C:\opt` doesn&apos;t exist, create it. Copy the contents of the zip
&apos;&apos;    file to `C:\opt`.
&apos;&apos; 6. Any user can now set up Audacity to use ffmpeg by opening Audacity, then setting
&apos;&apos;    *Edit - Preferences... - Libraries - FFmpeg library* to `C:\opt`.
&apos;&apos; 7. Read text extension now shows .mp3 and .ogg formats as export options.
&apos;&apos; 8. You can use Audacity to add music or special effects to your sound files.
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).mp3&quot; &quot;(TMP)&quot;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).ogg&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; ## Flac
&apos;&apos;
&apos;&apos; Makes free lossless audio codec (FLAC) files.
&apos;&apos;
&apos;&apos;  * Install `flac.exe` in `C:\opt\`
&apos;&apos;  * [flac encoder](https://xiph.org/flac/links.html#software)
&apos;&apos;  * [Players and plugins](https://xiph.org/flac/)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).flac&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; ## iTunes
&apos;&apos;
&apos;&apos; **iTunes** is a visual music manager from Apple available at no cost.
&apos;&apos;
&apos;&apos; Use [iTunes](https://www.apple.com/itunes/) to convert sound files with metadata
&apos;&apos; and album cover art. The first time you use it, iTunes takes a few moments to start.
&apos;&apos; iTunes creates the audio file in it&apos;s own directory and signals you with a sound.
&apos;&apos; Read Text Extension puts a copy in a sound directory in your home directory.
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /language:&quot;en-US&quot; /soundfile:&quot;(HOME)en\(now).aif&quot; &quot;(TMP)&quot;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /language:&quot;en-US&quot; /soundfile:&quot;(HOME)en\(now).m4a&quot; &quot;(TMP)&quot;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /language:&quot;en-US&quot; /soundfile:&quot;(HOME)en\(now).mp3&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; ## Lame
&apos;&apos;
&apos;&apos; Lame is a free command line file converter.
&apos;&apos;
&apos;&apos; Play mp3 compatible encoded sound files with most music players
&apos;&apos; Use `lame.exe` to make an mp3 compatible file.
&apos;&apos;
&apos;&apos;  * Install `lame.exe` in `C:\opt\`
&apos;&apos;  * [Lame encoder](http://www.rarewares.org/mp3-lame-bundle.php)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).mp3&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; ## FFmpeg
&apos;&apos;
&apos;&apos; [ffmpeg](https://www.ffmpeg.org) is a free visual music and video converter.
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).mp3&quot; &quot;(TMP)&quot;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).ogg&quot; &quot;(TMP)&quot;
&apos;&apos;
&apos;&apos; ## Ogg
&apos;&apos;
&apos;&apos; Play ogg encoded sound files with firefox, chrome or chromium.
&apos;&apos; Use `oggenc.exe` or `oggenc2.exe` to make an ogg file
&apos;&apos;
&apos;&apos;  * The ogg converter program must be installed in `C:\opt\`.
&apos;&apos;  * [oggenc2 encoder](http://www.rarewares.org/ogg-oggenc.php)
&apos;&apos;  * [Players and plugins](https://xiph.org/vorbis/)
&apos;&apos;
&apos;&apos;     &quot;(TTS_WSCRIPT_VBS)&quot; /use-optional-app:&quot;True&quot; /soundfile:&quot;(HOME)en\(now).ogg&quot; &quot;(TMP)&quot;
&apos;&apos;
	dim Sapi As Object
	dim n as integer
	dim aLineOfText as string,myScriptPath as string
	dim n1 as integer,s1 as string,oComboBox as variant
	dim sProgram as string,myTextPath as string
	dim sSelectionLangCountryTag, sSelectionLanguageTag as string

	Set Sapi=CreateObject(&quot;Sapi.SpVoice&quot;)
	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n1=oComboBox.getItemCount()
	oComboBox.removeItems( 0,n1)
	n=0
	if fbWindowsHasAnInternationalVoice() then
		sSelectionLangCountryTag = &quot; /language:&quot;&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;&quot;&quot;
		sSelectionLanguageTag = &quot;(SELECTION_LANGUAGE_CODE)&quot;
	else
		sSelectionLangCountryTag = &quot; /language:&quot;&quot;en-US&quot;&quot;&quot;
		sSelectionLanguageTag = &quot;en&quot;
	end if

	while n &lt; Sapi.GetVoices.Count
		s1 = Sapi.GetVoices.Item(n).GetDescription
		for n1 = 10 To -10 step -2
			oComboBox.addItem( &quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
			&quot; /voice:&quot;&quot;&quot; &amp; s1 &amp; &quot;&quot;&quot; /rate:&quot; &amp; Trim(n1) &amp; &quot; &quot;&quot;(TMP)&quot;&quot;&quot;,0)
		Next
		n=n+1
	wend
	On Error Goto 0
	for n1 = 10 To -10 step -2
		oComboBox.addItem( &quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /rate:&quot; &amp; Trim(n1) &amp; &quot; &quot;&quot;(TMP)&quot;&quot;&quot;,0)
	Next

	if fileexists(fsOptDirectory() &amp; &quot;oggenc2.exe&quot;) or fbHaveFfmpeg() then
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /use-optional-app:&quot;&quot;True&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).ogg&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	end if

	if fbHaveFfmpeg() or len(fsLamePath) &gt; 0 then
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /use-optional-app:&quot;&quot;True&quot;&quot;&quot; &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).mp3&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	end if

	if fileexists(fsOptDirectory() &amp; &quot;neroAacTag.exe&quot;) and _
			fileexists(fsOptDirectory() &amp; &quot;neroAacEnc.exe&quot;) then
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /use-optional-app:&quot;&quot;True&quot;&quot;&quot; &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).m4a&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	elseif fileexists(fsOptDirectory() &amp; &quot;neroAacEnc.exe&quot;) or _
			fileexists(fsOptDirectory() &amp; &quot;faac.exe&quot;) then
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /use-optional-app:&quot;&quot;True&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).m4a&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	end if

	if fileexists(fsOptDirectory() &amp; &quot;flac.exe&quot;) then
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /use-optional-app:&quot;&quot;True&quot;&quot;&quot; &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).flac&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	end if

	if fileexists(fsProgramDirectory() &amp; &quot;iTunes&quot;) or _
			fileexists(fsProgramDirectoryx86() &amp; &quot;iTunes&quot;) then
		&apos; We can use iTunes to embed metadata and an album cover.
		&apos; [iTunes][1] makes the file in it&apos;s own directory and indexes it. We
		&apos; copy the file to our sound directory. You can delete either copy
		&apos; if you don&apos;t need one, but if speed is important, and you don&apos;t
		&apos; want a copy every time use [Nero m4a encoder][2]
		&apos; [1]: https://www.apple.com/itunes/
		&apos; [2]: https://www.nero.com/
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).aif&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).mp3&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
		s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
		sSelectionLangCountryTag &amp; _
		&quot; /imagefile:&quot;&quot;(POSTER_IMG)&quot;&quot;&quot; &amp; _
		&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).m4a&quot;&quot;&quot; &amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	end if
	s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
	sSelectionLangCountryTag &amp; _
	&quot; /soundfile:&quot;&quot;(HOME)&quot; &amp; sSelectionLanguageTag &amp; &quot;\(now).wav&quot;&quot;&quot; &amp; _
		&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
	sSelectionLangCountryTag &amp; _
		&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	&apos; do not specify the language for the top item.
	s1=&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot; &amp; _
	&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)

	if fileexists(myTextPath) then
		Kill myTextPath
	end if
	Exit sub
	FichierKO:
	Resume FichierKO2
	FichierKO2:
	On Error Resume Next
end sub


function fsMacVoice(_
		n, _
		optional s2)
	dim s1 as string
	dim a1

	if ismissing(s2) then
		s2 = fsSelectionLanguageAndRegion(true)
	end if
	select case s2
		case &quot;ar-SA&quot;
			s1 = &quot;Tarik&quot;
		case &quot;cs-CZ&quot;
			s1 = &quot;Zuzana&quot;
		case &quot;da-DK&quot;
			s1 = &quot;Sara&quot;
		case &quot;de-DE&quot;,&quot;de-AT&quot;,&quot;de-CH&quot;,&quot;de-LU&quot;,&quot;de-LI&quot;,&quot;de-BE&quot;
			s1 = &quot;Anna&quot;
		case &quot;el-GR&quot;
			s1 = &quot;Melina&quot;
		case &quot;en-AU&quot;,&quot;en-NZ&quot;
			s1 = &quot;Karen,Lee&quot;
		case &quot;en-GB&quot;,&quot;en-BD&quot;,&quot;en-BS&quot;,&quot;en-GH&quot;,&quot;en-HK&quot;,&quot;en-JM&quot;,&quot;en-TT&quot;
			s1 = &quot;Daniel,Fiona&quot;
		case &quot;en-IE&quot;
			s1 = &quot;Moira&quot;
		case &quot;en-IN&quot;,&quot;en-PK&quot;
			s1 = &quot;Veena&quot;
		case &quot;en-US&quot;, &quot;en-CA&quot;
			s1 = &quot;Agnes,Albert,Alex,Bad News,Bahh,Bells,Boing,Bruce,Bubbles,Cellos,Deranged,&quot;
			s1 = s1 &amp; &quot;Fred,Good News,Hysterical,Junior,Kathy,Pipe Organ,Princess,Ralph,&quot;
			s1 = s1 &amp; &quot;Samantha,Trinoids,Vicki,Victoria,Whisper,Zarvox&quot;
		case &quot;en-ZA&quot;
			s1 = &quot;Tessa&quot;
		case &quot;es-AR&quot;
			s1 = &quot;Diego&quot;
		case &quot;es-ES&quot;
			s1 = &quot;Monica&quot;
		case &quot;es-MX&quot;
			s1 = &quot;Angelica,Javier,Paulina&quot;
		case &quot;fi-FI&quot;
			s1 = &quot;Satu&quot;
		case &quot;fr-CA&quot;
			s1 = &quot;Amelie,Felix&quot;
		case &quot;fr-FR&quot;,&quot;fr-BE&quot;
			s1 = &quot;Audrey,Thomas,Virginie&quot;
		case &quot;he-IL&quot;
			s1 = &quot;Carmit&quot;
		case &quot;hi-IN&quot;
			s1 = &quot;Lekha&quot;
		case &quot;hu-HU&quot;
			s1 = &quot;Mariska&quot;
		case &quot;id-ID&quot;
			s1 = &quot;Damayanti&quot;
		case &quot;it-IT&quot;
			s1 = &quot;Alice&quot;
		case &quot;ja-JP&quot;
			s1 = &quot;Kyoko&quot;
		case &quot;ko-KR&quot;, &quot;ko-KP&quot;
			s1 = &quot;Yuna&quot;
		case &quot;nb-NO&quot;
			s1 = &quot;Nora&quot;
		case &quot;nl-BE&quot;
			s1 = &quot;Ellen&quot;
		case &quot;nl-NL&quot;
			s1 = &quot;Xander&quot;
		case &quot;pl-PL&quot;
			s1 = &quot;Zosia&quot;
		case &quot;pt-BR&quot;
			s1 = &quot;Luciana&quot;
		case &quot;pt-PT&quot;
			s1 = &quot;Joana&quot;
		case &quot;ro-RO&quot;
			s1 = &quot;Ioana&quot;
		case &quot;ru-RU&quot;
			s1 = &quot;Milena&quot;
		case &quot;sk-SK&quot;
			s1 = &quot;Laura&quot;
		case &quot;sv-SE&quot;
			s1 = &quot;Alva&quot;
		case &quot;th-TH&quot;
			s1 = &quot;Kanya&quot;
		case &quot;tr-TR&quot;
			s1 = &quot;Yelda&quot;
		case &quot;zh-CN&quot;
			s1 = &quot;Ting-Ting&quot;
		case &quot;zh-HK&quot;
			s1 = &quot;Sin-ji&quot;
		case &quot;zh-TW&quot;
			s1 = &quot;Mei-Jia,Ya-Ling&quot;
		case else
			s1 = &quot;Alex,Daniel,Kathy,Lee,Vicki&quot;
	end select
	s1 = s1 &amp; &quot;,,&quot;
	a1 = split(s1, &quot;,&quot;)
	fsMacVoice = a1(n)
end function


sub dialog1Combo2ShowSAYChoices(_
		oDialog)
&apos;&apos;
&apos;&apos; # Apple OSX
&apos;&apos; 
&apos;&apos; **Read Text** reads text aloud, saves audio or video files
&apos;&apos; from text, and can use resources from the web based on the
&apos;&apos; selected text.
&apos;&apos; 
&apos;&apos;  * Select text.
&apos;&apos;  * Click the *Read selection...* button.
&apos;&apos;  * To read aloud, accept the default in the dialogue, or choose
&apos;&apos;    another action from the menus.
&apos;&apos; 
&apos;&apos; Read Aloud
&apos;&apos; 
&apos;&apos;     &quot;(SAY_APPLESCRIPT)&quot;
&apos;&apos; 
&apos;&apos; Record
&apos;&apos; 
&apos;&apos;      &quot;(SAY_APPLESCRIPT)&quot; &quot;(HOME)(now).aiff&quot;
&apos;&apos;      &quot;(SAY_APPLESCRIPT)&quot; &quot;(HOME)(now).m4a&quot;
&apos;&apos; 
&apos;&apos; FFMPEG (optional)
&apos;&apos; -----------------
&apos;&apos; 
&apos;&apos; Record a jpeg or png image file with sound using `ffmpeg`
&apos;&apos; 
&apos;&apos;      &quot;(SAY_APPLESCRIPT)&quot; &quot;(HOME)(now).webm&quot; &quot;(MY_IMAGE)&quot;
&apos;&apos;      &quot;(SAY_APPLESCRIPT)&quot; &quot;(HOME)(now).webm&quot; &quot;(MY_IMAGE)&quot; &quot;640x480&quot;
&apos;&apos; 
&apos;&apos;  [ffmpeg](https://https://www.ffmpeg.org)
&apos;&apos; 
	dim n, o as integer
	dim s1 as string
	dim aA
	dim oComboBox as variant

	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n=oComboBox.getItemCount()
	oComboBox.removeItems(0,n)
	aA = Array(&quot;.aif&quot;, &quot;.m4a&quot;)
	for n = lbound(aA) To ubound(aA)
		s1 = &quot;-o &quot;&quot;(HOME)(NOW)&quot; &amp; s2(n) &amp; &quot;&quot;&quot; -f &quot;&quot;(TMP)&quot;&quot;&quot;
		oComboBox.addItem(s1,0)
	Next
	n=0
	for n = 0 to 40
		if fsMacVoice(n) = &quot;&quot; then
			exit for
		else
			s1=&quot;-v &quot;&quot;&quot; &amp; fsMacVoice(n) &amp; &quot;&quot;&quot; -f &quot;&quot;(TMP)&quot;&quot;&quot;
			oComboBox.addItem(s1,0)
			n=n+1
		end if
	next

	s1=&quot;-f &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
end sub


sub dialog1Combo2ShowAppleScriptChoices(_
		oDialog)
	&apos;Mac OSX open or osascript
	dim n as integer
	dim CR, s1, s2 as string
	dim a1, a2
	dim oComboBox as variant

	CR = chr$(10)
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	n=oComboBox.getItemCount()
	oComboBox.removeItems( 0,n)
	s2 = &quot;&quot;
	if fbHaveFfmpeg() then
		s2 = s2 &amp; Join(_
				Array(_
						&quot;.webm&quot;&quot; &quot;&quot;(POSTER2_IMG)&quot;&quot; &quot;&quot;600x400&quot;&quot;&quot;,_
						&quot;.webm&quot;&quot; &quot;&quot;(POSTER_IMG)&quot;&quot; &quot;&quot;400x400&quot;&quot;&quot;,_
						&quot;.webm&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;&quot; &quot;&quot;640x480&quot;,_
						&quot;.webm&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;,_
						&quot;.wav&quot;,_
						&quot;.ogg&quot;,_
						&quot;.mp4&quot;&quot; &quot;&quot;(POSTER2_IMG)&quot;&quot; &quot;&quot;600x400&quot;&quot;&quot;,_
						&quot;.mp4&quot;&quot; &quot;&quot;(POSTER_IMG)&quot;&quot; &quot;&quot;400x400&quot;&quot;&quot;,_
						&quot;.mp4&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;&quot; &quot;&quot;640x480&quot;,_
						&quot;.mp4&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;,_
						&quot;.mp4&quot;,_
						&quot;.mp3&quot;, _
						&quot;&quot;),_
						&quot;,&quot;)
	end if
	s2 = s2 &amp; &quot;.aif,.m4a&quot;
	a2 = split(s2, &quot;,&quot;)
	s1= &quot;_SYSTEM_VOICE)&quot;&quot;&quot; &amp; CR &amp; _
			&quot;_AIRPLAY_QUICKLY)&quot;&quot;&quot; &amp; CR &amp; _
			&quot;_AIRPLAY_SLOWLY)&quot;&quot;&quot; &amp; CR &amp; _
			&quot;_AIRPLAY)&quot;&quot;&quot; &amp; CR
	for n = lbound(a2) to ubound(a2)
		s1 = s1 &amp; &quot;_SYSTEM_VOICE)&quot;&quot; &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW)&quot; &amp; a2(n) &amp; _
			&quot;&quot;&quot;&quot; &amp; CR &amp; _
			&quot;_QUICKLY)&quot;&quot; &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW)&quot; &amp; a2(n) &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			&quot;_SLOWLY)&quot;&quot; &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW)&quot; &amp; a2(n) &amp; &quot;&quot;&quot;&quot; &amp; CR &amp; _
			&quot;)&quot;&quot; &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW)&quot; &amp; a2(n) &amp; &quot;&quot;&quot;&quot; &amp; CR
	next
	s1 = s1 &amp; &quot;_SYSTEM_VOICE)&quot;&quot;&quot; &amp; CR &amp; _
		&quot;_SLOWLY)&quot;&quot;&quot; &amp; CR &amp; _
		&quot;_QUICKLY)&quot;&quot;&quot; &amp; CR &amp; _
		&quot;)&quot;&quot;&quot;
	a1=Split(s1,CR)
	for n = lbound(a1) to ubound(a1)
		oComboBox.addItem(&quot;&quot;&quot;(SAY_APPLESCRIPT&quot; &amp; a1(n),0)
	next
end sub


sub dialog1Combo2ShowESPEAKChoices(_
		oDialog)
	&apos;espeak
	dim n as integer
	dim s1 as string
	dim s2(3) as string
	dim s3 as string
	dim s4 as string
	dim n2 as integer
	dim oComboBox as variant
	dim sLanguage as string

	sLanguage=Lcase(fsGetLanguage())
	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n=oComboBox.getItemCount()
	oComboBox.removeItems(0,n)
	s3=&quot;&quot;
	s2(0)=&quot; -b 1 -s 130 -f &apos;(TMP)&apos; -w &apos;(HOME)(now).wav&apos;&quot;
	s2(1)=&quot; -b 1 -f &apos;(TMP)&apos; -w &apos;(HOME)(now).wav&apos;&quot;
	s2(2)=&quot; -b 1 -s 130 -f &apos;(TMP)&apos;&quot;
	s2(3)=&quot; -b 1 -f &apos;(TMP)&apos;&quot;
	for n=0 To 3
		&apos;English
		s1=s3 &amp; &quot;-v en-us&quot; &amp; s2(n)
		oComboBox.addItem(s1,0)
		s1=s3 &amp; &quot;-v en&quot; &amp; s2(n)
		oComboBox.addItem(s1,0)
		select case sLanguage
		case &quot;es&quot;
			s1 = s3 &amp; &quot;-v es-mx&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
			s1=s3 &amp; &quot;-v es-la&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
			s1=s3 &amp; &quot;-v es&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
		case &quot;fr&quot;
			s1=s3 &amp; &quot;-v fr-be&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
			s1=s3 &amp; &quot;-v fr&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
		case &quot;nb&quot;,&quot;nn&quot;,&quot;no&quot;
			&apos; Norway
			s1=s3 &amp; &quot;-v no&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
		case &quot;pt&quot;
			&apos; Portugal And Brazil
			s1=s3 &amp; &quot;-v pt-pt&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
			s1=s3 &amp; &quot;-v pt&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
		case &quot;zh&quot;
			s1=s3 &amp; &quot;-v zh-yue&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
			s1=s3 &amp; &quot;-v zh&quot; &amp; s2(n)
			oComboBox.addItem(s1,0)
		case &quot;af&quot;,&quot;bs&quot;,&quot;ca&quot;,&quot;cs&quot;,&quot;cy&quot;,&quot;da&quot;,&quot;de&quot;,&quot;el&quot;,&quot;eo&quot;,&quot;fi&quot;,&quot;hi&quot;,&quot;hr&quot;,&quot;hu&quot;,_
			&quot;hy&quot;,&quot;id&quot;,&quot;is&quot;,&quot;it&quot;,&quot;ku&quot;,&quot;la&quot;,&quot;lv&quot;,&quot;mk&quot;,&quot;nl&quot;,&quot;pl&quot;,&quot;ro&quot;,&quot;ru&quot;,&quot;sk&quot;,&quot;sq&quot;,_
			&quot;sr&quot;,&quot;sv&quot;,&quot;sw&quot;,&quot;ta&quot;,&quot;tr&quot;,&quot;vi&quot;
			s1=s3 &amp; &quot;-v &quot; &amp; sLanguage &amp; s2(n)
			oComboBox.addItem(s1,0)
		case else
		end select
		if fileexists(&quot;/usr/bin/mbrola&quot;) or _
				fileexists(fsProgramDirectory() &amp; &quot;eSpeak\espeak-data\mbrola\&quot;) or _
				fileexists(fsProgramDirectoryx86() &amp; &quot;eSpeak\espeak-data\mbrola\&quot;) then
			s1=s3 &amp; &quot;-v mb-(SELECTION_LANGUAGE_CODE)1 &quot; &amp; s2(n)
&apos;fsTTSListVoicesVBS			oComboBox.addItem(s1,0)
		end if
		for n2=0 To fiCountEspeakMbrolaLanguage()
			s4=fsGetEspeakMbrolaLanguage(n2,1)
			if fileexists(&quot;/usr/share/mbrola/&quot; &amp; s4 &amp; &quot;/&quot; &amp; s4) or _
				fileexists(&quot;/usr/local/share/mbrola/&quot; &amp; s4 &amp; &quot;/&quot; &amp; s4) or _
				fileexists(&quot;/usr/share/mbrola/voices/&quot; &amp; s4) or _
				fileexists(&quot;/usr/local/share/mbrola/voices/&quot; &amp; s4) or _
				fileexists(fsProgramDirectory() &amp; &quot;eSpeak\espeak-data\mbrola\&quot; &amp; s4) or _
				fileexists(fsProgramDirectoryx86() &amp; &quot;eSpeak\espeak-data\mbrola\&quot; &amp; s4) then
				s1=s3 &amp; &quot;-v mb-&quot; &amp; s4 &amp; &quot; &quot; &amp; s2(n)
				oComboBox.addItem(s1,0)
			end if
		Next
		s1=s3 &amp; s2(n)
		oComboBox.addItem(s1,0)
	Next
end sub


sub dialog1Combo2ShowMEDIAChoices(_
		oDialog)
	&apos; Show some URLs
	dim n1 as integer
	dim s1 as string
	dim oComboBox as variant

	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n1=oComboBox.getItemCount()
	oComboBox.removeItems(0,n1)
	s1=&quot;https://translate.google.com/translate_tts?tl=(SELECTION_LANGUAGE_COUNTRY_CODE)&amp;q=(OOO_WEBTEXTSMALL)&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;https://translate.google.com/translate_tts?tl=(LANGUAGE_CODE)&amp;q=(OOO_WEBTEXTSMALL)&quot;
	oComboBox.addItem(s1,0)

end sub


sub dialog1Combo2ShowFESTIVALChoices(_
		oDialog)
	&apos; Show some URLs
	dim n1 as integer
	dim s1 as string
	dim oComboBox as variant

	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n1=oComboBox.getItemCount()
	oComboBox.removeItems( 0,n1)
	s1=&quot;--language welsh --tts &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;--language spanish --tts &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;--language english --tts &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;--tts &quot;&quot;(TMP)&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
end sub


sub dialog1Combo2ShowTEXT2WAVEChoices(_
		oDialog)
	&apos; Show this Festival script options
	dim n1 as integer
	dim s1 as string
	dim oComboBox as variant

	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	REM first remove all old items from the list
	n1=oComboBox.getItemCount()
	oComboBox.removeItems( 0,n1)
	s1=&quot;&quot;&quot;(TMP)&quot;&quot; -otype snd -o &quot;&quot;(HOME)(now).wav&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
	s1=&quot;&quot;&quot;(TMP)&quot;&quot; -o &quot;&quot;(HOME)(now).wav&quot;&quot;&quot;
	oComboBox.addItem(s1,0)
end sub


sub dialog1Combo1ShowFESTIVALScripts(_
		oDialog)
&apos;&apos;
&apos;&apos; # Linux 
&apos;&apos;
&apos;&apos; Festival
&apos;&apos; --------
&apos;&apos; 
&apos;&apos; Reads a text file using festival.
&apos;&apos; 
&apos;&apos; The festival engine is a software speech synthesizer.
&apos;&apos; 
&apos;&apos; Install festival using a package manager to install a festivox or festival
&apos;&apos; voice.  The package manager should automatically select the festival package
&apos;&apos; and the required support files.
&apos;&apos;
&apos;&apos; Festival scripts allow you to change the speed, the pitch and the voice.  You can 
&apos;&apos; add music or sound effects to the output.
&apos;&apos;
	dim n as integer
	dim n2 as integer
	dim s1 as string
	dim s2(4) as string
	dim oComboBox as variant

	REM get control
	oComboBox=oDialog.getControl(&quot;ComboBox1&quot;)
	REM first remove all old items from the list
	n=oComboBox.getItemCount()
	oComboBox.removeItems(0,n)
	s2(4)=&quot;( tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	s2(3)=&quot;(SayText &quot;&quot;The selection says: &quot;&quot;)( tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	s2(2)=&quot;(SayText &quot;&quot;On (WEEKDAY), (DATE) at (TIME), (AUTHOR) said: &quot;&quot;)( tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	s2(1)=&quot;(set! utt1 (Utterance Phrase ((Phrase ((name B))The (selected ((EMPH 3)))text )(Phrase ((name BB)) says: ))))(utt.synth utt1)(utt.play utt1)( tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	if fileexists(soundsDirectory() &amp; &quot;apert.wav&quot;) then
		s2(0)=&quot;(set! utt1 (Utterance Wave (SOUND_GALLERY)apert.wav))(utt.synth utt1)(utt.play utt1)(tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	else
		s2(0)=&quot;(set! utt1 (Utterance Wave /usr/share/sounds/alsa/Noise.wav))(utt.synth utt1)(utt.play utt1)(tts &quot;&quot;(TMP)&quot;&quot; nil)(quit)&quot;
	end if
	for n2 = 0 to fiCountFestivalDirectory
		for n=0 To 4
			if fileexists(fsFestivalDirectory(n2)) then
				if n = 4 or instr(fsFestivalDirectory(n2) ,&quot;english&quot;) &lt;&gt; 0 then
					s1= &quot;(voice_&quot; &amp; fsFestivalVoice(n2) &amp; &quot;)&quot;
					oComboBox.addItem(s1 &amp; s2(n),0)
				end if
			end if
		Next
	Next
	n= 4
	oComboBox.addItem(s2(n),0)
end sub


function fiDialog1Combo2ShowMyPythonChoices(_
		oDialog)
&apos;&apos;
&apos;&apos; Python
&apos;&apos; ------
&apos;&apos; 
&apos;&apos; [Python][SMPC1] is an interpreted, interactive, object-oriented
&apos;&apos; programming language.
&apos;&apos;
&apos;&apos; Read Text uses python to access operating system commands in Linux.
&apos;&apos; 
&apos;&apos; External program:
&apos;&apos; 
&apos;&apos;     /usr/bin/python3
&apos;&apos; 
&apos;&apos; Command line options:
&apos;&apos; 
&apos;&apos; The command line options vary depending on the speech resources available on
&apos;&apos; your computer.  for Linux, an audio file converter that can add metadata tags
&apos;&apos; is recommended.  Both [avconv][SMPC2] and [ffmpeg][SMPC3] are capable.
&apos;&apos; 
&apos;&apos; See the manual page for *python* for more detailed information about python.
&apos;&apos; Click the *About...* button in the extension dialogue for information about
&apos;&apos; specific options available to you.
&apos;&apos;
&apos;&apos; [SMPC1]: https://python.org
&apos;&apos; [SMPC2]: https://libav.org/avconv.html
&apos;&apos; [SMPC3]: https://ffmpeg.org
&apos;&apos;
	&apos; Show the python script options
	dim n as integer
	dim n2 as integer
	dim s1 as string
	dim s2(10) as string
	dim s3 as string
	dim s4 as string
	dim sLanguage as string
	dim a1
	dim CR as string
	dim oComboBox as variant

	CR=chr(10)
	s1 = &quot;&quot;
	s3 = &quot;&quot;
	s4 = &quot;&quot;
	sLanguage=Lcase(fsGetLanguage())
	select case fsGetOS()
	case &quot;WINDOWS&quot; &apos; Show examples
		s1=s1 &amp; CR &amp; &quot;-c &quot;&quot;import os; os.startfile(&apos;https://chart.apis.google.com/chart?chs=350x350&amp;cht=qr&amp;chl=(OOO_WEBTEXT)&apos;)&quot;&quot;&quot;
		s1=s1 &amp; CR &amp; &quot;-c &quot;&quot;import os; os.startfile(&apos;https://translate.google.com/translate_tts?tl=(SELECTION_LANGUAGE_COUNTRY_CODE)&amp;q=(OOO_WEBTEXTSMALL)&apos;)&quot;&quot;&quot;
		s1=s1 &amp; CR &amp; &quot;&quot;&quot;(OS_PY)&quot;&quot; &quot;&quot;notepad &apos;(TMP)&apos;&quot;&quot;&quot;
	case &quot;OSX&quot;,&quot;MAC&quot; &apos; Python silently fails on OSX
		exit function
	end select
	oComboBox=oDialog.getControl(&quot;ComboBox2&quot;)
	n=oComboBox.getItemCount()
	oComboBox.removeItems(0,n)
	if fileexists(fsProgramDirectory() &amp; &quot;Python\Lib\site-packages\pyttsx&quot;) Or fileexists(fsProgramDirectoryx86() &amp; &quot;Python\Lib\site-packages\pyttsx&quot;) then
		s2(0)=&quot; --rate 90 &quot;
		s2(1)=&quot; --rate 60 &quot;
		s2(2)=&quot; --rate 30 &quot;
		s2(3)=&quot; --rate 0 &quot;
		s2(4)=&quot; --rate -30 &quot;
		s2(5)=&quot; --rate -60 &quot;
		s2(6)=&quot; --rate -90 &quot;
		s2(7)=&quot; &quot;
		for n=0 To 7
			s1=s1 &amp; CR &amp; &quot;&quot;&quot;(PYTTSX_READ_TEXT_PY)&quot;&quot;&quot;&amp; s2(n) &amp; &quot;&quot;&quot;(TMP)&quot;&quot;&quot;
		Next
	end if
	if Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),&quot;bin/python3&quot;) &gt; 0 then
		if fileexists(&quot;/usr/lib/python3/dist-packages/speechd/client.py&quot;) then
			s2(0)=&quot;MALE3&quot;
			s2(1)=&quot;MALE2&quot;
			s2(2)=&quot;MALE1&quot;
			s2(3)=&quot;FEMALE3&quot;
			s2(4)=&quot;FEMALE2&quot;
			s2(5)=&quot;FEMALE1&quot;
			s2(6)=&quot;CHILD_MALE&quot;
			s2(7)=&quot;CHILD_FEMALE&quot;
			for n=0 To 7
				s1=s1 &amp; CR &amp; &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot;&amp; _
				&quot; --language &quot;&quot;(SELECTION_LANGUAGE_CODE)&quot;&quot; --voice &quot;&quot;&quot;&amp; s2(n) &amp; _
				&quot;&quot;&quot; --rate &quot;&quot;-30&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;

				s1=s1 &amp; CR &amp; &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot;&amp; _
				&quot; --language &quot;&quot;(SELECTION_LANGUAGE_CODE)&quot;&quot; --voice &quot;&quot;&quot;&amp; s2(n) &amp; _
				&quot;&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			Next
			s1=s1 &amp; CR &amp; &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot;&quot;&amp; _
			&quot; --language &quot;&quot;(SELECTION_LANGUAGE_CODE)&quot;&quot;&quot;&amp; _
			&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
			s1=s1 &amp; CR &amp; &quot;&quot;&quot;(SPD_READ_TEXT_PY)&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		end if
	end if
	if fileexists(&quot;/usr/bin/qrencode&quot;) then
	 	s2(0)=&quot;12&quot;
		s2(1)=&quot;9&quot;
		s2(2)=&quot;6&quot;
		s2(3)=&quot;3&quot;
		s2(4)=&quot;1&quot;
		for n=0 to 4
			s1=s1 &amp; CR &amp; &quot;&quot;&quot;(CREATE_QR_LABEL_PY)&quot;&quot; --size &quot; &amp; s2(n) &amp; _
					&quot; --output &quot;&quot;(HOME)(now).png&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;

			s1=s1 &amp; CR &amp; &quot;&quot;&quot;(CREATE_QR_LABEL_PY)&quot;&quot; --size &quot; &amp; s2(n) &amp; _
					&quot; --output &quot;&quot;/tmp/&quot; &amp; _
					fsGetSetting(&quot;ooname&quot;) &amp; _
					&quot; - &quot; &amp; _
					fsLookUpTerm( &quot;s_read-text&quot;,_
					fsGetLanguage()) &amp; &quot; - &quot; &amp; _
					fsUserName &amp; &quot;.png&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
		Next
		s1=s1 &amp; CR &amp; _
				&quot;&quot;&quot;(CREATE_QR_LABEL_PY)&quot;&quot; --output &quot;&quot;(HOME)(now).png&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;

		s1=s1 &amp; CR &amp; &quot;&quot;&quot;(CREATE_QR_LABEL_PY)&quot;&quot; --output &quot;&quot;/tmp/&quot; &amp; _
				fsGetSetting(&quot;ooname&quot;) &amp; _
				&quot; - &quot; &amp; _
				fsLookUpTerm( &quot;s_read-text&quot;,_
				fsGetLanguage()) &amp; _
				&quot;.png&quot;&quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	end if
	if fileexists(&quot;/usr/bin/espeak&quot;) then
		&apos; does not work in Windows, only Linux...
		s2(0)=&quot; -s 130 -f &apos;(TMP)&apos; -w &apos;(HOME)(now).wav&apos;&quot;&quot;&quot;
		s2(1)=&quot; -f &apos;(TMP)&apos; -w &apos;(HOME)(now).wav&apos;&quot;&quot;&quot;
		s2(2)=&quot; -s 130 -f &apos;(TMP)&apos;&quot;&quot;&quot;
		s2(3)=&quot; -f &apos;(TMP)&apos;&quot;&quot;&quot;
		s3=&quot;&quot;&quot;(OS_PY)&quot;&quot; --c &quot;&quot;espeak &quot;
		for n=0 To 3
			&apos;English
			s1=s1 &amp; CR &amp; s3 &amp; &quot;-v en-us&quot; &amp; s2(n)
			s1=s1 &amp; CR &amp; s3 &amp; &quot;-v en&quot; &amp; s2(n)
			select case sLanguage
			case &quot;es&quot;
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v es-mx&quot; &amp; s2(n)
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v es-la&quot; &amp; s2(n)
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v es&quot; &amp; s2(n)
			case &quot;fr&quot;
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v fr-be&quot; &amp; s2(n)
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v fr&quot; &amp; s2(n)
			case &quot;nb&quot;,&quot;nn&quot;,&quot;no&quot;
				&apos; Norway
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v no&quot; &amp; s2(n)
			case &quot;pt&quot;
				&apos; Portugal And Brazil
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v pt-pt&quot; &amp; s2(n)
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v pt&quot; &amp; s2(n)
			case &quot;zh&quot;
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v zh-yue&quot; &amp; s2(n)
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v zh&quot; &amp; s2(n)
			case &quot;af&quot;,&quot;bs&quot;,&quot;ca&quot;,&quot;cs&quot;,&quot;cy&quot;,&quot;da&quot;,&quot;de&quot;,&quot;el&quot;,&quot;eo&quot;,&quot;fi&quot;,&quot;hi&quot;,&quot;hr&quot;,&quot;hu&quot;,_
				&quot;hy&quot;,&quot;id&quot;,&quot;is&quot;,&quot;it&quot;,&quot;ku&quot;,&quot;la&quot;,&quot;lv&quot;,&quot;mk&quot;,&quot;nl&quot;,&quot;pl&quot;,&quot;ro&quot;,&quot;ru&quot;,&quot;sk&quot;,&quot;sq&quot;,_
				&quot;sr&quot;,&quot;sv&quot;,&quot;sw&quot;,&quot;ta&quot;,&quot;tr&quot;,&quot;vi&quot;
				s1=s1 &amp; CR &amp; s3 &amp; &quot;-v &quot; &amp; sLanguage &amp; s2(n)
			case else
			end select
			for n2=0 To fiCountEspeakMbrolaLanguage()
				s4=fsGetEspeakMbrolaLanguage(n2,1)
				if fileexists(&quot;/usr/share/mbrola/&quot; &amp; s4) or _
					fileexists(&quot;/usr/local/share/mbrola/&quot; &amp; s4) or _
					fileexists(&quot;/usr/share/mbrola/voices/&quot; &amp; s4) or _
					fileexists(&quot;/usr/local/share/mbrola/voices/&quot; &amp; s4) then
					s1=s1 &amp; CR &amp; s3 &amp; &quot;-v mb-&quot; &amp; s4 &amp; &quot; &quot; &amp; s2(n)
				end if
			Next
			s1=s1 &amp; CR &amp; s3 &amp; s2(n)
		Next
	end if
	n=0
	if fileexists(&quot;/usr/bin/text2wave&quot;) or _
			fileexists(fsProgramDirectoryx86() &amp; &quot;festival\text2wave&quot;) or _
 			fileexists(fsProgramDirectory() &amp; &quot;festival\texttowave&quot;) then
		for n = 0 to fiCountFestivalDirectory
			if fileexists(fsFestivalDirectory(n)) then
				s4=&quot;&quot;&quot;(FESTIVAL_READ_TEXT_PY)&quot;&quot;&quot; &amp; &quot; --eval &quot;&quot;(voice_&quot; &amp; fsFestivalVoice(n) &amp; &quot;)&quot;&quot;&quot;
				s1= s1 &amp; fspyOutOptions(oDialog,s4)
			end if
		Next
	end if
	n=0
	if fileexists(&quot;/usr/bin/espeak&quot;) or _
			fileexists(fsProgramDirectoryx86() &amp; &quot;eSpeak\command_line\espeak.exe&quot;) or _
 			fileexists(fsProgramDirectory() &amp; &quot;eSpeak\command_line\espeak.exe&quot;) then
 		s2(0)=&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;
		s4= &quot;&quot;&quot;(ESPEAK_READ_TEXT_PY)&quot;&quot;&quot; &amp; &quot; --language=&quot;&amp; s2(n) &apos; &amp; &quot; --rate=100% --pitch=100% &quot;
		s1= s1 &amp; fspyOutOptions(oDialog,s4)
	end if
	n=6
	if fileexists(&quot;/usr/bin/pico2wave&quot;) then
		s2(0)=&quot;it&quot;
		s2(1)=&quot;fr&quot;
		s2(2)=&quot;es&quot;
		s2(3)=&quot;en-GB&quot;
		s2(4)=&quot;en&quot;
		s2(5)=&quot;de&quot;
		s2(6)=&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;
		s2(7)=&quot;(SELECTION_LANGUAGE_CODE)&quot;

		s4= &quot;&quot;&quot;(PICO_READ_TEXT_PY)&quot;&quot;&quot; &amp; &quot; --language=&quot;&amp; s2(n)
		s1= s1 &amp; fspyOutOptions(oDialog, s4)
	end if
	if len(s1) &gt; 0 then
		if asc(left(s1,1)) = 10 then
			s1 = mid(s1,2)
		end if
	
		a1=Split(s1,CR)
		for n = lbound(a1) + 1 to ubound(a1)
			oComboBox.addItem(a1(n),0)
		next
	end if
	n=oComboBox.getItemCount()
	fiDialog1Combo2ShowMyPythonChoices = n
	exit function
	fiDialog1Combo2ShowMyPythonChoicesErr:
	fiDialog1Combo2ShowMyPythonChoices = 0
end function


function fspyOutOptions(_
		oDialog, _
		byval s4)
	dim s1, s2, s3, s5, CR as string

	s1 = &quot;&quot;
	s3 = &quot; &quot;&quot;(TMP)&quot;&quot;&quot;
	if Instr(Lcase(f_dlgSpeechSetup.GetControl(&quot;FileControl2&quot;).Model.Text),_
			&quot;/bin/python3&quot;) = 0 then
		s2 = &quot;&quot; &amp; s3 &apos; Customize for python 2 - legacy libraries
	else
		s2 = &quot;&quot; &amp; s3 &apos; Customize for python 3 - for example, new speech libraries
	end if
	CR=chr(10)
	s5 = &quot;&quot;
	if s4 = &quot;&quot; then
		s1 = &quot;&quot;
	else
		s1=s1 &amp; CR &amp; s4 &amp; _
				&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).wav&quot;&quot;&quot; &amp; _
				s3
		if fileexists(&quot;/usr/bin/faac&quot;) or _
				fileexists(&quot;C:\opt\neroAacEnc.exe&quot;) then
			&apos; Some players might not play faac output. Check firefox and
			&apos; Android based music players.
			s1=s1 &amp; CR &amp; s4 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).m4a&quot;&quot;&quot; &amp; _
					s2
		end if
		if fileexists(&quot;/usr/bin/flac&quot;) or _
				fileexists(&quot;C:\opt\flac.exe&quot;) or _
				fbHaveFfmpeg then
			&apos; Free lossless audio codec
			s1=s1 &amp; CR &amp; s4 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).flac&quot;&quot;&quot; &amp; _
					s3
		end if
		if fbHaveFfmpeg then
			&apos; Apple Audio Interchange format. not compressed.
			s1=s1 &amp; CR &amp; s4 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).aif&quot;&quot;&quot; &amp; _
					s2
		end if
		if fbHaveFfmpeg then
			&apos; Webm is a modern cross platform web browser oriented video format. 
			&apos; Works on google-chrome, chromium, and firefox, but not on Safari 
			&apos; or Internet Explorer
			s5 = &quot; --image &quot;&quot;(POSTER_IMG)&quot;&quot;&quot;
			s1=s1 &amp; CR &amp; s4 &amp; _
					&quot; --image &quot;&quot;(MY_IMAGE)&quot;&quot;&quot; &amp; _
					&quot; --dimensions &quot;&quot;1200x800&quot;&quot;&quot; &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).webm&quot;&quot;&quot; &amp; _
				s2
			s1=s1 &amp; CR &amp; s4 &amp; _
				&quot; --image &quot;&quot;(POSTER2_IMG)&quot;&quot;&quot;&amp; _
				&quot; --dimensions &quot;&quot;600x400&quot;&quot;&quot; &amp; _
				&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).webm&quot;&quot;&quot; &amp; _
				s2
			s1=s1 &amp; CR &amp; s4 &amp; _
				s5 &amp; _
				&quot; --dimensions &quot;&quot;600x600&quot;&quot;&quot; &amp; _
				&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).webm&quot;&quot;&quot; &amp; _
				s2
		end if
		if (fileexists(&quot;/usr/share/doc/libogg0/copyright&quot;) and _
				fbHaveFfmpeg()) or _
				fileexists(&quot;C:\opt\oggenc.exe&quot;) or _
				fileexists(&quot;C:\opt\oggenc2.exe&quot;) then
			&apos; Could look for library, but the copyright page is in the same place
			&apos; on 64 bit systems.  avconv can convert wave to ogg files if the 
			&apos; library exists.
			s1=s1 &amp; CR &amp; s4 &amp; _
					s5 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).ogg&quot;&quot;&quot; &amp; _
					s2
		end if
		if fileexists(&quot;/usr/share/doc/libmp3lame0/copyright&quot;) or _
				fileexists(&quot;C:\opt\lame.exe&quot;) then
			&apos; Some players might not play lame mp3 output. Check firefox and 
			&apos; Android based music players.
			s1=s1 &amp; CR &amp; s4 &amp; _
					s5 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).mp3&quot;&quot;&quot; &amp; _
					s2
		elseif fileexists(&quot;/usr/share/doc/libtwolame0/copyright&quot;) or _
				fileexists(&quot;C:\opt\twolame.exe&quot;) then
			&apos; does not work with Rhythm box. not a widely used export format.
			s1=s1 &amp; CR &amp; s4 &amp; _
					&quot; --output &quot;&quot;(HOME)(SELECTION_LANGUAGE_CODE)/(NOW).mp2&quot;&quot;&quot; &amp; _
					s2
		end if
		s1=s1 &amp; CR &amp; s4 &amp; _
				 &quot; --rate=75% --pitch=100% &quot; &amp; _
				s3
		s1=s1 &amp; CR &amp; s4 &amp; _
				s3
		&apos; Nominal rate and pitch is --rate=100% --pitch=100% &quot;
		s1=s1 &amp; CR &amp; s4 &amp; _
				 &quot; --rate=75% --pitch=100% &quot; &amp; _
				&quot; --visible=False&quot; &amp; s3
		s1=s1 &amp; CR &amp; s4 &amp; _
				&quot; --visible=False&quot; &amp; s3
	end if
	fspyOutOptions = s1
end function


function AppleScriptPath() as string
	AppleScriptPath=&quot;/usr/bin/osascript&quot;
end function

&apos;&apos;
&apos;&apos; # Cross Platform information
&apos;&apos;

function fsMyTitleInputBox(_
		optional byVal bSkipWindows, _
		optional byval sA)
	&apos; bSkipWindows - Skip dialogue if Windows. Defaults to true.
	&apos; Normally, the Windows script takes care of verifying
	&apos; the title.
	&apos; sA - an optional title suggestion. Defaults to a title 
	&apos; based on the selected text.  Returns string or blank if 
	&apos; you click &quot;Cancel&quot;
	&apos; 
	dim cr
	dim s1
	dim s2
	dim s3
	dim s4
	dim s5
	
	if ismissing(bSkipWindows) then
		sA = bSkipWindows = True
	end if
	if ismissing(sA) then
		sA = fsThisSoundTitle()
	end if
	if bSkipWindows then
		if fsGetOS = (&quot;WINDOWS&quot;) then
			fsMyTitleInputBox = sA
			exit function
		end if
	end if
	if true then
		cr = chr(10)
		s1 = fsThisDocTitle()
		s2 = fsThisDocAuthor()
		s3 = fsThisDocGenre()
		s4 = fsThisSoundTitle()
		s5 = trim(str(fiMyCurrentAudioTrack(False)))
		fsMyTitleInputBox = InputBox(s1 &amp; cr &amp; s2 &amp; cr &amp; cr &amp; s5 &amp; &quot;. &quot; &amp; s4, s3, sA)
	end if
end function

sub resetSpeech()
&apos;&apos; Reset Speech
&apos;&apos; ------------
&apos;&apos;
&apos;&apos; if you are having problems with speech it is easy to reset the extension to the
&apos;&apos; default settings.  Simply type some random characters into the *External program*
&apos;&apos; box in the main dialogue.  The extension shows an error message and deletes the 
&apos;&apos; settings files that the extension creates. When you click  the *Read Selection*
&apos;&apos; button, the settings are rebuilt from scratch.
&apos;&apos;
	dim aFile, CR as string
	dim a1
	dim n as integer

	CR = chr(10)
	aFile=fsMyTempLock(&quot;lock&quot;) &amp; CR &amp; _
		fsMyTempLock(&quot;lock.id&quot;) &amp; CR &amp; _
		fsMyTempLock(&quot;lock.title&quot;) &amp; CR &amp; _
		fsMyTempLock(&quot;lock.album&quot;) &amp; CR &amp; _
		fsMyTempLock(&quot;lock.genre&quot;) &amp; CR &amp; _
		fsMyTempLock(&quot;lock.track&quot;) &amp; CR &amp; _
		fsFullPathOf(fsFestivalScriptName) &amp; CR &amp; _
		fsFullPathOf(fsTemporaryTextDoc) &amp; CR &amp; _
		fsFullPathOf(fsTemporaryTextDoc) &amp; &quot;.sable&quot; &amp; CR &amp; _
		fsFullPathOf(fsTemporaryTtsAppleScript)
	a1 = split(aFile, CR)
	for n = lbound(a1) to ubound(a1)
		if fileexists(a1(n)) then
			kill a1(n)
		end if
	next
end sub


sub writeScript(_
		myscript as string, _
		msgs() as variant, _
		errorCode as integer)
	&apos;This macro creates a temporary script file for the Festival speech synthesiser.
	&apos; &quot;Festival expects ISO-8859-15 encoding.&quot;
	&apos; FestCat: Speech Synthesis in Catalan using Festival
	&apos; http://festcat.talp.cat/download/archive/README
	&apos; November, 2007. Accessed 2013-08-28
	dim aFile as string

	aFile=fsFullPathOf(fsFestivalScriptName)
	if fsComplexAsiaOrWest(myscript)=&quot;WEST&quot; then
		fbCreateFile(aFile, myscript, &quot;iso-8859-15&quot;)
	else
		fbCreateFile(aFile, myscript, &quot;utf-8&quot;)
	end if
end sub


function fsAbout() as string
	fsAbout=getTextFromFile(fsDescriptionDoc,&quot;utf-8&quot;)
	&apos; Application&apos;s Default encoding
end function


function fsVBSTextString() as string
	fsVBSTextString=getTextFromFile(fsTTSScriptVBS,&quot;iso-8859-15&quot;)
	&apos;iso-8859-15 Windows encoding
end function


function fsSPDTextString() as string
	fsSPDTextString=getTextFromFile(fsPythonSpdDoc,&quot;utf-8&quot;)
end function


function fsPicoTextString() as string
	fsPicoTextString=getTextFromFile(fsPythonPicoDoc,&quot;utf-8&quot;)
end function


function fsEspeakTextString() as string
	fsEspeakTextString=getTextFromFile(fsPythonEspeakDoc,&quot;utf-8&quot;)
end function


function fsFestivalTextString() as string
	fsFestivalTextString=getTextFromFile(fsPythonFestivalDoc,&quot;utf-8&quot;)
end function


function fsPyttsxTextString() as string
	fsPyttsxTextString=getTextFromFile(fsPythonPyttsxDoc,&quot;utf-8&quot;)
end function


function fsOSTextString() as string
	fsOSTextString=getTextFromFile(fsPythonOSDoc,&quot;utf-8&quot;)
end function


function fsQRTextString() as string
	fsQRTextString=getTextFromFile(fsPythonCreateQR,&quot;utf-8&quot;)
end function


function getTextFromFile(_
		sFilePath, _
		sEncoding) as string
&apos;&apos;
&apos;&apos; Reading files
&apos;&apos; -------------
&apos;&apos; 
&apos;&apos; All extensions run in the **trusted** zone on your computer. This means that
&apos;&apos; this extension, like all extensions, can read files on your computer without
&apos;&apos; notifying you.  Make sure that extensions you use come from a trusted source.
&apos;&apos;
	&apos; http://www.oooforum.org/forum/viewtopic.phtml?t=53813
	&apos; Use simpleFileAccess instead of Basic file handling to 
	&apos; translate encoded text
	dim myTextFile As Object,sf As Object,fileStream As Object
	dim aLineOfText as string,myFilePath as string

	myFilePath=convertToURL(sFilePath)
	sf=createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	On Error Goto fichierKO
	fileStream=sf.openFileRead(myFilePath)
	myTextFile=createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
	myTextFile.InputStream=fileStream
	myTextFile.Encoding=sEncoding
	do while not myTextFile.IsEOF
		getTextFromFile=getTextFromFile &amp; myTextFile.readLine &amp; chr(13)
	Loop
	fileStream.closeInput
	myTextFile.closeInput
	On Error Goto 0
	exit function
	FichierKO:
		Resume FichierKO2
	FichierKO2:
	On Error Resume Next
	msgbox(&quot;File read Error !&quot;,16)
	fileStream.closeInput
	myTextFile.closeInput
	On Error Goto 0
end function


sub writeSpeech(_
		byval sA as string,_
		msgs() as variant,_
		errorCode as integer,_
		optional bforceISO885915)
&apos;&apos;
&apos;&apos; Writing Files
&apos;&apos; -------------
&apos;&apos; 
&apos;&apos; All extensions run in the **trusted** zone on your computer. This means that
&apos;&apos; this extension, like all extensions, can write files on your computer without
&apos;&apos; notifying you.  Make sure that extensions you use come from a trusted source.
&apos;&apos;
	&apos;creates a temporary text file for the speech synthesiser.
	&apos;UTF-8 encoding includes Asian and Complex languages.
	&apos;for western scripts, Festival expects iso-8859-15 encoding.

	dim bFile as string
	
	if ismissing(bforceISO885915) then
		bforceISO885915 = False
	end if
	bFile=fsFullPathOf(fsTemporaryTextDoc)
	if(bforceISO885915) then
 		fbCreateFile(bFile, sA, &quot;iso-8859-15&quot;)
 	else
		fbCreateFile(bFile, sA, &quot;utf-8&quot;)
	end if
end sub


function fsStripSmartQuotes(_
		byval sA)
	sA=fsReplaceText(sA, &quot;“&quot;, &quot;&quot;&quot;&quot;)
	sA=fsReplaceText(sA, &quot;”&quot;, &quot;&quot;&quot;&quot;)
	sA=fsReplaceText(sA, &quot;‘&quot;, &quot;&apos;&quot;)
	fsStripSmartQuotes=fsReplaceText(sA, &quot;’&quot;, &quot;&apos;&quot;)
end function


sub ttsActuate(_
		config() as variant, _
		msgs() as variant, _
		errorCode as integer, _
		optional byval sTextToSpeak as string)
	dim a1
	dim bAddTime as Boolean
	dim s1 as String
	dim sArtLook as String
	dim sArtURL as String
	dim sCommand as string
	dim sScript as string
	dim sProgram as string
	dim aVal as integer
	dim bWait as boolean
	dim n as integer
	dim oBar    &apos; Generated status bar 
	dim oFrame  &apos; Current frame
&apos;&apos;
&apos;&apos; Temporary Files
&apos;&apos; ---------------
&apos;&apos; 
&apos;&apos; This extension uses temporary files for two purposes:
&apos;&apos; 
&apos;&apos; - Communicate with an external script or program.
&apos;&apos; - Remember your preferences.
&apos;&apos; 
&apos;&apos; The location of temporary and settings files are determined by your
&apos;&apos; operating system.  Depending on the security set up of your computer,
&apos;&apos;  other users or programs might be able to read the contents of the
&apos;&apos; settings or temporary files. if you are concerned about privacy, 
&apos;&apos; launch this add-on again with no text selected to replace the temporary
&apos;&apos; file that contains the text you want to remain confidential. The path
&apos;&apos; and name of the temporary file is shown in the Command and Script areas
&apos;&apos; of the *About...* dialogue.
&apos;&apos;
	bAddTime = False
	sArtURL = &quot;&quot;
	n = 0
	On Error Goto errorHandler
	&apos;Choose what to speak
	if ismissing(sTextToSpeak) or sTextToSpeak = &quot;&quot; then  
		sTextToSpeak = fsGetTextSelection(False, true)
	end if
	a1 = Array(&quot;id&quot;,_
			&quot;title&quot;,_
			&quot;album&quot;,_
			&quot;genre&quot;,_
			&quot;track&quot;)
	for n = lbound(a1) To ubound(a1)
		if fileexists(fsMyTempLock(&quot;lock.&quot; &amp; a1(n))) then
			Kill fsMyTempLock(&quot;lock.&quot; &amp; a1(n))
		end if	
	Next
	if len(sTextToSpeak) = 0 then
		Exit sub
	end if
	On Error Resume Next
	oFrame=ThisComponent.getCurrentController().getFrame() 
	oBar=oFrame.createStatusIndicator() 
	oBar.start(fsLookUpTerm( &quot;s_read-text&quot;, fsGetLanguage()),100)
	On Error Goto ErrorHandler
	sCommand=&quot;&quot;
	sScript=&quot;&quot;
	&apos;Get rid of the old files containing a script And/or plain text of selected String
	resetSpeech
	sArtLook = config(5)
	if fbCreatingMediaFile(&quot;.3gp,.aac,.aif,.aiff,.alsa,.ape,.asf,.au,.avi,.caf,.dts,.flac,&quot; &amp; _
			&quot;.m4a,.mp2,.mp3,.mp4,.mpeg,.oga,.ogg,.ogm,.ogv,.oma,.opus,.riff,.rm,.smp,.snd,.sou,.spx,&quot; &amp; _
			&quot;.tta,.voc,.wav,.weba,.webm,.wma,.wmv,.wsaud&quot;, _
					sArtLook) then
		&apos; Get current track, then increment it by one to a maximum value of 255. 
		&apos; (hex FF)
		n = fiMyCurrentAudioTrack(true)
		if fsGetOS = &quot;OSX&quot; then 
			bAddTime = True
		else 
			if config(fiExternalOption) or config(fiFestivalOption) then
				&apos; Temporary Metadata for an external vbs or python script.
				&apos; External scripts delete these files once they have been
				&apos; read.  OSX creates a script at run-time, so these files
				&apos; are not required.
				&apos; 
				&apos; On UNIX and Linux platforms, check the sound title 
				&apos; before writing the setting.  Windows does this in the
				&apos; vbs script.
				if fsGetOS = &quot;WINDOWS&quot; then
					s1 = fsThisSoundTitle()
				else 
					s1 = fsMyTitleInputBox(true, fsThisSoundTitle())
					if s1 = &quot;&quot; then
						exit sub
					end if
				end if
				
				CreateFile(fsMyTempLock(&quot;lock.id&quot;), fsThisDocAuthor(), &quot;UTF-8&quot;)
				CreateFile(fsMyTempLock(&quot;lock.album&quot;), fsThisDocTitle(), &quot;UTF-8&quot;)
				CreateFile(fsMyTempLock(&quot;lock.title&quot;), s1, &quot;UTF-8&quot;)
				CreateFile(fsMyTempLock(&quot;lock.genre&quot;), fsThisDocGenre(), &quot;UTF-8&quot;)
				CreateFile(fsMyTempLock(&quot;lock.track&quot;), trim(Str(n)), &quot;UTF-8&quot;)
			end if
		end if
	else
		&apos; Set the global variable holding the track counter to zero
		&apos; if we aren&apos;t creating a media file.
 		&apos; 
		i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 0
	end if
	On Error Resume Next
	oBar.Value=70
	On Error Goto errorHandler
	if config(fiFestivalOption) then
		&apos;Write the Festival script and the file to read aloud
		sProgram=config(fiFestivalPath)
		sCommand=&quot;&quot;&quot;&quot; &amp; ConvertFromURL(fsFullPathOf(fsFestivalScriptName)) &amp; &quot;&quot;&quot;&quot;	
		&apos; Windows - don&apos;t limit to SAPI languages
		sScript=config(fiFestivalComboChoice)
		sScript=replaceLocalTokensWithStr(sScript)
		sScript=replacePublicTokensWithStr(sScript)
		if fsComplexAsiaOrWest(sTextToSpeak)=&quot;WEST&quot; then
			&apos; Compatible characters are officially supported by Festival using iso-8859-15
			writeScript(sScript,msgs(),errorCode, true)
			writeSpeech(sTextToSpeak,msgs(),errorCode, true)
		else
			&apos; use utf-8 - Complex and Asian characters may not be supported by your version of Festival
			writeScript(sScript,msgs(),errorCode, False)
			writeSpeech(sTextToSpeak,msgs(),errorCode, False)
		end if
	elseif config(fiExternalOption) then
		sProgram=config(fiExternalProgramPath)
		sCommand=config(fiExternalCommand)
		if Instr(Lcase(sProgram), &quot;bin/padsp&quot;) &gt; 0 then
			if Instr(Lcase(sCommand), &quot;swift&quot;) &gt; 0 then
				&apos; Cepstral swift Alison (2008) for Linux does not pronounce text around smart quotes correctly,
				&apos; so we strip the smart quotes. Be sure to tell swift to use utf-8 encoded text as follows: 
				&apos; &quot;Read with external program&quot; set to /usr/bin/padsp and 
				&apos; &quot;Command line options&quot; to swift -e utf-8 -m text -f &quot;(TMP)&quot;
				sTextToSpeak=fsStripSmartQuotes(sTextToSpeak)
			end if
		end if
		if ThisComponent.supportsService(_
			&quot;com.sun.star.presentation.PresentationDocument&quot;) then
			&apos; Write a song cover image in the output directory.
		 	sArtLook = config(5)
			if fbCreatingMediaFile(&quot;.aif,.aiff,.m4a,.mp3,.oga,.webm,.mp4&quot;, sArtLook) then
				sArtURL = fsExportAlbumCover()
			end if
		end if
		if fsGetOS() = &quot;UNIX&quot; OR fsGetOS() = &quot;OSX&quot; then
			if fbUsingPosixTalkProgram(sProgram) then
				&apos; When using a posix speech command and not using a script,
				&apos; the routine writes a lock file to use for toggling speech.
				&apos; The speech toggle does not work with all speech synthesis
				&apos; applications on all Posix platforms, because the `killall`
				&apos; command may not work on some processes when it is invoked 
				&apos; by a user with limited permissions.
				fbCreateFile(fsMyTempLock, fsAppSignature, &quot;utf-8&quot;)
			end if
		end if
		
		&apos; Remove audible markdown code symbols for blockquote, heading, emphasize 
		&apos; when they occur at the beginning or the end of a line.
		sTextToSpeak = fsTrimSpecial(sTextToSpeak, chr(13) &amp; chr(10) &amp; &quot;`#&gt;_ =-*+&quot;)
		sTextToSpeak = fsReplaceText(sTextToSpeak, chr(10) &amp; &quot;&gt;&quot;, chr(10)) &amp; chr(10)
		sTextToSpeak = fsCleanMdCode(sTextToSpeak)
		if bAddTime then 
			sTextToSpeak = sTextToSpeak &amp; &quot; [[slnc 400]]&quot;
		end if
&apos;&apos;
&apos;&apos; Customizing speech
&apos;&apos; ------------------
&apos;&apos; 
&apos;&apos; Speech can be modified by command line arguments, platform settings
&apos;&apos; and codes embedded into the speech text string.
&apos;&apos;
&apos;&apos; When creating spoken records of written documents, pauses are important.
&apos;&apos; Text is more understandable and less fatiguing to listen to when it is
&apos;&apos; punctuated by pauses between paragraphs or ideas.
&apos;&apos;
&apos;&apos; Modern speech synthesizers take care of most of the pauses required due
&apos;&apos; to punctuation and line breaks, but under some circumstances, an author
&apos;&apos; of a speech document may need to add a break manually.
&apos;&apos;
&apos;&apos; ### Windows
&apos;&apos; 
&apos;&apos; All currently supported versions of Windows can use 
&apos;&apos; [W3 Synchronized Multimedia Integration Language][SMIL2]. 
&apos;&apos; **SMIL** markup enables responsive speech as well as incorporating
&apos;&apos; specific languages, pitch, volume, speed and pauses.
&apos;&apos; 
&apos;&apos; ### Linux
&apos;&apos;
&apos;&apos; Linux support for SMIL varies by speech synthesizer.  In some speech
&apos;&apos; synthesizers, it is disabled by default, but can be enabled using a
&apos;&apos; command line switch.
&apos;&apos;
&apos;&apos; ### OSX
&apos;&apos;
&apos;&apos; OSX uses a [custom markup][SMIL1] for speech synthesis
&apos;&apos; instead of SMIL.  The markup can incorporate changes in pitch, speed
&apos;&apos; and volume, but does not specify language.  for US English users,
&apos;&apos; the markup includes a context driven means of specifying a particular
&apos;&apos; way to pronounce a word in an ambiguous context.
&apos;&apos;
&apos;&apos; OSX computers require a short gap at the end of short synthesized speech 
&apos;&apos; utterances when recording sound to a file.
&apos;&apos;
&apos;&apos; Very short words cause an osascript error when adding metadata via
&apos;&apos; iTunes on OSX.  As well, single words in synthesized speech are easier 
&apos;&apos; to understand if we add about half a second of silence to the end of
&apos;&apos; each utterance, especially if gapless playback is enabled.  
&apos;&apos; 
&apos;&apos; The [inline code][SMIL3] `[[slnc 400]]` causes the speech synthesizer
&apos;&apos; to include 400 milliseconds of silence. 
&apos;&apos;
&apos;&apos; [SMIL1]: https://developer.apple.com/library/mac/documentation/UserExperience/Conceptual/SpeechSynthesisProgrammingGuide/Introduction/Introduction.html
&apos;&apos; [SMIL2]: https://www.w3.org/TR/SMIL3/
&apos;&apos; [SMIL3]: https://developer.apple.com/library/mac/documentation/UserExperience/Conceptual/SpeechSynthesisProgrammingGuide/FineTuning/FineTuning.html#//apple_ref/doc/uid/TP40004365-CH5-SW10
&apos;&apos; 
		writeSpeech(&quot; &quot; &amp; sTextToSpeak, _
				msgs(), _
				errorCode, _
				False)
		if (fsGetOS()=&quot;OSX&quot; Or fsGetOS()=&quot;MAC&quot;) and Instr(Lcase(sProgram), &quot;bin/osascript&quot;) &gt; 0 then
			if instr(sCommand,&quot;&quot;&quot;(SAY_APPLESCRIPT_SLOWLY)&quot;&quot;&quot;)=1 then
				fswriteOSXSpeechScript(&quot;-r 110 &quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			elseif instr(sCommand,&quot;&quot;&quot;(SAY_APPLESCRIPT_QUICKLY)&quot;&quot;&quot;)=1 then
				fswriteOSXSpeechScript(&quot;-r 240 &quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			elseif instr(sCommand,&quot;&quot;&quot;(SAY_APPLESCRIPT_AIRPLAY)&quot;&quot;&quot;)=1 then
				fswriteOSXSpeechScript(&quot;-a AirPlay &quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			elseif instr(sCommand,&quot;&quot;&quot;(SAY_APPLESCRIPT_AIRPLAY_SLOWLY)&quot;&quot;&quot;)=1 then
				fswriteOSXSpeechScript(&quot;-a AirPlay -r 110 &quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			elseif instr(sCommand,&quot;&quot;&quot;(SAY_APPLESCRIPT_AIRPLAY_QUICKLY)&quot;&quot;&quot;)=1 then
				fswriteOSXSpeechScript(&quot;-a AirPlay -r 240 &quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			elseif  Instr(config(fiExternalCommand),&quot;(SAY_APPLESCRIPT_SYSTEM_VOICE)&quot;) then
				fswriteOSXSpeechScript(&quot;&quot;, _
						&quot;&quot;, sArtLook)
			else
				fswriteOSXSpeechScript(&quot;&quot;, _
						fsSelectionLanguageAndRegion(true), sArtURL)
			end if
		end if
		if instr(sCommand,&quot;&quot;&quot;(TTS_WSCRIPT_VBS)&quot;&quot;&quot;)=1 then
			&apos;only consider SAPI voices
			
			sCommand= fsReplaceText(sCommand,&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;,fsSelectionLanguageAndRegion(False))
		end if
		sCommand=replaceLocalTokensWithStr(sCommand)
		sCommand=replacePublicTokensWithStr(sCommand)
		sCommand=replaceWebTokensWithStr(sCommand,sTextToSpeak) &apos;for online content with media player
		fbCreateMissingMediaDirectory(sCommand)	
	else &apos;if config(fiHtmlOption) then
	&apos;Translate And read with web tools
		i_CaBcVancouverHolgateJamesReadtextextensionLastSpokenTrack = 0
		sProgram=&quot;com.sun.star.system.SystemShellExecute&quot;
		sCommand=config(fiHtmlComboURL)
		sCommand=replacePublicTokensWithStr(sCommand)
		sCommand=replaceWebTokensWithStr(sCommand,sTextToSpeak)
		&apos; HTML file
		if len(sCommand) &lt;&gt; 0 then
			if (Instr(sCommand,&quot;http://&quot;)&lt;&gt;1 And Instr(sCommand,&quot;https://&quot;)&lt;&gt;1 And Instr(sCommand,&quot;mailto:&quot;)&lt;&gt;1) then
				sCommand=&quot;http://&quot; &amp; sCommand
			end if
			dim oSvc As Object
			oSvc=createUnoService(sProgram)
			oSvc.execute(sCommand, &quot;&quot; ,0)
		else
			ErrorDisplay()
		end if
		oBar.end()
		Exit sub
	end if
	if fileexists(sProgram) then
		&apos; program path
		&apos; 0 - focus is On the hidden program window,
		&apos; program parameter strings,
		&apos; False - tasks do not wait until shell task ends
		bWait=False
		if fsGetOS() = &quot;UNIX&quot; then
			if right(sProgram, len(&quot;festival&quot;)) = &quot;festival&quot; then
				&apos; When festival is the external program, the routine pauses while
				&apos; the computer is speaking to avoid the possibility of playing 
				&apos; two voices at once.
				bWait = True	
			end if
		end if
		
	if sCommand &lt;&gt; &quot;&quot; then 
		errorCode=Shell(sProgram,0,sCommand,bWait)
		end if
		On Error Resume Next
		oBar.Value=80
		On Error Goto errorHandler
	else
		msgbox( fsLookUpTerm(&quot;s_could-not-locate-the-program&quot;) &amp; _
			&quot; &quot; &amp; _
			fsLookUpTerm(&quot;s_string-cannot-be-analyzed&quot;), 64 ,_
			fsLookUpTerm(&quot;s_read-text&quot;))
		if fileexists(fsFullPathOf(fsExtensionSettingsIni)) then
			kill fsFullPathOf(fsExtensionSettingsIni)
		end if
		if fileexists(fsFullPathOf(&quot;ReadClipBoard.lock&quot;)) then
			kill fsFullPathOf(&quot;ReadClipBoard.lock&quot;)
		end if
		resetSpeech
	end if
	On Error Resume Next	
	oBar.Value=90
	if len(sArtURL) &gt; 0 then
	    if (fsGetOS = &quot;WINDOWS&quot;) then
	    	&apos; The Windows `tts_wscript.vbs` script must deal with the
	    	&apos; custom image because removing it here may cause an error.
	    else
			if fileexists(sArtURL) then
				for n = 0 to 30
					Wait 500
					if not(fileexists(fsMyTempLock)) then
					    if fileexists(sArtURL) then
							Kill sArtURL
						end if
						exit for
					end if
				Next
			end if
		end if
	end if
	oBar.Value=100
	oBar.end()
	Exit sub
	ErrorHandler:
		msgbox(fsLookUpTerm( &quot;s_string-cannot-be-analyzed&quot;), 48, _
			fsLookUpTerm( &quot;s_read-text&quot;))
		if fileexists(fsFullPathOf(fsExtensionSettingsIni)) then
			kill fsFullPathOf(fsExtensionSettingsIni)	
		end if
		if fileexists(fsFullPathOf(&quot;ReadClipBoard.lock&quot;)) then
			kill fileexists(fsFullPathOf(&quot;ReadClipBoard.lock&quot;))
		end if
		resetSpeech
end sub


function fbCreateMissingMediaDirectory(_
		byval sCommandLine)
	&apos; To put a data file in a directory that does not exist.
&apos;&apos;	
&apos;&apos; Media Directories
&apos;&apos; -----------------
&apos;&apos;
&apos;&apos; Read Text Extension can create media files for playback on portable devices
&apos;&apos; or for embedding into other content you create.
&apos;&apos; 
&apos;&apos; - if you are using iTunes, the iTunes program creates a media file in the iTunes
&apos;&apos;   music directory.  The extension makes a copy in your home directory in a folder
&apos;&apos;   named with the iso code of your language - *en* for English, *de* for German, 
&apos;&apos;   *es* for Spanish etc. 
&apos;&apos; - if you are using a command-line program to convert your media files, then the
&apos;&apos;   media file is saved to  home directory in a folder named with the iso code of 
&apos;&apos;   your language.
&apos;&apos;
&apos;&apos; Custom Directories
&apos;&apos; ------------------
&apos;&apos;
&apos;&apos; if you don&apos;t like the defaults, set the name of the directory yourself.  The extension
&apos;&apos; will attempt to create the directory if it is a valid path.
&apos;&apos;
	fbCreateMissingMediaDirectory = False
	dim s1, s2 as string
	dim n, o as integer
	dim a1, a2, a3

	on error goto fbCreateMissingMediaDirectoryErr

	Select Case fsGetOS()
	Case &quot;WINDOWS&quot;
		s1 = &quot;&quot;&quot;&quot;
	Case Else
		sCommandLine = fsReplaceText(sCommandLine, &quot;&quot;&quot;&quot;, &quot;&quot;)
		sCommandLine = fsReplaceText(sCommandLine, &quot;&apos;&quot;, &quot;&quot;)
		s1 = &quot; &quot;
	End Select
	
	a1 = split(sCommandLine, s1)
	a2 = array(_
			&quot;.3gp&quot;, _
			&quot;.aac&quot;, _
			&quot;.aif&quot;, _
			&quot;.aiff&quot;, _
			&quot;.au&quot;, _
			&quot;.avi&quot;, _
			&quot;.csv&quot;, _
			&quot;.doc&quot;, _
			&quot;.docx&quot;, _
			&quot;.epub&quot;, _
			&quot;.flac&quot;, _
			&quot;.gif&quot;, _
			&quot;.jpeg&quot;, _
			&quot;.jpg&quot;, _
			&quot;.m4a&quot;, _
			&quot;.m4v&quot;, _
			&quot;.mov&quot;, _
			&quot;.mkv&quot;, _
			&quot;.mp2&quot;, _
			&quot;.mp3&quot;, _
			&quot;.mp4&quot;, _
			&quot;.mpeg&quot;, _
			&quot;.oga&quot;, _
			&quot;.ogg&quot;, _
			&quot;.ogm&quot;, _
			&quot;.ogv&quot;, _
			&quot;.pdf&quot;, _
			&quot;.png&quot;, _
			&quot;.ppt&quot;, _
			&quot;.pptx&quot;, _
			&quot;.tif&quot;, _
			&quot;.wav&quot;, _
			&quot;.webm&quot;, _
			&quot;.wma&quot;, _
			&quot;.wmv&quot;, _
			&quot;.xls&quot;, _
			&quot;.xlsx&quot;, _
			&quot;.zip&quot;)

	for n = lbound(a1) to ubound(a1)
		for o = lbound(a2) to ubound(a2)
			if instr(a1(n), a2(o)) = 1 + len(a1(n)) - len(a2(o)) then
				&apos; Creating a text file in a location that does not exist
				&apos; creates a directory. We can then put a media file in it.
				&apos; First, we remove the Windows switch that ends with &quot;file:&quot;
				a3 = split(a1(n),&quot;file:&quot;)
				s2 = ConvertToUrl(a3(ubound(a3)))
				if fileexists(s2) then
					fbCreateMissingMediaDirectory = True
					exit function
				else
					&apos;Assign blame using the app signature if the file isn&apos;t removed
					CreateFile(s2 &amp; &quot;temp.lock&quot;, fsAppSignature(), &quot;UTF-8&quot;)
					if fileexists(s2 &amp; &quot;temp.lock&quot;) then
						fbCreateMissingMediaDirectory = True
						kill s2 &amp; &quot;temp.lock&quot;
						exit function
					end if
				end if
			end if
		next
	next
	exit function
	fbCreateMissingMediaDirectoryErr:
	fbCreateMissingMediaDirectory = False
end function


function fsReplaceText(_
		sA as string,_
		sFind as string,_
		sReplace as string) as string
	if not globalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) then
		globalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	end if
	fsReplaceText = ReplaceString(sA, sReplace, sFind)
end function


function replaceLocalTokensWithStr(_
		sA as string) as string
	&apos; This function takes a String with tokens And replaces each
	&apos; token with a useful String
&apos;&apos;
&apos;&apos; Tokens
&apos;&apos; ------
&apos;&apos;
&apos;&apos; The extension replaces strings in the main dialogue with path
&apos;&apos; names or command arguments at run time.  You can preview the 
&apos;&apos; actual command line using the *About...* dialogue.
&apos;&apos;
&apos;&apos; for more information about tokens, look in the office help for 
&apos;&apos; *Read Text Extension - Setting Up Read Text Extension - Command 
&apos;&apos; and Script Tokens*. 
&apos;&apos;
		dim sFind as string
		dim sReplace as string
		dim sB as string

		sB=fsGetTextSelection(False, False)
		&apos;Temporary file name
		sFind=&quot;(TMP)&quot;
		sReplace=ConvertFromURL(fsFullPathOf(fsTemporaryTextDoc))
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(TTS_WSCRIPT_VBS)&quot;
		sReplace=ConvertFromURL(fsTTSScriptVBS)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SPD_READ_TEXT_PY)&quot;
		sReplace=ConvertFromURL(fsPythonSpdDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(PICO_READ_TEXT_PY)&quot;
		sReplace=ConvertFromURL(fsPythonPicoDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(ESPEAK_READ_TEXT_PY)&quot;
		sReplace=ConvertFromURL(fsPythonEspeakDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(FESTIVAL_READ_TEXT_PY)&quot;
		sReplace=ConvertFromURL(fsPythonFestivalDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(PYTTSX_READ_TEXT_PY)&quot;
		sReplace=ConvertFromURL(fsPythonPyttsxDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(OS_PY)&quot;
		sReplace=ConvertFromURL(fsPythonOSDoc)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_SLOWLY)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_QUICKLY)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_AIRPLAY)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_AIRPLAY_SLOWLY)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_AIRPLAY_QUICKLY)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SAY_APPLESCRIPT_SYSTEM_VOICE)&quot;
		sReplace=ConvertFromURL(fsTemporaryTtsAppleScript)
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(CREATE_QR_LABEL_PY)&quot;
		sReplace=ConvertFromURL(fsPythonCreateQR)
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos;Work directory also known As My Documents or home
		sFind=&quot;(HOME)&quot;
		sReplace=fsGetHomeDir()
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos;Current time reformatted so that you can use it in a filename
		sFind=&quot;(now)&quot;
		sReplace=fsFileTime()
		sA=fsReplaceText(sA,sFind,sReplace)

		sFind=&quot;(SOUND_GALLERY)&quot;
		sReplace=soundsDirectory()
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos; Legacy seting
		sFind=&quot;(POSTER_PNG)&quot;
		sReplace=&quot;(POSTER_IMG)&quot;
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos; Legacy seting
		sFind=&quot;(POSTER2_PNG)&quot;
		sReplace=&quot;(POSTER2_IMG)&quot;
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos; Sample image for movie clip with embedded speech
		sFind=&quot;(POSTER_IMG)&quot;
		sReplace=ConvertFromURL(fsPosterImg)
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos; Sample image for movie clip with embedded speech
		sFind=&quot;(POSTER2_IMG)&quot;
		sReplace=ConvertFromURL(fsPoster2Png)
		sA=fsReplaceText(sA,sFind,sReplace)

		&apos;Choose an image for your movie clip with embedded speech
		if instr(sA,&quot;(MY_IMAGE)&quot;)&gt;0 then
			sFind=&quot;(MY_IMAGE)&quot;
			sReplace=fsGetPicturePath()
			sA=fsReplaceText(sA,sFind,sReplace)
		end if
		&apos;New line
		sFind=&quot;(/NL)&quot;
		sReplace=chr(13)
		sA=fsReplaceText(sA,sFind,sReplace)
		&apos;
		replaceLocalTokensWithStr=sA
end function


function ReplaceWebTokensWithStr(_
		sA as string, _
		sB as string) as string
    dim sFind as string
    dim sReplace as string

    sFind=&quot;(OOO_WEBTEXTBIG)&quot;
    sReplace=fsEscapeStr(left(trim(sB),9999))
    &apos; A lot of text. Use if you have a dedicated online speech server.
    sA=fsReplaceText(sA,sFind,sReplace)

    sFind=&quot;(OOO_WEBTEXT)&quot;
    sReplace=fsEscapeStr(left(trim(sB),999))
    &apos; Use with free online text-To-speech utilities
    sA=fsReplaceText(sA,sFind,sReplace)

    sFind=&quot;(OOO_WEBTEXT250)&quot;
    sReplace=fsEscapeStr(left(trim(sB),249))
    &apos; Use with online QRCode utilities
    sA=fsReplaceText(sA,sFind,sReplace)

    sFind=&quot;(OOO_WEBTEXTSMALL)&quot;
    &apos; Use with Google Translate to ensure that the text-To-speech is enabled
    sReplace=fsEscapeStr(left(trim(sB),99))
    sA=fsReplaceText(sA,sFind,sReplace)
    ReplaceWebTokensWithStr=sA
    
    sFind = &quot;(OOO_WEBTEXTDEFINITION)&quot;
    &apos; Use with an on-line dictionary.
    &apos;
    sReplace= lcase(fsEscapeStr(fsQuickTitle(1, 99, fsTrimSpecial(sB,  &quot; `_-*#&gt;_&quot;))
   &apos; sReplace = fsTrimSpecial(sReplace, &quot; `_-*#&gt;_&quot;)
    sA=fsReplaceText(sA,sFind,sReplace)
    ReplaceWebTokensWithStr=sA
end function


function replacePublicTokensWithStr(_
		sA as string) as string
	dim sFind as string
	dim sReplace as string

	sFind=&quot;(AUTHOR)&quot;
	sReplace=fsReplaceText(fsThisDocAuthor,&quot; &quot;,chr$(160)) &apos;&amp;nbsp;
	sA=fsReplaceText(sA,sFind,sReplace)

	sFind=&quot;(TITLE)&quot;
	sReplace=fsReplaceText(fsThisDocTitle,&quot; &quot;,chr$(160)) &apos;&amp;nbsp;
	if sReplace=&quot;&quot; then
		sReplace=fsDateMyRegion() &amp; &quot;_&quot; &amp; fsTimeMyRegion()
	end if
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Current date
	sFind=&quot;(DATE)&quot;
	sReplace=fsReplaceText(fsDateMyRegion,&quot; &quot;,chr$(160)) &apos;&amp;nbsp;
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Current time As spoken in region
	sFind=&quot;(TIME)&quot;
	sReplace=fsTimeMyRegion()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Current day of week As spoken in region
	sFind=&quot;(WEEKDAY)&quot;
	sReplace=fsWeekDayMyRegion()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Language - en for English fr for French etc. ISO_639-1
	sFind=&quot;(LANGUAGE_CODE)&quot;
	sReplace=fsGetLanguage()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Country - US for United States FR for France etc.
	sFind=&quot;(COUNTRY_CODE)&quot;
	sReplace=fsGetCountry()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos;Language And Region en-US or fr-FR
	sFind=&quot;(LANGUAGE_COUNTRY_CODE)&quot;
	sReplace=fsGetLanguage()&amp; &quot;-&quot; &amp; fsGetCountry()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos; Selection Country - US for United States FR for France etc.
	sFind=&quot;(SELECTION_COUNTRY_CODE)&quot;
	sReplace=fsSelectionCountry()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos; Selection Language - en for English fr for French etc. ISO_639-1
	sFind=&quot;(SELECTION_LANGUAGE_CODE)&quot;
	sReplace=fsSelectionLanguage()
	sA=fsReplaceText(sA,sFind,sReplace)

	&apos; Selection Language And Region en-US or fr-FR
	sFind=&quot;(SELECTION_LANGUAGE_COUNTRY_CODE)&quot;
	sReplace=fsSelectionLanguageAndRegion(true)
	sA=fsReplaceText(sA,sFind,sReplace)
	replacePublicTokensWithStr=sA
end function


function fsFileTime() as string
	&apos;Revised 2011-02-20_17-18 so all versions and locales return the same value
	fsFileTime=year(now) &amp; &quot;-&quot; &amp; _
			month(now) &amp; &quot;-&quot; &amp; _
			day(now) &amp; &quot;_&quot; &amp; _
			fsReplaceText(Time(now),&quot;:&quot;,&quot;-&quot;)
end function


function fsPathSettings(_
		sPathType as string,_
		Optional bshowall as boolean,_
		Optional ListIndex as integer) as string
	&apos; Gets a special configured PathSetting
	dim oSettings,oPathSettings As Object
	dim sPath as string
	dim PathList() as string
	dim MaxIndex as integer
	dim oPS As Object

	oPS=createUnoService(&quot;com.sun.star.util.PathSettings&quot;)

	if not IsMissing(bShowall) then
		if bShowAll then
			ShowPropertyValues(oPS)
			exit function
		end if
	end if
 	sPath=oPS.getPropertyValue(sPathType)
	if not IsMissing(ListIndex) then
		&apos; Share And User-Directory
		if Instr(1,sPath,&quot;;&quot;) &lt;&gt; 0 then
			PathList=ArrayoutofString(sPath,&quot;;&quot;,MaxIndex)
			if ListIndex &lt;=MaxIndex then
				sPath=PathList(ListIndex)
			else
				msgbox( fsLookUpTerm( &quot;s_string-cannot-be-analyzed&quot;), 48, _
					fsLookUpTerm( &quot;s_read-text&quot;, fsGetLanguage()))
			end if
		end if
	end if
	if Instr(1,sPath,&quot;;&quot;)=0 then
		fsPathSettings=ConvertToUrl(sPath)
	else
		fsPathSettings=sPath
	end if
end function


function fiStringToInteger(_
		value as string) as integer
	dim b as integer: b=0
	dim v as string: v=Trim(value)

	On Error Goto CONVERSIONERROR
	b=value
	fiStringToInteger=b
	exit function
	CONVERSIONERROR:
	fiStringToInteger=0
end function


function fsSelectionLanguageAndRegion(_
		optional bIgnoreInstalledVoices) as string
	dim sA, sB as string
&apos;&apos;
&apos;&apos; # Language and Region
&apos;&apos; 
&apos;&apos; The extension can determine the language of the selected text and pass the value
&apos;&apos; to a speech synthesizer.  The languages on your computer vary depending on the
&apos;&apos; platform, release version and locale of the operating system as well as software
&apos;&apos; you might have installed.  
&apos;&apos;
&apos;&apos; Most computers include at least a simple English voice.  if you are not certain
&apos;&apos; whether speech is installed, try a using a simple English voice with plain ASCII
&apos;&apos; text.
&apos;&apos;
	if s_CaBcVancouverHolgateJamesReadtextextensionWorkingCountryLanguage = &quot;&quot; then
		if ismissing(bIgnoreInstalledVoices) then
			bIgnoreInstalledVoices = True
		end if
		sA = fsSelectionLanguage &amp; &quot;-&quot; &amp; fsSelectionCountry
		sB = fsSelectionLanguage
		if bIgnoreInstalledVoices then
			fsSelectionLanguageAndRegion=sA
		else
			select case fsGetOS()
			case &quot;WINDOWS&quot;
				if fbWindowsHasVoiceInThisLanguage(sA) then
				&apos; use language and locale
					fsSelectionLanguageAndRegion=sA
				elseif fbWindowsHasVoiceInThisLanguage(sB) then
				&apos; use language only
					fsSelectionLanguageAndRegion=sB
				else
				&apos; try using the language only...
					fsSelectionLanguageAndRegion=sB
				end if
			case else
				fsSelectionLanguageAndRegion=sA
			end select
		end if
	else
		fsSelectionLanguageAndRegion = s_CaBcVancouverHolgateJamesReadtextextensionWorkingCountryLanguage
	end if
end function


function fbWindowsHasVoiceInThisLanguage(_
		Optional byval sLang)
	&apos; Since Windows Vista, we can use Speech XML
	&apos; https://www.w3.org/TR/speech-synthesis
	&apos; Determine which SAPI voices are installed, then
	&apos; if we have a modern voice from Windows Vista, Windows 7 or above
	&apos; then return true, else if no voices found, then return False
	dim Sapi As Object
	dim n,n1 as integer
	dim s1, s2 as string

	if ismissing(sLang) then
		sLang = fsGetSetting(&quot;language&quot;)
	end if
	sLang = lcase(sLang)
	fbWindowsHasVoiceInThisLanguage = False
	&apos;on Error goto VoiceTestError
	Set Sapi=Createobject(&quot;Sapi.SpVoice&quot;)
	s1 =lcase(isoToEnglish(sLang))
	&apos;let&apos;s see if we recognize the language s1
	for n = 0 to Sapi.GetVoices.Count - 1
		s2=lcase(Sapi.GetVoices.Item(n).GetDescription)
		if instr(s2,s1) &lt;&gt; 0 then
			fbWindowsHasVoiceInThisLanguage = True
			exit for
		end if
	next
	Set Sapi = nothing
	exit function
	VoiceTestError:
	fbWindowsHasVoiceInThisLanguage = False
	on Error resume next
end function


function isoToEnglish(_
		byval s1)
	&apos; Returns name of language, if known
	dim S2 as string

	if right(s1,1) = &quot;-&quot; then
		s1 = left(s1,len(s1-1))
	end if
	select case lcase(s1)
	case &quot;en-us&quot;
		S2=&quot;English (United States)&quot;
	case &quot;en-gb&quot;
		S2= &quot;English (Great Britain)&quot;
	case &quot;en-vg&quot;
		S2= &quot;English (British Virgin Islands)&quot;
	case &quot;en-io&quot;
		S2= &quot;English (Great Britain)&quot;
	case &quot;en-gg&quot;
		S2=&quot;English (Guernsey)&quot;
	case &quot;en-au&quot;
		S2=&quot;English (Australia)&quot;
	case &quot;en-bz&quot;
		S2=&quot;English (Belize)&quot;
	case &quot;en-ca&quot;
		S2=&quot;English (Canada)&quot;
	case &quot;en-bs&quot;
		S2=&quot;English (Bahamas)&quot;
	case &quot;en-hk&quot;
		S2=&quot;English (Hong Kong)&quot;
	case &quot;en-in&quot;
		S2=&quot;English (India)&quot;
	case &quot;en-id&quot;
		S2=&quot;English (Indonesia)&quot;
	case &quot;en-ie&quot;
		S2=&quot;English (Ireland)&quot;
	case &quot;en-jm&quot;
		S2=&quot;English (Jamaica)&quot;
	case &quot;en-my&quot;
		S2=&quot;English (Malaysia)&quot;
	case &quot;en-nz&quot;
		S2=&quot;English (New Zealand)&quot;
	case &quot;en-ph&quot;
		S2=&quot;English (Philippines)&quot;
	case &quot;en-sg&quot;
		S2=&quot;English (Singapore)&quot;
	case &quot;en-za&quot;
		S2=&quot;English (South Africa)&quot;
	case &quot;en-tt&quot;
		S2=&quot;English (Trinidad &quot; &apos; sic
	case &quot;en-zw&quot;
		S2=&quot;English (Zimbabwe)&quot;
	case &quot;en&quot;
		S2=&quot;English&quot;
	case &quot;fr-be&quot;
		S2=&quot;French (Belgium)&quot;
	case &quot;fr-ca&quot;
		S2=&quot;French (Canada)&quot;
	case &quot;fr-cg&quot;
		S2=&quot;French (Congo)&quot;
	case &quot;fr-ch&quot;
		S2=&quot;French (Switzerland)&quot;
	case &quot;fr-ci&quot;
		S2=&quot;French (Ivory Coast)&quot;
	case &quot;fr-cm&quot;
		S2=&quot;French (Cameroon)&quot;
	case &quot;fr-fr&quot;
		S2=&quot;French (France)&quot;
	case &quot;fr-ht&quot;
		S2=&quot;French (Haiti)&quot;
	case &quot;fr-lu&quot;
		S2=&quot;French (Luxembourg)&quot;
	case &quot;fr-ma&quot;
		S2=&quot;French (Morocco)&quot;
	case &quot;fr-mc&quot;
		S2=&quot;French (Monaco)&quot;
	case &quot;fr-ml&quot;
		S2=&quot;French (Mali)&quot;
	case &quot;fr-re&quot;
		S2=&quot;French (Reunion)&quot;
	case &quot;fr-sn&quot;
		S2=&quot;French (Senegal)&quot;
	case &quot;fr&quot;
		S2=&quot;French&quot;
	case &quot;it&quot;,&quot;it-it&quot;
		S2=&quot;Italian&quot;
	case &quot;de-at&quot;
		S2=&quot;German (Austria)&quot;
	case &quot;de-ch&quot;
		S2=&quot;German (Switzerland)&quot;
	case &quot;de-de&quot;
		S2=&quot;German (Germany)&quot;
	case &quot;de-li&quot;
		S2=&quot;German (Lithuania)&quot;
	case &quot;de-lu&quot;
		S2=&quot;German (Luxembourg)&quot;
	case &quot;de&quot;
		S2=&quot;German&quot;
	case &quot;es-es&quot;
		S2=&quot;Spanish (Spain)&quot;
	case &quot;es-ar&quot;
		S2=&quot;Spanish (Argentina)&quot;
	case &quot;es-bo&quot;
		S2=&quot;Spanish (Bolivia)&quot;
	case &quot;es-cl&quot;
		S2=&quot;Spanish (Chile)&quot;
	case &quot;es-co&quot;
		S2=&quot;Spanish (Colombia)&quot;
	case &quot;es-cr&quot;
		S2=&quot;Spanish (Costa Rica)&quot;
	case &quot;es-do&quot;
		S2=&quot;Spanish (Dominican Republic)&quot;
	case &quot;es-ec&quot;
		S2=&quot;Spanish (Ecuador)&quot;
	case &quot;es-sv&quot;
		S2=&quot;Spanish (Svalbard) &quot;
	case &quot;es-gt&quot;
		S2=&quot;Spanish (Guatemala)&quot;
	case &quot;es-hn&quot;
		S2=&quot;Spanish (Honduras)&quot;
	case &quot;es-mx&quot;
		S2=&quot;Spanish (Mexico)&quot;
	case &quot;es-ni&quot;
		S2=&quot;Spanish (Nicaragua)&quot;
	case &quot;es-pa&quot;
		S2=&quot;Spanish (Panama)&quot;
	case &quot;es-py&quot;
		S2=&quot;Spanish (Paraguay)&quot;
	case &quot;es-pe&quot;
		S2=&quot;Spanish (Peru)&quot;
	case &quot;es-pr&quot;
		S2=&quot;Spanish (Puerto Rico)&quot;
	case &quot;es-us&quot;
		S2=&quot;Spanish (United States)&quot;
	case &quot;es-uy&quot;
		S2=&quot;Spanish (Uraguay)&quot;
	case &quot;es-ve&quot;
		S2=&quot;Spanish (Venezuela)&quot;
	case &quot;es&quot;
		S2=&quot;Spanish&quot;
	case &quot;ru&quot;,&quot;ru-ru&quot;
		S2=&quot;Russian&quot;
	case &quot;hi&quot;,&quot;hi-in&quot;
		S2=&quot;Hindi&quot;
	case &quot;af&quot;,&quot;af-za&quot;
		S2=&quot;Afrikaans&quot;
	case &quot;ak&quot;,&quot;ak-gh&quot;
		S2=&quot;Akan&quot;
	case &quot;an&quot;,&quot;an-es&quot;
		S2=&quot;Argonese&quot;
	case &quot;az&quot;,&quot;az-az&quot;
		S2=&quot;Azerbaijani&quot;
	case &quot;ar-sa&quot;
		S2=&quot;Arabic (Saudi Arabia)&quot;
	case &quot;ar-dz&quot;
		S2=&quot;Arabic (Algeria)&quot;
	case &quot;ar-bh&quot;
		S2=&quot;Arabic (Bhutan)&quot;
	case &quot;ar-eg&quot;
		S2=&quot;Arabic (Egypt)&quot;
	case &quot;ar-iq&quot;
		S2=&quot;Arabic (Iraq)&quot;
	case &quot;ar-jo&quot;
		S2=&quot;Arabic (Jordan)&quot;
	case &quot;ar-kw&quot;
		S2=&quot;Arabic (Kuwait)&quot;
	case &quot;ar-lb&quot;
		S2=&quot;Arabic (Lebanon)&quot;
	case &quot;ar-ly&quot;
		S2=&quot;Arabic (Libya)&quot;
	case &quot;ar-om&quot;
		S2=&quot;Arabic (Oman)&quot;
	case &quot;ar-qa&quot;
		S2=&quot;Arabic (Qatar)&quot;
	case &quot;ar-sy&quot;
		S2=&quot;Arabic (Syria)&quot;
	case &quot;ar-tn&quot;
		S2=&quot;Arabic (Tunisia)&quot;
	case &quot;ar-ae&quot;
		S2=&quot;Arabic (United Arab Emirates)&quot;
	case &quot;ar-ye&quot;
		S2=&quot;Arabic (Yemen)&quot;
	case &quot;ar&quot;
		S2=&quot;Arabic&quot;
	case &quot;be&quot;,&quot;be-by&quot;
		S2=&quot;Belarusian&quot;
	case &quot;bm&quot;,&quot;bm-ml&quot;
		S2=&quot;Bambara&quot;
	case &quot;beq&quot;,&quot;beq-cg&quot;
		S2=&quot;Beembe&quot;
	case &quot;bk&quot;,&quot;bkw-cg&quot;
		S2=&quot;Bekwel&quot;
	case &quot;bn&quot;,&quot;bn-bd&quot;
		S2=&quot;Bengali&quot;
	case &quot;bs&quot;,&quot;bs-bn&quot;
		S2=&quot;Bosnian&quot;
	case &quot;buc&quot;,&quot;buc-yt&quot;
		S2=&quot;Bushi&quot;
	case &quot;eu&quot;,&quot;eu-fr&quot;,&quot;eu-es&quot;
		S2=&quot;Basque&quot;
	case &quot;bg&quot;,&quot;bg-bg&quot;
		S2=&quot;Bulgarian&quot;
	case &quot;ca&quot;,&quot;ca-es&quot;
		S2=&quot;Catalan&quot;
	case &quot;ceb&quot;,&quot;ceb-ph&quot;
		S2=&quot;Cebuano&quot;
	case &quot;cop&quot;,&quot;cop-eg&quot;
		S2=&quot;Coptic&quot;
	case &quot;csb&quot;,&quot;csb-pl&quot;
		S2=&quot;Kashubian&quot;
	case &quot;cv&quot;,&quot;cv-ru&quot;
		S2=&quot;Chuvash&quot;
	case &quot;cs&quot;,&quot;cs-cz&quot;
		S2=&quot;Czech&quot;
	case &quot;cy&quot;,&quot;cy-gb&quot;
		S2=&quot;Welsh&quot;
	case &quot;da&quot;,&quot;da-dk&quot;
		S2=&quot;Danish&quot;
	case &quot;dsb&quot;,&quot;dsb-de&quot;
		S2=&quot;Sorbian, Lower&quot;
	case &quot;ebo&quot;,&quot;ebo-cg&quot;
		S2=&quot;Teke-Eboo&quot;
	case &quot;ee&quot;,&quot;ee-gh&quot;
		S2=chr(201) &amp; &quot;w&quot; &amp; chr(233)
	case &quot;eo&quot;,&quot;eo-&quot;
		S2=&quot;Esperanto&quot;
	case &quot;et&quot;,&quot;et-ee&quot;
		S2=&quot;Estonian&quot;
	case &quot;fa&quot;,&quot;fa-ir&quot;
		S2=&quot;Farsi&quot;
	case &quot;fi&quot;,&quot;fi-fi&quot;
		S2=&quot;Finnish&quot;
	case &quot;fj&quot;,&quot;fj-fj&quot;
		S2=&quot;Fijian&quot;
	case &quot;fu&quot;,&quot;fu-it&quot;
		S2=&quot;Friulian&quot;
	case &quot;fy&quot;,&quot;fy-nl&quot;
		S2=&quot;Frisian&quot;
	case &quot;gd&quot;,&quot;gd-gb&quot;
		S2=&quot;Gaelic&quot;
	case &quot;gl&quot;,&quot;gl-es&quot;
		S2=&quot;Galician&quot;
	case &quot;gu&quot;,&quot;gu-in&quot;
		S2=&quot;Gujarati&quot;
	case &quot;ga&quot;,&quot;ga-ie&quot;
		S2=&quot;Irish&quot;
	case &quot;gd&quot;,&quot;gd-gb&quot;
		S2=&quot;Gaelic&quot;
	case &quot;gsc&quot;,&quot;gsc-fr&quot;
		S2=&quot;Gascon&quot;
	case &quot;gug&quot;,&quot;gug-py&quot;
		S2=&quot;Guarani&quot;
	case &quot;haw&quot;,&quot;haw-us&quot;
		S2=&quot;Hawaiian&quot;
	case &quot;hl&quot;,&quot;hl-gr&quot;
		S2=&quot;Greek&quot;
	case &quot;he&quot;,&quot;he-il&quot;
		S2=&quot;Hebrew&quot;
	case &quot;hr&quot;,&quot;hr-hr&quot;
		S2=&quot;Croatian&quot;
	case &quot;hsb&quot;,&quot;hsb-de&quot;
		S2=&quot;Sorbian, Upper&quot;
	case &quot;ht&quot;,&quot;ht-ht&quot;
		S2=&quot;Haitian&quot;
	case &quot;hu&quot;,&quot;hu-hu&quot;
		S2=&quot;Hungarian&quot;
	case &quot;ha&quot;,&quot;ha-gh&quot;,&quot;ha-ng&quot;
		S2=&quot;Hausa&quot;
	case &quot;hil&quot;,&quot;hil-ph&quot;
		S2=&quot;Hiligaynon&quot;
	case &quot;ia&quot;,&quot;ia-&quot;
		S2=&quot;Interlingua&quot;
	case &quot;id&quot;,&quot;id-id&quot;
		S2=&quot;Indonesian&quot;
	case &quot;is&quot;,&quot;is-is&quot;
		S2=&quot;Icelandic&quot;
	case &quot;jbo&quot;,&quot;jbo-&quot;
		S2=&quot;Lojban&quot;
	case &quot;jp&quot;,&quot;jp-jp&quot; , &quot;ja&quot;, &quot;ja-jp&quot;
		S2=&quot;Japanese&quot;
	case &quot;kab&quot;,&quot;kab-dz&quot;
		S2=&quot;Kabyle&quot;
	case &quot;ki&quot;,&quot;ki-ke&quot;
		S2=&quot;Gikuyu&quot;
	case &quot;kk&quot;,&quot;kk-kz&quot;
		S2=&quot;Kazak&quot;
	case &quot;kl&quot;,&quot;kl-gl&quot;
		S2=&quot;Kalaallisut&quot;
	case &quot;ksf&quot;,&quot;ksf-cm&quot;
		S2=&quot;Bafia&quot;
	case &quot;ko&quot;,&quot;ko-kp&quot;,&quot;ko-kr&quot;
		S2=&quot;Korean&quot;
	case &quot;ka&quot;,&quot;ka-ge&quot;
		S2=&quot;Georgian&quot;
	case &quot;km&quot;,&quot;km-kh&quot;
		S2=&quot;Khmer&quot;
	case &quot;kn&quot;,&quot;kn-in&quot;
		S2=&quot;Kannada&quot;
	case &quot;kok&quot;,&quot;kok-in&quot;
		S2=&quot;Konkani&quot;
	case &quot;ku&quot;,&quot;ku-sy&quot;,&quot;ku-tr&quot;
		S2=&quot;Kurdish&quot;
	case &quot;ky&quot;,&quot;ky-kg&quot;
		S2=&quot;Kirghiz&quot;
	case &quot;la&quot;,&quot;la-va&quot;
		S2=&quot;Latin&quot;
	case &quot;lb&quot;,&quot;lb-lu&quot;
		S2=&quot;Luxembourgish&quot;
	case &quot;ldi&quot;,&quot;ldi-cg&quot;
		S2=&quot;Lari&quot;
	case &quot;lg&quot;,&quot;lg-ug&quot;
		S2=&quot;Ganda&quot;
	case &quot;ln&quot;,&quot;ln-cd&quot;
		S2=&quot;Lingala&quot;
	case &quot;lo&quot;,&quot;lo-la&quot;
		S2=&quot;Lao&quot;
	case &quot;lt&quot;,&quot;lt-lt&quot;
		S2=&quot;Lithuanian&quot;
	case &quot;ltg&quot;,&quot;ltg-lv&quot;
		S2=&quot;Latgalian&quot;
	case &quot;lv&quot;,&quot;lv-lv&quot;
		S2=&quot;Latvian&quot;
	case &quot;mdw&quot;,&quot;mdw-cg&quot;
		S2=&quot;Mbochi&quot;
	case &quot;mi&quot;,&quot;mi-nz&quot;
		S2=&quot;Maori (New Zealand)&quot;
	case &quot;ms&quot;,&quot;ms-sg&quot;,&quot;ms-my&quot;,&quot;ms-id&quot;,&quot;ms-bn&quot;
		S2=&quot;Malay&quot;
	case &quot;mk&quot;,&quot;mk-mk&quot;
		S2=&quot;Macedonian&quot;
	case &quot;mkw&quot;,&quot;mkw-cg&quot;
		S2=&quot;Kituba&quot;
	case &quot;mn&quot;,&quot;mn-mn&quot;
		S2=&quot;Mongolian&quot;
	case &quot;mo-mn&quot;,&quot;mo&quot;
		S2=&quot;Moldavian&quot;
	case &quot;mos&quot;,&quot;mos-bf&quot;
		S2=&quot;Moore&quot;
	case &quot;mr&quot;,&quot;mr-in&quot;
		S2=&quot;Marathi&quot;
	case &quot;nds&quot;,&quot;nds-de&quot;
		S2=&quot;Low German&quot;
	case &quot;nl&quot;,&quot;nl-nl&quot;,&quot;nl-be&quot;
		S2=&quot;Dutch&quot;
	case &quot;nn&quot;,&quot;nn-no&quot;
		S2=&quot;Norwegian Norsk&quot;
	case &quot;nb&quot;,&quot;nb-no&quot;
		S2=&quot;Norwegian Bokmal&quot;
	case &quot;no&quot;,&quot;no-no&quot;
		S2=&quot;Norwegian&quot;
	case &quot;nr&quot;,&quot;nr-za&quot;
		S2=&quot;Ndebele, South&quot;
	case &quot;nso&quot;,&quot;nso-za&quot;
		S2=&quot;Northern Sotho&quot;
	case &quot;ny&quot;,&quot;ny-mw&quot;
		S2=&quot;Nyanja&quot;
	case &quot;oc&quot;,&quot;oc-fr&quot;
		S2=&quot;Occitan&quot;
	case &quot;om&quot;,&quot;om-et&quot;
		S2=&quot;Oromo&quot;
	case &quot;pap&quot;,&quot;pap-aw&quot;,&quot;pap-an&quot;
		S2=&quot;Papiamento&quot;
	case &quot;pl&quot;,&quot;pl-pl&quot;
		S2=&quot;Polish&quot;
	case &quot;pli&quot;,&quot;pli-&quot;
		S2=&quot;Pali&quot;
	case &quot;plt&quot;,&quot;plt-mg&quot;
		S2=&quot;Malagasy&quot;
	case &quot;pt-br&quot;
		S2=&quot;Portuguese (Brazil)&quot;
	case &quot;pt-pt&quot;
		S2=&quot;Portuguese (Portugal)&quot;
	case &quot;pt&quot;
		S2=&quot;Portuguese&quot;
	case &quot;qtz&quot;,&quot;qtz-&quot;
		S2=&quot;KeyID&quot;
	case &quot;qul&quot;,&quot;quh&quot;,&quot;qu&quot;,&quot;qul-bo&quot;,&quot;qu-ec&quot;,&quot;quh-bo&quot;
		S2=&quot;Quechua&quot;
	case &quot;rm&quot;,&quot;rm-ch&quot;
		S2=&quot;Rhaeto-Romance&quot;
	case &quot;ro&quot;,&quot;ro-ro&quot;
		S2=&quot;Romanian&quot;
	case &quot;ru&quot;,&quot;ru-ru&quot;
		S2=&quot;Russian&quot;
	case &quot;rue&quot;,&quot;rue-sk&quot;,&quot;rue-ua&quot;
		S2=&quot;Rusyan&quot;
	case &quot;rw&quot;,&quot;rw-rw&quot;
		S2=&quot;Kinyarwanda&quot;
	case &quot;smn&quot;,&quot;se&quot;,&quot;smj&quot;,&quot;sma&quot;,&quot;smn-fi&quot;,&quot;smn-ru&quot;,&quot;smj-no&quot;,&quot;smj-se&quot;,&quot;se-fi&quot;,&quot;se-no&quot;,&quot;se-se&quot;,&quot;sms-fi&quot;,&quot;sma-no&quot;,&quot;sma-se&quot;
		S2=&quot;Sami&quot;
	case &quot;sh&quot;,&quot;sr&quot;,&quot;sr-me&quot;,&quot;sr-su&quot;,&quot;sr-rs&quot;,&quot;sh-me&quot;,&quot;sh-yu&quot;,&quot;sh-rs&quot;,&quot;sh-su&quot;
		S2=&quot;Serbian&quot;
	case &quot;shs&quot;,&quot;shs-ca&quot;
		S2=&quot;Shuswap&quot;
	case &quot;sk&quot;,&quot;sk-sk&quot;
		S2=&quot;Slovakian&quot;
	case &quot;sl&quot;,&quot;sl-si&quot;
		S2=&quot;Slovene&quot;
	case &quot;so&quot;,&quot;so-so&quot;
		S2=&quot;Somali&quot;
	case &quot;sq&quot;,&quot;sq-al&quot;
		S2=&quot;Albanian&quot;
	case &quot;src&quot;,&quot;src-it&quot;
		S2=&quot;Sardinian (Logudorese)&quot;
	case &quot;sdc&quot;,&quot;sdc-it&quot;
		S2=&quot;Sardinian (Sassarese)&quot;
	case &quot;ss&quot;,&quot;ss-za&quot;
		S2=&quot;Swazi&quot;
	case &quot;st&quot;,&quot;st-za&quot;
		S2=&quot;Southern Sotho&quot;
	case &quot;sw&quot;,&quot;sw-tz&quot;,&quot;sw-ke&quot;
		S2=&quot;Swahili&quot;
	case &quot;swb&quot;,&quot;swb-yt&quot;
		S2=&quot;Maore&quot;
	case &quot;sv&quot;,&quot;sv-se&quot;
		S2=&quot;Swedish&quot;
	case &quot;tek&quot;,&quot;tek-cg&quot;
		S2=&quot;Teke-Ibali&quot;
	case &quot;tet&quot;,&quot;tet-id&quot;,&quot;tet-tl&quot;
		S2=&quot;Tetun&quot;
	case &quot;tg&quot;,&quot;tg-tj&quot;
		S2=&quot;Tajic&quot;
	case &quot;th&quot;,&quot;th-th&quot;
		S2=&quot;Thai&quot;
	case &quot;ti&quot;,&quot;ti-er&quot;,&quot;ti-et&quot;
		S2=&quot;Tigrigna&quot;
	case &quot;tk&quot;,&quot;tk-tm&quot;
		S2=&quot;Turkmen&quot;
	case &quot;tl&quot;,&quot;tl-ph&quot;
		S2=&quot;Tagalog&quot;
	case &quot;tn&quot;,&quot;tn-bw&quot;,&quot;tn-za&quot;
		S2=&quot;Tswana&quot;
	case &quot;tpi&quot;,&quot;tpi-pg&quot;
		S2=&quot;Tok Pisin&quot;
	case &quot;tr&quot;,&quot;tr-tr&quot;
		S2=&quot;Turkish&quot;
	case &quot;tt&quot;,&quot;tt-ru&quot;
		S2=&quot;Tatar&quot;
	case &quot;ts&quot;,&quot;ts-za&quot;
		S2=&quot;Tsonga&quot;
	case &quot;ty&quot;,&quot;ty-pf&quot;
		S2=&quot;Tahitian&quot;
	case &quot;tyx&quot;,&quot;tyx-cg&quot;
		S2=&quot;Teke-Tyee&quot;
	case &quot;uk&quot;,&quot;uk-ua&quot;
		S2=&quot;Ukranian&quot;
	case &quot;ur&quot;,&quot;ur-in&quot;,&quot;ur-pk&quot;
		S2=&quot;Urdu&quot;
	case &quot;uz&quot;,&quot;uz-uz&quot;
		S2=&quot;Uzbec&quot;
	case &quot;ve&quot;,&quot;ve-za&quot;
		S2=&quot;Venda&quot;
	case &quot;vi&quot;,&quot;vi-vn&quot;
		S2=&quot;Vietnamese&quot;
	case &quot;vif&quot;,&quot;vif-cg&quot;
		S2=&quot;Vili&quot;
	case &quot;wa&quot;,&quot;wa-be&quot;
		S2=&quot;Walloon&quot;
	case &quot;xh&quot;,&quot;xh-za&quot;
		S2=&quot;Xhosa&quot;
	case &quot;yi&quot;,&quot;yi-us&quot;
		s2=&quot;Yiddish&quot;
	case &quot;yo&quot;,&quot;yo-ng&quot;
		S2=&quot;Yoruba&quot;
	case &quot;zh-cn&quot;
		S2=&quot;Chinese (Simplified)&quot;
	case &quot;zh-tw&quot;
		S2=&quot;Chinese (Traditional)&quot;
	case &quot;zh-hk&quot;
		S2=&quot;Chinese (Hong Kong)&quot;
	case &quot;zh-sg&quot;
		S2=&quot;Chinese (Singapore)&quot;
	case &quot;zh-mo&quot;
		S2=&quot;Chinese (Macau)&quot;
	case &quot;zh-yue&quot;,&quot;zh-yu&quot;
		S2=&quot;Chinese (Yue)&quot;
	case &quot;zh&quot;
		S2 = &quot;Chinese&quot;
	case &quot;zu&quot;,&quot;zu-za&quot;
		S2=&quot;Zulu&quot;
	case &quot;zxx&quot;, &quot;zxx-&quot;
		S2 = &quot;Ambiguous Or Missing Language&quot;
	case else
		S2=S1 &apos; not Found, So We Return Iso Language Code.
	end select
	Isotoenglish = S2
end function


function fsRetrieveCalcActiveCellText() as string
	fsRetrieveCalcActiveCellText=fsRetrieveCalcActiveCellProperty(&quot;String&quot;)
end function


function fsSelectionLanguage(_
		optional byVal sFilter) as string
	dim longI
	dim myLocale as new com.sun.star.lang.Locale
	dim oDoc
	dim oVC
	dim sA
	dim sB
	dim sC
	dim sD
	
	if ismissing(sFilter) then
	&apos; Consider western, Asian, complex or all languages(&quot;&quot;)?
		sFilter = &quot;&quot;
	end if

	on error resume next
	sA = &quot;&quot;
	sB = &quot;&quot;
	sC = &quot;&quot;
	sD = &quot;&quot;
	oDoc=ThisComponent
	if oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;) then
		sA=fsRetrieveCalcActiveCellProperty(&quot;language&quot;)
		sB=fsRetrieveCalcActiveCellProperty(&quot;string&quot;)
		sC=fsRetrieveCalcActiveCellProperty(&quot;asian-language&quot;)
		sD=fsRetrieveCalcActiveCellProperty(&quot;complex-language&quot;)
	elseif oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.drawing.DrawingDocument&quot;) then
		sA=fsDrawProperty(&quot;language&quot;)
		sB=fsDrawProperty(&quot;string&quot;)
		sC=fsDrawProperty(&quot;asian-language&quot;)
		sD=fsDrawProperty(&quot;complex-language&quot;)
		if sB = &quot;&quot; then
			&apos; no text is selected.
			on error resume next
			myLocale = ThisComponent.CharLocale
			sA = myLocale.Language
			myLocale = ThisComponent.CharLocaleAsian
			sC = myLocale.Language
			myLocale = ThisComponent.CharLocaleComplex
			sD = myLocale.Language
			PresentErr:
		end if
	else
		on error resume next
		oVC=oDoc.getCurrentController.getViewCursor
		sA=oVC.CharLocale.Language
		sB=oVC.GetString()
		sC=oVC.CharLocaleAsian.Language
		sD=oVC.CharLocaleComplex.Language
		
		svcErr:
	end if
	&apos; The application&apos;s built in CharLocale.Language property does not identify
	&apos; oriental or complex text locales so we use the UTF encoding for the first
	&apos; character to evaluate the language. See &lt;https://www.utf8-chartable.de/unicode-utf8-table.pl&gt;
	&apos; and &lt;https://unicode.org/Public/UNIDATA/Blocks.txt&gt;
	if sFilter = &quot;WEST&quot; or sFilter = &quot;UNDEFINED&quot; then
		fsSelectionLanguage = sA
	elseif sFilter = &quot;COMPLEX&quot;  then
		fsSelectionLanguage = sD
	elseif sFilter = &quot;ASIA&quot; then
		if fbIsKorean(sB) then
			sC=&quot;ko&quot;
		elseif fbIsJapanese(sB) then
			sC=&quot;ja&quot;
		end if
		fsSelectionLanguage = sC
	else
		if fbIsKorean(sB) then
			sC=&quot;ko&quot;
		elseif fbIsJapanese(sB) then
			sC=&quot;ja&quot;
		end if
		fsSelectionLanguage = fsUseLanguageType(sA,sB,sC,sD)
	end if

	if fsSelectionLanguage = &quot;&quot; then
		fsSelectionLanguage=fsDocLanguage()
	end if
	exit function
	SELECTLANGUAGEERROR:
	fsSelectionLanguage=fsDocLanguage()
end function


function fsSelectionCountry(_
		optional byval sFilter) as string
	dim longI
	dim myLocale as new com.sun.star.lang.Locale
	dim oDoc
	dim oVC
	dim sA
	dim sB
	dim sC
	dim sD

	if ismissing(sFilter) then
	&apos; Consider western, Asian, complex, or all?
		sFilter = &quot;&quot;
	end if
	on error resume next
	&apos;On Error Goto SELECTCOUNTRYERROR
	sA = &quot;&quot;
	sB = &quot;&quot;
	sC = &quot;&quot;
	sD = &quot;&quot;
	oDoc=ThisComponent
	if oDoc.SupportsService(&quot;com.sun.star.sheet.SpreadsheetDocument&quot;) then
		sA=fsRetrieveCalcActiveCellProperty(&quot;country&quot;)
		sB=fsRetrieveCalcActiveCellProperty(&quot;string&quot;)
		sC=fsRetrieveCalcActiveCellProperty(&quot;asian-country&quot;)
		sD=fsRetrieveCalcActiveCellProperty(&quot;complex-country&quot;)
	elseif oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) or _
			oDoc.supportsService(&quot;com.sun.star.drawing.DrawingDocument&quot;) then
		sA=fsDrawProperty(&quot;country&quot;)
		sB=fsDrawProperty(&quot;string&quot;)
		sC=fsDrawProperty(&quot;asian-country&quot;)
		sD=fsDrawProperty(&quot;complex-country&quot;)
		if sB = &quot;&quot; then
			&apos; no text is selected.
			on error resume next
			myLocale = ThisComponent.CharLocale
			sA = myLocale.Country
			myLocale = ThisComponent.CharLocaleAsian
			sC = myLocale.Country
			myLocale = ThisComponent.CharLocaleComplex
			sD = myLocale.Country
			CountryErr:
		end if
	else
		on error resume next
		oVC=oDoc.getCurrentController.getViewCursor
		sA=oVC.CharLocale.Country
		sB=oVC.GetString()
		sC=oVC.CharLocaleAsian.Country
		sD=oVC.CharLocaleComplex.Country
		svcCountryErr:
	end if
	&apos; The application&apos;s built in CharLocale.Country property does not identify
	&apos; oriental or complex text locales so we use the UTF encoding for the first
	&apos; character to evaluate the country.  See &lt;https://www.utf8-chartable.de/unicode-utf8-table.pl&gt;
	&apos; and &lt;https://unicode.org/Public/UNIDATA/Blocks.txt&gt;
	if sFilter = &quot;WEST&quot; or sFilter = &quot;UNDEFINED&quot; then
		fsSelectionCountry = sA
	elseif sFilter = &quot;COMPLEX&quot;  then
		fsSelectionCountry = sD
	elseif sFilter = &quot;ASIA&quot; then 
		if fbIsKorean(sB) then
			sC=&quot;KR&quot;
		elseif fbIsJapanese(sB) then
			sC=&quot;JP&quot;
		end if
		fsSelectionCountry = sC
	else		
		if fbIsKorean(sB) then
			sC=&quot;KR&quot;
		elseif fbIsJapanese(sB) then
			sC=&quot;JP&quot;
		end if
		fsSelectionCountry = fsUseLanguageType(sA,sB,sC,sD)
	end if
	if fsSelectionCountry = &quot;&quot; then
		fsSelectionCountry=fsDocCountry()
	end if
	exit function
	SELECTCOUNTRYERROR:
	fsSelectionCountry=fsDocCountry()
end function


function fsComplexAsiaOrWest(_
		byval sA)
	dim longI as long
	dim iLocale as integer
	dim sB as string
	dim x as integer

	sA = trim(sA)

&apos;&apos;
&apos;&apos; Complex languages
&apos;&apos; -----------------
&apos;&apos;
&apos;&apos; Complex languages need special handling because their
&apos;&apos; Unicode strings use directional markers.
&apos;&apos;
&apos;&apos; Gurmukhi script is used for Punjabi.  Devanagari script is for
&apos;&apos; Hindi and other Indic languages.  Other complex languages include
&apos;&apos; Dogri, Bodo, Maithili, Khmer, Thaana, Dhiveh, Urdu,
&apos;&apos; Farsi, Arabic, Kashmiri, Kurdish, Hebrew, Bengali, Gurjarti,
&apos;&apos; Oriya, Tamil, Telugu, Kannada, Malayalam, Burmese (Myanmar),
&apos;&apos; Thai, Lao, Tibetan, Dzongkha, Ethiopic, Ethiopic Supplement,
&apos;&apos; Limbu, and Ethopic Extended.  Some languages use either western
&apos;&apos; or complex letters depending on region and media.
&apos;&apos;
&apos;&apos;
	if fbHasLTRMarker(sA) or fbHasRTLMarker(sA) then
		fsComplexAsiaOrWest = &quot;COMPLEX&quot;
		exit function
	end if
&apos;&apos;
&apos;&apos; Asian languages
&apos;&apos; ---------------
&apos;&apos;
&apos;&apos; Asian languages may include a large porportion of ideagrams, or
&apos;&apos; non-phonetic letters.  The direction of Asian text is top to 
&apos;&apos; bottom or left to right.  Korean Hangul traditionally incorporated
&apos;&apos; Chinese-like characters, but contemporary script is primarily 
&apos;&apos; phonetic.  Japanese includes Chinese-like characters as well as
&apos;&apos; different phonetic letter sets for some Japanese and imported words.
&apos;&apos; 
	&apos;
	&apos; Ignore numbers, basic punctuation, telephone network code and 
	&apos; western currency symbols that Asian languages commonly use
	sB = &quot; 0123456789.,-+÷×—–*#$*%#@(){}|!@&lt;&gt;=[]/:¼½¾&quot;&quot;&apos;“”‘’·€£¥¢¤&quot; &amp; _
			&quot;₠₡₢₣₤₥₦₧₨₩₪₫€₭₮₯₰₱₲₳₴₵₶₷₸₹₺⅓⅔⅛⅜⅝&quot; &amp; _
			Chr$(10) &amp; _
			Chr$(13)
	for x = 1 to 100
		if len(sA) &lt;&gt; 0 and Instr(sB, left(sA,1)) &lt;&gt; 0 then
			sA = mid(sA,2)
			sA = trim(sA)
		else
			exit for
		end if
	next
	if sA=&quot;&quot; then
		longI = 0
	else
		longI = asc(sA)
	end if
	if longI &gt;= clng(&quot;&amp;H0000&quot;) And longI &lt;= clng(&quot;&amp;H058F&quot;) then
		iLocale = 0 &apos; western
	elseif longI &gt;=clng(&quot;&amp;H3400&quot;) And longI &lt;= clng(&quot;&amp;H9FFF&quot;) then
		iLocale = 1 &apos; zh, ja or ko
	elseif longI &gt;= clng(&quot;&amp;H3040&quot;) And longI &lt;= clng(&quot;&amp;H31FF&quot;) then
		iLocale = 1 &apos; &quot;ja&quot;
	elseif longI &gt;= asc(&quot;?&quot;) And longI &lt;= asc(&quot;?&quot;) then
		iLocale = 1 &apos; &quot;ja&quot;
	elseif longI &gt;= clng(&quot;&amp;HAC00&quot;) And longI &lt;= clng(&quot;&amp;HD7A3&quot;) then
		iLocale = 1 &apos; &quot;ko&quot;
	elseif longI &gt;=clng(&quot;&amp;HFFA0&quot;) And longI &lt;=clng(&quot;&amp;HFFDC&quot;) then
		iLocale = 1 &apos; &quot;ko&quot;
	else &apos; western
		iLocale = 0
	end if
	select case iLocale
	case 0
		if fbIsAnURL(sA) then
			fsComplexAsiaOrWest=&quot;UNDEFINED&quot;
		else
			fsComplexAsiaOrWest=&quot;WEST&quot;
		end if
	case else
		fsComplexAsiaOrWest=&quot;ASIA&quot;
	end select
end function


function fbIsJapanese(_
		byval sA)
	dim longI as long
	dim sB as string
	dim x as integer
	sA = trim(sA)
	&apos;
	&apos; Ignore numbers, basic punctuation, telephone network code and 
	&apos; western currency symbols that Asian languages commonly use
	sB = &quot; 0123456789.,-+÷×—–*#$*%#@(){}|!@&lt;&gt;=[]/:¼½¾&quot;&quot;&apos;“”‘’·€£¥¢¤&quot; &amp; _
			&quot;₠₡₢₣₤₥₦₧₨₩₪₫€₭₮₯₰₱₲₳₴₵₶₷₸₹₺⅓⅔⅛⅜⅝&quot; &amp; _
			Chr$(10) &amp; _
			Chr$(13)
	for x = 1 to 100
		if len(sA) &lt;&gt; 0 and Instr(sB, left(sA,1)) &lt;&gt; 0 then
			sA = mid(sA,2)
			sA = trim(sA)
		else
			exit for
		end if
	next
	if sA=&quot;&quot; then
		longI = 0
	else
		longI = asc(sA)
	end if
	if longI &gt;= 12352 AND longI &lt;= 12799 then
		fbIsJapanese=true &apos; &quot;ja&quot;
	elseif longI &gt;= 65381 AND longI &lt;= 65439 then
		fbIsJapanese=true &apos; &quot;ja&quot;
	else &apos; Complex, Western, Chinese, Korean or ambiguous language
		fbIsJapanese=False
	end if
end function


function fbIsKorean(_
		byval sA)
	dim longI as long
	dim sB as string
	dim x as integer

	sA = trim(sA)
	&apos;
	&apos; Ignore numbers, basic punctuation, telephone network code and 
	&apos; western currency symbols that Asian languages commonly use
	sB = &quot; 0123456789.,-+÷×—–*#$*%#@(){}|!@&lt;&gt;=[]/:¼½¾&quot;&quot;&apos;“”‘’·€£¥¢¤&quot; &amp; _
			&quot;₠₡₢₣₤₥₦₧₨₩₪₫€₭₮₯₰₱₲₳₴₵₶₷₸₹₺⅓⅔⅛⅜⅝&quot; &amp; _
			Chr$(10) &amp; _
			Chr$(13)
	for x = 1 to 100
		if len(sA) &lt;&gt; 0 and Instr(sB, left(sA,1)) &lt;&gt; 0 then
			sA = mid(sA,2)
			sA = trim(sA)
		else
			exit for
		end if
	next
	if sA=&quot;&quot; then
		longI = 0
	else
		longI = asc(sA)
	end if
	if longI &gt;= 44032 And longI &lt;= 55203 then
		fbIsKorean=true &apos; &quot;ko&quot;
	elseif longI &gt;= 65440 And longI &lt;= 65500 then
		fbIsKorean=true &apos; &quot;ko&quot;
	else &apos; Complex, Western, Chinese, Japanese or ambiguous language
		fbIsKorean=False
	end if
end function


function fsUseLanguageType(_
		sA, _
		sB, _
		sC, _
		sD)
	dim sE as string

	sE = fsComplexAsiaOrWest(sB)
	select case sE
	case &quot;ASIA&quot;
		fsUseLanguageType=sC
	case &quot;COMPLEX&quot;
		fsUseLanguageType=sD
	case else &apos; &quot;WEST&quot; or &quot;UNDEFINED&quot;
		fsUseLanguageType=sA
	end select
end function


function fsDrawText() as string
	&apos;function to get text selection in a drawing or a presentation slide
	fsDrawText=fsDrawProperty(&quot;String&quot;)
end function


function fsDrawProperty(_
		strA) as string
	dim oDoc As Object
	dim oController As Object
	dim oSelection As Object
	dim s1r as string

	On error goto fsDrawPropertyErr
	s1r=&quot;&quot;
	oDoc=ThisComponent
	oController=oDoc.getCurrentController()
	oSelection=oController.getSelection()
	if oSelection.supportsService(&quot;com.sun.star.text.TextCursor&quot;) then
	select case strA
	case &quot;country&quot;
		s1r=oSelection.CharLocale.Country
	case &quot;language&quot;
		s1r=oSelection.CharLocale.Language
	case &quot;asian-language&quot;
		s1r=oSelection.CharLocaleAsian.Language
	case &quot;complex-language&quot;
		s1r=oSelection.CharLocaleComplex.Language
	case &quot;asian-country&quot;
		s1r=oSelection.CharLocaleAsian.Country
	case &quot;complex-country&quot;
		s1r=oSelection.CharLocaleComplex.Country
	case else
	s1r=oSelection.getString()
		end select
	end if
	fsDrawProperty=s1r
	exit function
	fsDrawPropertyErr:
	fsDrawProperty = &quot;&quot;
end function

&apos;&apos;
&apos;&apos; # Reference
&apos;&apos;

sub MsgSpeak(_
		strA as string)
&apos;&apos;
&apos;&apos; MsgSpeak (Basic command)
&apos;&apos; ------------------------
&apos;&apos;
&apos;&apos; if you want to get your hands dirty with a little Basic programming,
&apos;&apos; you can use the `msgspeak` command in your own slide shows or programs
&apos;&apos; to synthesize speech. 
&apos;&apos;
&apos;&apos; The command reads the string using the language and region of the
&apos;&apos; the current document using the current settings of extension. if 
&apos;&apos; the extension is set up to go to a web page or save a file, that is
&apos;&apos; what it will do when you activate the command.
&apos;&apos; 
&apos;&apos; This example shows how to use the command in your own script:
&apos;&apos;
&apos;&apos;     sub OnClickMySlide1Image1()
&apos;&apos;         &apos; Read text aloud. 
&apos;&apos;         dim oSvc
&apos;&apos;         dim sURL
&apos;&apos;         dim sArg
&apos;&apos; 
&apos;&apos;         sArg = &quot;Hello world!&quot;
&apos;&apos;         sURL = &quot;https://sites.google.com/site/readtextextension/&quot;
&apos;&apos;         on error goto OnClickMySlide1Image1Err
&apos;&apos;         msgSpeak(sArg)
&apos;&apos;         exit sub
&apos;&apos;         OnClickMySlide1Image1Err:
&apos;&apos;         if msgbox(&quot;The button couldn&apos;t find a &quot;&quot;text to speech&quot;&quot; add-on.&quot; &amp; _
&apos;&apos;                 chr(10) &amp; _
&apos;&apos;                 sArg &amp; _
&apos;&apos;                 chr(10) &amp; _
&apos;&apos;                 &quot;Get on-line help?&quot;, _
&apos;&apos;                 4, _
&apos;&apos;                 &quot;Read Text&quot;) &lt;&gt; 7 then
&apos;&apos;             oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)
&apos;&apos;             oSvc.execute(sURL,&quot;&quot;,0)
&apos;&apos;         end if
&apos;&apos;     end sub
&apos;&apos;
	dim sFile as string
	dim i1 as Integer
	dim msgs() as variant
	dim errorCode as integer
	dim config(fiCountConfigOptions) as variant

	sFile=fsFullPathOf(fsExtensionSettingsIni)
	if fileexists(sFile) then
		if fbCreatingMediaFile() then
			&apos; We show you the settings and ask you to
			&apos; verify that you really want to create
			&apos; a media file.
			i1 = fiReportMetaData(true)
			select case i1
			case 2
				&apos; (&quot;Cancel&quot;)
				exit sub
			case 7
				&apos; (&quot;No&quot;) Edit the settings
				if ThisComponent.supportsService(_
					&quot;com.sun.star.presentation.PresentationDocument&quot;) then
					&apos; Stop the presentation if it is running
					&apos; because the graphics exporter does not
					&apos; work when the presentation is running.
					ThisComponent.Presentation.end
				end if
				ConfigureReadTextAloud()
			case else
				&apos; (&quot;Yes&quot;) Process using the settings
				if ThisComponent.supportsService(_
					&quot;com.sun.star.presentation.PresentationDocument&quot;) then
					ThisComponent.Presentation.end
				end if
				tts_config_parseFile(sFile,config(),errorCode)
				ttsActuate(config(),_
				msgs(),_
				errorCode,_
				strA)
			end select
		elseif fsGetOS()=&quot;OSX&quot; and _
				fbCreatingMediaFile(&quot;airplay,AIRPLAY,AppleTV,attic,basement,bedroom,BLUETOOTH,B&amp;W,Bose,Bowers,&quot; &amp; _
						&quot;Creative,Dell,Harmon,Jambox,Jawbone,JBL,kitchen,LogiTech,Polk,Reflector,room,&quot; &amp; _
						&quot;Soundcast,Ultimate,yard&quot;) then
			 &apos; Using say speech synthesis with a wireless  
			 &apos; option could fail silently.  We show you the
			 &apos; the configuration dialogue to check that you
			 &apos; want to use Airplay in this context.  You need 
			 &apos; a chance to turn on your Airplay speakers
			 &apos; or your media playback device.
			 &apos;
			 &apos; Say speech synthesis only sends audio.  if you
			 &apos; need visuals as well, use the Airplay icon
			 &apos; on your OSX computer&apos;s toolbar.
			 &apos;
			 &apos; See: [`man say`][MS0]
			 &apos;
			 &apos; [MS0]:https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/say.1.html
			 &apos;
			 ConfigureReadTextAloud
		else
			&apos; Read strA aloud
			if fileexists(sFile) then
				tts_config_parseFile(sFile,config(),errorCode)
				ttsActuate(config(),_
				msgs(),_
				errorCode,_
				strA)
			else
				ConfigureReadTextAloud()
			end if
		end if
	else
		&apos; Show the settings dialogue
		ConfigureReadTextAloud
	end if
end sub


function fsEscapeStr(_
		sA as string, _
		optional byval bIgnoreOS) as string
	if ismissing(bIgnoreOS) then
		bIgnoreOS = False
	end if
	if (fsGetOS()=&quot;OSX&quot; Or fsGetOS()=&quot;MAC&quot;) and not(bIgnoreOS) then
		sA=fsreplaceText(sA,&quot;+&quot;,&quot;+&quot;)
		&apos;https://www.fileformat.info/info/unicode/char/ff0b/index.htm
		sA=fsreplaceText(sA,&quot;&amp;&quot;,&quot;&amp;&quot;)
		&apos;https://www.fileformat.info/info/unicode/char/ff06/index.htm
		fsEscapeStr=sA
	else
		sA=fsreplaceText(sA,&quot;+&quot;,&quot;%2B&quot;)
		sA=fsreplaceText(sA,&quot;&amp;&quot;,&quot;%26&quot;)
		select case Lcase(left(ConvertToURL(sA),Instr(ConvertToURL(sA),&quot;:&quot;)))
		case &quot;file:&quot;
			fsEscapeStr=mid(ConvertToURL(sA),9)
		case else
			fsEscapeStr=sA
		end select
	end if
end function

function fsLang() as string
	&apos; Full Language String - en-US en-GB zh-CN zh-TW etc.
	&apos; for languages with no UI variant, returns a two letter string
	&apos; fl, fr, pl etc.
	dim SubstService as variant

	SubstService=CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	fsLang=SubstService.substituteVariables(&quot;$(vlang)&quot;,True)
end function


function fsOptDirectory() as string
	if fsGetOS=&quot;WINDOWS&quot; then
		fsOptDirectory= fsHomeDrive() &amp; &quot;\opt\&quot;
	else
		fsOptDirectory=&quot;/opt/&quot;
	end if
end function


function fsHomeDrive() as string
	fsHomeDrive=environ(&quot;HOMEDRIVE&quot;)
	if fsHomeDrive=&quot;&quot; then
		if fsGetOS=&quot;WINDOWS&quot; then
			fsHomeDrive=&quot;C:&quot;
		else
			fsHomeDrive=&quot;&quot;
		end if
	end if
end function


function fsProgramDirectory() as string
	dim c as string

	c=environ(&quot;ProgramFiles&quot;)
	if Instr(c,&quot;\&quot;) &lt;&gt; 0 then
		fsProgramDirectory=c &amp; &quot;\&quot;
	else
		fsProgramDirectory=&quot;/usr/bin/&quot;
	end if
end function


function fsProgramDirectoryx86() as string
	dim c as string

	c=environ(&quot;ProgramFiles(x86)&quot;)
	if Instr(c,&quot;\&quot;) &lt;&gt; 0 then
		fsProgramDirectoryx86=c &amp; &quot;\&quot;
	else
		fsProgramDirectoryx86=&quot;/usr/bin/&quot;
	end if
end function

function fsLamePath()
  dim s1
  dim s2

  fsLamePath = &quot;&quot;
  s1 = fsProgramDirectoryx86 &amp; &quot;Lame for Audacity\lame.exe&quot;
  s2 = fsProgramDirectoryx86 &amp; &quot;Lame for Audacity\lame.exe&quot;
  if FileExists(s1) then
    fsLamePath = s1
  elseif FileExists(s2) then
    fsLamePath = s2
  elseif FileExists(&quot;/usr/bin/lame&quot;) then
  	fsLamePath = &quot;/usr/bin/lame&quot;
  elseif FileExists(&quot;/usr/local/bin/lame&quot;) then
  	fsLamePath = &quot;/usr/local/bin/lame&quot;
  elseif fileexists(fsOptDirectory() &amp; &quot;lame.exe&quot;) then
	fsLamePath = fsOptDirectory() &amp; &quot;lame.exe&quot;
  end if
end function


function fsInstallPath() as string
	dim SubstService as variant

	SubstService=CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	fsInstallPath=SubstService.substituteVariables(&quot;$(inst)&quot;,True)
end function


function fbIsWin64Program(_
		optional byval installPath)
	if ismissing(installPath) or installPath = &quot;&quot; then
		installPath = fsInstallPath
	end if
	
	if fsGetOS = &quot;WINDOWS&quot; and _
			Ucase(environ(&quot;PROCESSOR_ARCHITECTURE&quot;)) = &quot;AMD64&quot; and _
			instr(lcase(installPath), &quot;(x86)&quot;) &lt; 1 then
		fbIsWin64Program = True
	else
		fbIsWin64Program = False
	end if
end function


function fbIsAMediaPlayer(_
		s1 as string) as boolean
	&apos; Return `True` if a string describes a valid media player.
	dim n as integer
	s1=Lcase(s1)
	fbIsAMediaPlayer=False
	if len(s1) = 0 Then
		exit function
	end if
	dim aA : aA = array(_
			&quot;/usr/bin/avplay&quot;, _
			&quot;/usr/bin/bangarang&quot;, _
		    &quot;/usr/bin/exail&quot;, _
		    &quot;/usr/bin/ffplay&quot;, _
		    &quot;/usr/bin/gmplayer&quot;, _
			&quot;/usr/bin/gnome-open&quot;, _
		    &quot;/usr/bin/kaffeine&quot;, _
		    &quot;/usr/bin/kde-open&quot;, _
			&quot;/usr/bin/kplayer&quot;, _
		    &quot;/usr/bin/mpg123&quot;, _
		    &quot;/usr/bin/mpg321&quot;, _
			&quot;/usr/bin/mplayer&quot;, _
		    &quot;/usr/bin/noatun&quot;, _
		    &quot;/usr/bin/parole&quot;, _
			&quot;/usr/bin/sensible-browser&quot;, _
		    &quot;/usr/bin/totem&quot;, _
		    &quot;/usr/bin/xdg-open&quot;, _
			&quot;/usr/bin/xfmedia&quot;, _
		    &quot;/usr/bin/xine&quot;, _
		    &quot;/usr/bin/xmms&quot;, _
		    &quot;audacity&quot;, _
		    &quot;chrome&quot;, _
			&quot;chromium&quot;, _
		    &quot;firefox&quot;, _
		    &quot;iceweasel&quot;, _
		    &quot;iexplore&quot;, _
		    &quot;opera&quot;, _
		    &quot;quicktimeplayer.exe&quot;, _
			&quot;vlc&quot;, _
		    &quot;winamp&quot;, _
		    &quot;wmplayer&quot;)
	for n = lbound(aA) to ubound(aA)
		if Instr(s1,aA(n)) &lt;&gt; 0 then
			fbIsAMediaPlayer=True
			exit for
		end if
	Next
end function


sub myBeep()
	dim sA as string
	dim oSvc As Object

	sA=soundsDirectory()&amp;&quot;apert.wav&quot;
	if fileexists(sA) then
		sA=convertToURL(sA)
	elseif fileexists(&quot;/usr/share/sounds/alsa/Noise.wav&quot;) then
		sA=convertToURL(&quot;/usr/share/sounds/alsa/Noise.wav&quot;)
	else
		sA=convertToURL(&quot;/usr/share/sounds/speech-dispatcher/test.wav&quot;)
	end if
	oSvc=createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)
	oSvc.execute(sA,&quot;&quot;,1)
end sub


sub windowsSAPIControl()
	dim s2 as string
	dim oSvc As Object

	oSvc=createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;)
	s2=fsHomeDrive()
	if fileexists(s2 &amp; &quot;\Windows\SysWOW64\Speech\SpeechUX\sapi.cpl&quot;) then
		oSvc.execute(s2 &amp; &quot;\Windows\SysWOW64\Speech\SpeechUX\sapi.cpl&quot;,&quot;&quot;,0)
	elseif fileexists(s2 &amp; &quot;\Windows\System32\Speech\SpeechUX\sapi.cpl&quot;) then
		oSvc.execute(s2 &amp; &quot;\Windows\System32\Speech\SpeechUX\sapi.cpl&quot;,&quot;&quot;,0)
	elseif fileexists(fsProgramDirectory() &amp; _
			&quot;Common Files\Microsoft Shared\Speech\sapi.cpl&quot;) then
		oSvc.execute(fsProgramDirectory() &amp; _
				&quot;Common Files\Microsoft Shared\Speech\sapi.cpl&quot;,&quot;&quot;,0)
	elseif fileexists(s2 &amp; &quot;\WINDOWS\ServicePackFiles\i386\sapi.cpl&quot;) then
		oSvc.execute(s2 &amp; &quot;\WINDOWS\ServicePackFiles\i386\sapi.cpl&quot;,&quot;&quot;,0)
	elseif fileexists(s2 &amp; &quot;\Windows\System32\access.cpl&quot;) then
		oSvc.execute(s2 &amp; &quot;\Windows\System32\access.cpl&quot;,&quot;&quot;,0)
	elseif fileexists(&quot;/usr/bin/systemsettings&quot;) then &apos;kde
		Shell(&quot;/usr/bin/systemsettings&quot;,0,&quot;&quot;,False)
	elseif fileexists(&quot;/usr/bin/xfce-setting-show&quot;) then &apos;xfce
		Shell(&quot;/usr/bin/xfce-setting-show&quot;,0,&quot;&quot;,False)
	elseif fileexists(&quot;/usr/bin/gnome-control-center&quot;) then &apos;gnome
		Shell(&quot;/usr/bin/gnome-control-center&quot;,0,&quot;&quot;,False)
	elseif fileexists(&quot;/usr/bin/unity-control-center&quot;) then &apos;ubuntu
		Shell(&quot;/usr/bin/unity-control-center&quot;,0,&quot;&quot;,False)
	elseif fsGetOS()=&quot;OSX&quot; Or fsGetOS()=&quot;MAC&quot; then &apos;osx
		Shell(&quot;open&quot;,0,&quot;-b com.apple.systempreferences&quot;,False)
	end if
end sub


sub libreHelp()
&apos;&apos;
&apos;&apos; Help in LibreOffice
&apos;&apos; -------------------
&apos;&apos;
&apos;&apos; LibreOffice does not show an extension&apos;s help documents if the
&apos;&apos; application&apos;s help documents are not installed. In this case,
&apos;&apos; we show web based extension help in a browser window
&apos;&apos;
	select case fbHelpIsInstalled()
	case False
		WebHelp()
	case else
		&apos;don&apos;t do anything; extension can use ordinary help.
	end select
end sub


function fbCreateFile(_
		sFilePath, _
		sWriteString, _
		Optional sEncoding)
	&apos; fbCreateFile(&quot;/tmp/sample.txt&quot;,&quot;Hello world&quot;,&quot;utf-8&quot;) &apos; Best practice
	&apos; fbCreateFile(&quot;/tmp/sample.txt&quot;,&quot;Hello world&quot;) &apos; is allowed, but not
	&apos; best practice.
&apos;&apos;
&apos;&apos; Asian file names in Windows
&apos;&apos; ---------------------------
&apos;&apos;
&apos;&apos; Depending on the locale and age of your system, you may have
&apos;&apos; have problems if a Windows file path includes Asian characters.
&apos;&apos; Windows used different encodings for different markets.  if 
&apos;&apos; you have a problem saving or opening a file, try renaming the
&apos;&apos; directories in the file path with Western characters.
&apos;&apos;
	dim oOutputAccess As Object
	dim oOutputStream As Object
	dim vOutputData, UDP, PV as variant
 	dim CR as string
	
	if ismissing(sEncoding) then
		select case fsGetOS()
		case &quot;WINDOWS&quot;
			sEncoding = &quot;utf-8&quot; &apos; iso-8859-15 is Windows &quot;western&quot; encoding
								&apos; It doesn&apos;t include Asian or Complex language support
		case else
			sEncoding = &quot;utf-8&quot; &apos; Posix standard
		end select
	end if
	on Error goto fbCreateFileError
	CR = chr(13)
	if fileexists(sFilePath) then
		kill sFilePath
	end if
	oOutputAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oOutputStream = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	vOutputData = oOutputAccess.openFileWrite( sFilePath )
	oOutputStream.setOutputStream(vOutputData)
	oOutputStream.setEncoding(sEncoding)
	oOutputStream.writeString( sWriteString )
	oOutputStream.flush()
	oOutputStream.closeOutput()
	fbCreateFile = True
	exit function
	fbCreateFileError:
	fbCreateFile = False
end function


function fbcreateDirectory(_
		sPath)
	on error goto fbcreateDirectoryErr
	dim sA as string

	if len(sPath) &lt; len(&quot;file:///c/d&quot;) then
		fbcreateDirectory= False
	else
		fbcreateDirectory = True
		if right(sPath, 1) = &quot;/&quot; then
			sA = sPath &amp; &quot;temp-&quot; &amp; trim(second(now)) &amp; &quot;.txt&quot;
		else
			sA = sPath &amp; &quot;/&quot; &amp; &quot;temp-&quot; &amp; trim(second(now)) &amp; &quot;.txt&quot;
		end if
		fbcreateDirectory = fbCreateFile( sA, fsAppSignature(), &quot;UTF-8&quot;)
		if fileexists(sA) then
			kill sA
		end if
	end if
	exit function
	fbcreateDirectoryErr:
	fbcreateDirectory = False
end function


function fsNow()
&apos;&apos;
&apos;&apos; Time formats
&apos;&apos; ------------
&apos;&apos; 
&apos;&apos; Speech synthesizers may be able to convert strings written in a standard
&apos;&apos; machine language style to normal speech.  if you are not sure how to 
&apos;&apos; communicate a time and date to someone who does not speak your language,
&apos;&apos; a standard time format is useful.
&apos;&apos; 
&apos;&apos; * The Internet Engineering Task force [RFC 3339][RFC1].
&apos;&apos; * Unix `man date`
&apos;&apos;
&apos;&apos; Unix commands to generate formatted time strings
&apos;&apos;
&apos;&apos;     date +%F-T%X%:z &gt; &quot;$HOME/date.txt&quot;
&apos;&apos;     date -u +%F-T%X-00:00 &gt; &quot;$HOME/date.txt&quot;
&apos;&apos;
&apos;&apos;
&apos;&apos; [RFC1]: https://www.ietf.org/rfc/rfc3339.txt
&apos;&apos;
	dim sA as string

	sA= year(now) &amp; &quot;-&quot; &amp; _
	fsPrefixZeroes(month(now),2) &amp; &quot;-&quot; &amp; _
	fsPrefixZeroes(day(now),2) &amp; &quot;T&quot; &amp; _
	fsPrefixZeroes(hour(now),2) &amp; &quot;:&quot; &amp; _
	fsPrefixZeroes(minute(now),2) &amp; &quot;:&quot; &amp; _
	fsPrefixZeroes(second(now),2)
	fsNow = sA
end function


function fsPrefixZeroes(_
		s1, _
		n1)
	&apos; s1 is the stringto prefix zeroes with
	&apos; n1 is the minimum length of the return string
	dim s2 as string

	if n1 &lt; 1000 and len(s1) &lt; n1 then &apos; sanity check
		s2=String(n1, &quot;0&quot;) &amp; s1
		fsPrefixZeroes = right(s2,n1)
	else
		fsPrefixZeroes = s1
	end if
end function


function fxStr(_
		optional byval sA)
	&apos; Unescapes Python or ECMAscript style line ending code.
	&apos; https://www.random.org
	&apos;
	if ismissing(sA) then sA = &quot;&quot;
	if not(sA = &quot;&quot;) then
		sA = fsReplaceText(sA, &quot;\\n&quot;, &quot;[[%%ekuoC52bRp08c6noyqDy%%]]n&quot;)
		sA = fsReplaceText(sA, &quot;\n&quot;, chr(10))
		sA = fsReplaceText(sA, &quot;[[%%ekuoC52bRp08c6noyqDy%%]]n&quot;, &quot;\n&quot;)
	end if
	fxStr = sA
end function


function fsAboutAbilityToolsApple()
	dim s1$ : s1 = Join(_
			Array(_
			&quot;Read Text&quot;, _
			&quot;=========&quot;, _
			&quot;&quot;, _
			&quot;Summary&quot;, _
			&quot;-------&quot;, _
			&quot;&quot;, _
			&quot;**Read Text** reads text aloud, saves audio or video files&quot;, _
			&quot;from text, and can use resources from the web based on the&quot;, _
			&quot;selected text.&quot;, _
			&quot;&quot;, _
			&quot; * Select text.&quot;, _
			&quot; * Click the *Read selection...* button.&quot;, _
			&quot; * To read aloud, accept the default in the dialogue, or choose&quot;, _
			&quot;   another action from the menus.&quot;, _
			&quot;&quot;, _
			&quot;### Read Aloud ###&quot;, _
			&quot;&quot;, _
			&quot;    &quot;&quot;(SAY_APPLESCRIPT)&quot;&quot;&quot;, _
			&quot;&quot;, _
			&quot;### Record ###&quot;, _
			&quot;&quot;, _
			&quot;    &quot;&quot;(SAY_APPLESCRIPT)&quot;&quot; &quot;&quot;(HOME)(now).aiff&quot;&quot;&quot;, _
			&quot;    &quot;&quot;(SAY_APPLESCRIPT)&quot;&quot; &quot;&quot;(HOME)(now).m4a&quot;&quot;&quot;, _
			&quot;&quot;, _
			&quot;Features&quot;, _
			&quot;--------&quot;, _
			&quot;&quot;, _
			&quot; * Automatically change languages according to the text language.&quot;, _
			&quot; * Create sound or still-image speech files for listening on the go.&quot;, _
			&quot; * Use web resources to translate, look up, listen, post, or&quot;, _
			&quot;   interface with web applications.&quot;, _
			&quot;&quot;, _
			&quot;Installation&quot;, _
			&quot;------------&quot;, _
			&quot;&quot;, _
			&quot;Get *Read Text* from the download page and install it by double-clicking it.&quot;, _
			&quot;&quot;, _
			&quot;[Apache %PRODUCTNAME][1]  &quot;, _
			&quot;[%PRODUCTNAME][2]&quot;, _
			&quot;&quot;, _
			&quot;### FFMPEG ###&quot;, _
			&quot;&quot;, _
			&quot;Record a [jpeg][3] or [png][4] image file with sound using `ffmpeg`&quot;, _
			&quot;&quot;, _
			&quot;    &quot;&quot;(SAY_APPLESCRIPT)&quot;&quot; &quot;&quot;(HOME)(now).webm&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;&quot;&quot;, _
			&quot;    &quot;&quot;(SAY_APPLESCRIPT)&quot;&quot; &quot;&quot;(HOME)(now).webm&quot;&quot; &quot;&quot;(MY_IMAGE)&quot;&quot; &quot;&quot;480x480&quot;&quot;&quot;, _
			&quot;&quot;, _
			&quot; [ffmpeg][5]  &quot;, _
			&quot;&quot;, _
			&quot;License&quot;, _
			&quot;-------&quot;, _
			&quot;&quot;, _
			&quot;The project is licensed under the [GNU 2.0][6] license.&quot;, _
			&quot;&quot;, _
			&quot;Online help&quot;, _
			&quot;-----------&quot;, _
			&quot;&quot;, _
			&quot;[Read Text][7]&quot;, _
			&quot;&quot;, _
			&quot;&quot;, _
			&quot;  [1]: https://extensions.services.openoffice.org/en/project/read-text&quot;, _
			&quot;  [2]: https://extensions.libreoffice.org/extension-center/read-text&quot;, _
			&quot;  [3]: https://www.w3.org/Graphics/JPEG/&quot;, _
			&quot;  [4]: https://www.w3.org/Graphics/PNG/&quot;, _
			&quot;  [5]: https://www.ffmpeg.org&quot;, _
			&quot;  [6]: https://www.gnu.org/licenses/gpl-2.0.txt&quot;, _
			&quot;  [7]: https://sites.google.com/site/readtextextension/&quot;, _
			&quot;&quot;), _
			chr(10))

	fsAboutAbilityToolsApple = s1
end function


function fswriteOSXSpeechScript(_
		byval sArguments, _
		byval sArgLangLocale, _
		optional byVal ArtURL)
	fswriteOSXSpeechScript = &quot;&quot;
	&apos; Writes an osascript to read a sound, or create and convert a sound.
	&apos; Creates a lock file to prevent double talk and to silence the speaker
	&apos; if the button is clicked while the synthesizer is speaking.
&apos;&apos;
&apos;&apos; AirPlay
&apos;&apos; -------
&apos;&apos;
&apos;&apos; Airplay is a home or office local network protocol that lets you 
&apos;&apos; send sound and video wirelessly.  In Windows, it is used in the
&apos;&apos; Apple iTunes application.  Android can use Airplay with several apps
&apos;&apos; including Reflector.
&apos;&apos;
&apos;&apos; Airplay is native to Apple platforms.  On desktop computers using OSX,
&apos;&apos; you can use Airplay to broadcast your screen and sound using the
&apos;&apos; Airplay icon at the top of the screen.
&apos;&apos;
&apos;&apos; With the Read Text AirPlay option for OSX you can the audio output of  
&apos;&apos; the speech synthesizer to a compatible player without sharing
&apos;&apos; your desktop screen. 
&apos;&apos;
&apos;&apos;      &quot;(SAY_APPLESCRIPT_AIRPLAY)&quot; 
&apos;&apos; 
&apos;&apos; Problems?  Make sure that the device and amplifier are turned on.
&apos;&apos; if the AirPlay device is playing another program, then using the speak 
&apos;&apos; program will interrupt the program.
&apos;&apos; 
&apos;&apos; [Troubleshooting AirPlay](https://support.apple.com/en-us/HT203822)  
&apos;&apos; [Troubleshooting Apple TV](https://support.apple.com/en-us/HT200197)  
&apos;&apos; 

	dim sLang, sLangLocale, sBaseCountry, sLyrics, sTitle as string
	dim CR, sA, sB, sF, sFile, sEncoding, sSize, sMeta, sBNative as string
	dim sLongTrack as String
	dim n as integer
	dim nMinLength as integer
	dim s1 as string
	dim s2 as string
	dim errorCode
	dim bGotFFmpeg as boolean
	
	fswriteOSXSpeechScript = &quot;&quot;
	sFile=fsTemporaryTtsAppleScript
	if fileexists(sFile) then
		kill sFile
	end if
	if fileexists(sFile) then
		&apos; if we can&apos;t make a fresh file, then we don&apos;t want to run an
		&apos; arbitrary script.
		exit function
	else
		CreateFile(sFile, _
				&quot;-- fswriteOSXSpeechScript: &quot; &amp; _
				&quot;No actions are defined.&quot;, _
				&quot;utf-8&quot;)
	end if
	sLongTrack =  fsPrefixZeroes(trim(str(fiMyCurrentAudioTrack(False))), 3)
	if ismissing(ArtURL) or _
			ArtURL = &quot;&quot; or _
			not(fileexists(ArtURL)) then
		s1 = trim(convertfromURL(fsPosterImg))
	else
		s1 = trim(convertfromURL(ArtURL))
	end if

	CR = chr(13)

	sLangLocale = &quot;&quot;
	sBaseCountry = &quot;&quot;
	bGotFFmpeg = fbHaveFfmpeg
	&apos; iTunes API on OSX only adds lyrics to M4A sound files
	if fbCreatingMediaFile(&quot;.m4a&quot;) or not(fsGetOS()=&quot;OSX&quot;) then
		sLyrics = fsThisSoundLyrics()
	else
		sLyrics = &quot;&quot;
	end if
	&apos; Check generated  title 

	if fbCreatingMediaFile(&quot;.3gp,.aac,.aif,.aiff,.au,.avi,.flac,.m4a,&quot; &amp; _
			&quot;.m4v,.mov,.mkv,.mp2,.mp3,.mp4,.mpeg,.oga,.ogg,.ogm,.ogv,&quot; &amp; _
			&quot;.wav,.webm,.wma,.wmv&quot;) and fsGetOS() = &quot;OSX&quot; then
		sTitle =  fsMyTitleInputBox(true, fsThisSoundTitle())
		if sTitle = &quot;&quot; then
			sFile=fsTemporaryTtsAppleScript
			s1 = &quot;-- &quot; &amp; fsNow() &amp; &quot;.  The title is undefined.  &quot; &amp; _
					&quot;Did you click &quot;&quot;Cancel&quot;&quot; or leave the title blank?&quot;
			CreateFile(sFile, _
					s1, _
					&quot;utf-8&quot;)
			fswriteOSXSpeechScript = s1 
			exit function
		end if
	else
		sTitle = fsThisSoundTitle()
	end if
	 
	if sLyrics &lt;&gt; &quot;&quot; then
		&apos; don&apos;t use lyrics if lyrics contain only a
		&apos; short phrase or a single word.  Deals with
		&apos; iTunes problem (Track and Lyrics omitted)
		&apos; Applies to: LibreOffice Version: 4.4.0.3 (OSX)
		&apos; and Apache OpenOffice AOO411m6(Build:9775) (OSX)
		sTitle = trim(sTitle)
		if (instr(sLyrics, &quot; &quot;) &lt; 1 and _
				instr(sLyrics, &quot;?&quot;) &lt; 1) or _
				len(sLyrics) &lt; 32 then
			sLyrics = &quot;&quot;
		end if
	end if
&apos;&apos;
&apos;&apos; Graphic sizes
&apos;&apos; -------------
&apos;&apos;
&apos;&apos; Impress presentation software can convert slide images to **.jpeg** or
&apos;&apos; **.png** files.  it&apos;s an easy way to add titles to a photo or to
&apos;&apos; prepare a picture with a specific size for publication on a blog
&apos;&apos; or news site.
&apos;&apos;
&apos;&apos; When you publish a graphic, it looks best and renders fastest if you
&apos;&apos; set it to the exact size needed.  Cameras usually use resolution settings
&apos;&apos; that are much larger than needed for viewing on a screen.  The large
&apos;&apos; size is required because images are often cropped or straightened.
&apos;&apos; On low cost portable devices, these large images may take a long time
&apos;&apos; to render or may be distorted.
&apos;&apos;
&apos;&apos; The [Participatory Culture Foundation][WOSXSS1] published a matrix that
&apos;&apos; shows standard screen resolutions as well as resolutions for many
&apos;&apos; portable devices.  Here are several popular formats:
&apos;&apos; 
&apos;&apos; - **1200x800** A classic 35 mm camera format that looks good on a HDMI
&apos;&apos;   screen or a full screen MacBook
&apos;&apos; - **640x480** VGA projector or NTSC broadcast 4:3
&apos;&apos; - **720x576** PAL broadcast
&apos;&apos; - **1366x768** Windows laptop 16:9
&apos;&apos; - **1280x800** Apple MacBook
&apos;&apos; - **1440x900** Apple MacBook Air
&apos;&apos; - **1920x1080** 1080p High Def TV 16:9
&apos;&apos;
&apos;&apos; Some media players will distort album cover art if it is not square.
&apos;&apos;
&apos;&apos; - **600x600** Small square format for audio players
&apos;&apos;
&apos;&apos; [WOSXSS1]: https://web.archive.org/web/20160526113720/http://develop.participatoryculture.org/index.php/ConversionMatrix
&apos;&apos;
	sSize = &quot;600x600&quot; &apos; Small square format for audio players

	if fbCreatingOsxType1Media then
		sBNative = &quot;true&quot;
	else
		sBNative = &quot;False&quot;
	end if
	&apos; Some or all metadata information may be ignored, depending on output format
	&apos; m4a format can include lyrics.
	&apos;
	&apos; M4A - album, artist, genre, language, lyrics, title, track and year plus more.
	&apos; MP3 - album, artist, genre, language, title, track and year
	&apos; OGA - album, artist, genre, language, title, track and year
	sMeta = Join(_
			Array(_
			&quot; -metadata album=&quot;&quot; &amp; (quoted form of sAlbum) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata artist=&quot;&quot; &amp; (quoted form of sArtist) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata genre=&quot;&quot; &amp; (quoted form of sGenre) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata language=&quot;&quot; &amp; (quoted form of myLang) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata title=&quot;&quot; &amp; (quoted form of sTitle) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata track=&quot;&quot; &amp; (quoted form of sTrack) &amp; &quot;&quot;&quot;,  _
			&quot; -metadata year=&quot;&quot; &amp; (quoted form of sYear) &amp; &quot;&quot; &quot;&quot;&quot;), _
	 		&quot;&quot;)
	if fileexists(fsTemporaryTtsAppleScript) then
		kill fsTemporaryTtsAppleScript
	end if
	sA = &quot;(*&quot; &amp; CR &amp; fsAboutAbilityToolsApple &amp; CR &amp; &quot;*)&quot; &amp; CR
	if len(sArguments) &lt;&gt; 0 then
		if instr(sArguments, &quot;AirPlay&quot;) &lt;&gt; 0 then
			sA = Join(_
					Array(_
					&quot;(*&quot;, _
					&quot;AirPlay&quot;, _
					&quot;=======&quot;, _
					&quot;&quot;, _
					&quot;     &quot;&quot;(SAY_APPLESCRIPT_AIRPLAY)&quot;&quot;&quot; , _
					&quot;&quot;, _
					&quot;The AirPlay option lets you send the audio output of your computer&apos;s &quot; &amp; _
					&quot;speech synthesizer to a compatible player without sharing your desktop screen. &quot;, _
					&quot;&quot;, _
					&quot;Make sure that your AirPlay monitor is on and that your computer is &quot; &amp; _
					&quot;set to use the *correct* AirPlay device. Check the AirPlay device &quot; &amp; _
					&quot;by clicking the *AirPlay* monitor icon on your computer&apos;s menu bar.&quot;, _
					&quot;&quot;, _
					&quot;Online help&quot;, _
					&quot;-----------&quot;, _
					&quot;&quot;, _
					&quot;[Troubleshooting AirPlay](https://support.apple.com/en-us/HT203822)  &quot;, _
					&quot;[Troubleshooting Apple TV](https://support.apple.com/en-us/HT200197)  &quot;, _
					&quot;&quot;, _
					&quot;*)&quot;, _
					&quot;&quot;), _
	 				CR)
		end if
	end if
	sF = ConvertFromURL(fsFullPathOf(fsTemporaryTextDoc))
	&apos; We use the system voice if the selected language is the same as the user
	&apos; interface language. You can choose a specific voice for your primary
	&apos; working language using the system preferences for speech. Secondary 
	&apos; languages use voices chosen to match language and region.  We recommend
	&apos; you install the optional high quality voice for any voice you use
	&apos; regularly.

	if sArgLangLocale = &quot;&quot; then
		sLangLocale = &quot;&quot;
	else
		sLang = fsGetLanguage() &amp; &quot;-&quot; &amp; fsGetCountry()
		sBaseCountry = mid(sArgLangLocale, instr(sArgLangLocale,&quot;-&quot;)+1)
		select case sArgLangLocale
		case &quot;&quot;, sLang, fsGetLanguage() &amp; &quot;-&quot; &amp; sBaseCountry
			sLangLocale = &quot;&quot;
		case else
			sLangLocale=fsReplaceText(sArgLangLocale,&quot;-&quot;,&quot;_&quot;)
		end select
	end if
	sB = Join(Array(&quot;#/usr/bin/osascript&quot;, _
			sA &amp; _
			&quot;-- ------------------------------------------------------&quot;, _
			&quot;-- Read Text Extension created this script&quot;, _
			&quot;-- using &quot; &amp; fsGetSetting(&quot;ooname&quot;) &amp; &quot; &quot; &amp; fsNow, _
			&quot;-- ------------------------------------------------------&quot;, _
			&quot;on run (arguments)&quot;, _
			&quot;	set argv1 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set argv2 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set argv3 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set astring to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set b to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set bPostPlay to &quot; &amp; sBNative, _
			&quot;	set c to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set cout1 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set cout2 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set defaultImg to &quot;&quot;&quot; &amp; s1 &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set defaultSize to &quot;&quot;&quot; &amp; sSize &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set doPostProcess to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set doPostProcess2 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set err1 to &quot;&quot;Apple Script&quot;&quot;&quot;, _
			&quot;	set ffMeta to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set myConverter to &quot;&quot;&quot; &amp; fsMyFfmpeg &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set myLang to &quot;&quot;&quot; &amp; sLangLocale &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set myLock to quoted form of POSIX path of &quot;&quot;&quot; &amp; fsMyTempLock &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set myOption to &quot;&quot;&quot; &amp; sArguments &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set mySys to &quot;&quot;&quot; &amp; fsGetOS() &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set myURL to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set sGenre to &quot;&quot;&quot; &amp; fsThisDocGenre() &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set sImageURL to defaultImg&quot;, _
			&quot;	set sTrack to &quot;&quot;&quot; &amp; fiMyCurrentAudioTrack(False) &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set sYear to &quot;&quot;&quot; &amp; year(now) &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set textFile to &quot;&quot;&quot; &amp; sF &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set sAlbum to &quot;&quot;&quot; &amp; fsThisDocTitle() &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set sArtist to &quot;&quot;&quot; &amp; fsThisDocAuthor() &amp; &quot;&quot;&quot;&quot;, _
			&quot;	set sTitle to &quot;&quot;&quot; &amp; sTitle &amp; string(2, chr(0)) &amp; &quot;&quot;&quot;&quot; &amp; _
			&quot; -- Title of the selected text.&quot; &amp; _
			&quot; Check the title if it is Asian or Complex.&quot;, _
			&quot;	set myVoice to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	set sLyrics to &quot;&quot;&quot; &amp; sLyrics &amp; &quot;&quot;&quot;&quot;, _
			&quot;-- ------------------------------------------------------&quot;, _
			&quot;	set b to (do shell script &quot;&quot;touch &apos;&quot;&quot; &amp; myLock &amp; &quot;&quot;&apos;&quot;&quot;)&quot;, _
			&quot;	try&quot;, _
			&quot;		set argv1 to (item 1 of arguments)&quot;, _
			&quot;		set astring to fsChangecase(getExtension(argv1),&quot;&quot;lower&quot;&quot;)&quot;, _
			&quot;	on error&quot;, _
			&quot;		set argv1 to &quot;&quot;&quot;&quot;&quot;, _
			&quot;	end try&quot;, _
			&quot;	try&quot;, _
			&quot;		set argv2 to (item 2 of arguments)&quot;, _
			&quot;	on error&quot;, _
			&quot;		set argv2 to defaultImg&quot;, _
			&quot;	end try&quot;, _
			&quot;	try&quot;, _
			&quot;		set argv3 to (item 3 of arguments)&quot;, _
			&quot;	on error&quot;, _
			&quot;		set argv3 to defaultSize&quot;, _
			&quot;	end try&quot;, _
			&quot;	if astring is &quot;&quot;aif&quot;&quot; or astring is &quot;&quot;aiff&quot;&quot; then&quot;, _
			&quot;		set doPostProcess to &quot;&quot;tag&quot;&quot;&quot;, _
			&quot;	else if astring is &quot;&quot;m4a&quot;&quot; then&quot;, _
			&quot;		set doPostProcess to &quot;&quot;tag&quot;&quot;&quot;, _
			&quot;&quot;), _
			CR)

		if bGotFFmpeg then
			sB = sB &amp; Join(Array(&quot;	else if myConverter is not &quot;&quot;&quot;&quot; then&quot;, _
					&quot;		-- add ffmpeg metadata commands&quot;, _
					&quot;		set ffmeta to &quot;&quot;&quot; &amp; sMeta, _
					&quot;		if astring is &quot;&quot;mp3&quot;&quot; then&quot;, _
					&quot;			set cout1 to argv1&quot;, _
					&quot;			set argv1 to argv1 &amp; &quot;&quot;.aif&quot;&quot;&quot;, _
					&quot;			set cout2 to cout1 &amp; &quot;&quot;.mp3&quot;&quot;&quot;, _
					&quot;			set err1 to cout2&quot;, _
					&quot;			set doPostProcess to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of argv1) &amp; &quot;&quot; &quot;&quot; &amp; ffmeta &amp; &quot;&quot; -y &quot;&quot; &amp; (quoted form of POSIX path of cout2)&quot;, _
					&quot;			set doPostProcess2 to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of cout2) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of defaultImg) &amp; &quot;&quot; -map 0:0 -map 1:0 -c copy -id3v2_version 3 -metadata:s:v title=\&quot;&quot;Album cover\&quot;&quot; -metadata:s:v comment=\&quot;&quot;Cover (Front)\&quot;&quot; -y &quot;&quot; &amp; (quoted form of POSIX path of cout1)&quot;, _
					&quot;		else if astring is &quot;&quot;ogg&quot;&quot; then&quot;, _
					&quot;			set cout1 to argv1&quot;, _
					&quot;			set argv1 to argv1 &amp; &quot;&quot;.aif&quot;&quot;&quot;, _
					&quot;			set doPostProcess to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of argv1) &amp; &quot;&quot; &quot;&quot; &amp; ffmeta &amp; &quot;&quot; -y &quot;&quot; &amp; (quoted form of POSIX path of cout1)&quot;, _
					&quot;		else if astring is &quot;&quot;wav&quot;&quot; then&quot;, _
					&quot;			set cout1 to argv1&quot;, _
					&quot;			set argv1 to argv1 &amp; &quot;&quot;.aif&quot;&quot;&quot;, _
					&quot; 			set doPostProcess to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of argv1) &amp; &quot;&quot; -y &quot;&quot; &amp; (quoted form of POSIX path of cout1)&quot;, _
					&quot;		else if astring is &quot;&quot;webm&quot;&quot; then&quot;, _
					&quot;			set cout1 to argv1&quot;, _
					&quot;			set argv1 to argv1 &amp; &quot;&quot;.aif&quot;&quot;&quot;, _
					&quot;			set doPostProcess to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of argv1) &amp; &quot;&quot; -f image2 -i &quot;&quot; &amp; (quoted form of POSIX path of argv2) &amp; &quot;&quot; -s &quot;&quot; &amp; argv3 &amp; &quot;&quot; -vcodec libvpx -g 120 -lag-in-frames 16 -deadline good -cpu-used 0 -vprofile 0 -qmax 63 -qmin 0 -b:v 768k -acodec libvorbis -ab 112k -ar 44100 -f webm -y &quot;&quot; &amp; (quoted form of POSIX path of cout1)&quot;, _
					&quot;		else if astring is &quot;&quot;mp4&quot;&quot; then&quot;, _
					&quot;			set cout1 to argv1&quot;, _
					&quot;			set argv1 to argv1 &amp; &quot;&quot;.aif&quot;&quot;&quot;, _
					&quot;			set cout2 to cout1 &amp; &quot;&quot;.webm&quot;&quot;&quot;, _
					&quot;			set err1 to cout2&quot;, _
					&quot;			set doPostProcess to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of argv1) &amp; &quot;&quot; -f image2 -i &quot;&quot; &amp; (quoted form of POSIX path of argv2) &amp; &quot;&quot; -s &quot;&quot; &amp; argv3 &amp; &quot;&quot; -vcodec libvpx -g 120 -lag-in-frames 16 -deadline good -cpu-used 0 -vprofile 0 -qmax 63 -qmin 0 -b:v 768k -acodec libvorbis -ab 112k -ar 44100 -f webm -y &quot;&quot; &amp; (quoted form of POSIX path of cout2)&quot;, _
					&quot;			set doPostProcess2 to (quoted form of POSIX path of myConverter) &amp; &quot;&quot; -i &quot;&quot; &amp; (quoted form of POSIX path of cout2) &amp; &quot;&quot; -acodec aac -ab 160k -s &quot;&quot; &amp; argv3 &amp; &quot;&quot; -vcodec libx264 -preset slow -profile:v baseline -level 30 -maxrate 10000000 -bufsize 10000000 -f mp4 -threads 0 -strict experimental &quot;&quot; &amp; ffmeta &amp; &quot;&quot; -y &quot;&quot; &amp; (quoted form of POSIX path of cout1)&quot;, _
					&quot;		else&quot;, _
					&quot;			set argv1 to &quot;&quot;&quot;&quot;&quot;, _
					&quot;		end if&quot;, _
					&quot;&quot;), _
	 				CR)
		end if
		sB = sB &amp; Join(Array(&quot;	else&quot;, _
				&quot;		set argv1 to &quot;&quot;&quot;&quot;&quot;, _
				&quot;		set doPostProcess to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	end if&quot;, _
				&quot;	if myLang is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;		set myVoice to &quot;&quot;System&quot;&quot;&quot;, _
				&quot;		set myLang to &quot;&quot;Default Language&quot;&quot;&quot;, _
				&quot;		set myVoiceCommand to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	else&quot;, _
				&quot;		set myVoice to fsGetthevoice(myLang)&quot;, _
				&quot;		set myVoiceCommand to &quot;&quot; --voice &apos;&quot;&quot; &amp; myVoice &amp; &quot;&quot;&apos;&quot;&quot;&quot;, _
				&quot;	end if&quot;, _
				&quot;	try&quot;, _
				&quot;		if argv1 is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;			set err1 to &quot;&quot;Say command&quot;&quot;&quot;, _
				&quot;			if isInString(myOption, &quot;&quot;AirPlay&quot;&quot;) then&quot;, _
				&quot;				set err1 to &quot;&quot;AirPlay&quot;&quot;&quot;, _
				&quot;				theMsg (&quot;&quot;AirPlay&quot;&quot;, myVoice, myLang, &quot;&quot;Purr&quot;&quot;)&quot;, _
				&quot;			end if&quot;, _
				&quot;			set b to (do shell script &quot;&quot;say &quot;&quot; &amp; myOption &amp; myVoiceCommand &amp; &quot;&quot; -f &apos;&quot;&quot; &amp; textFile &amp; &quot;&quot;&apos; &quot;&quot;)&quot;, _
				&quot;		else&quot;, _
				&quot;			set err1 to &quot;&quot;Audio file&quot;&quot;&quot;, _
				&quot;			set b to (do shell script &quot;&quot;say &quot;&quot; &amp; myOption &amp; &quot;&quot; -o &quot;&quot; &amp; argv1 &amp; myVoiceCommand &amp; &quot;&quot; -f &apos;&quot;&quot; &amp; textFile &amp; &quot;&quot;&apos; &quot;&quot;)&quot;, _
				&quot;			if doPostProcess is not &quot;&quot;&quot;&quot; then&quot;, _
				&quot;				if doPostProcess is &quot;&quot;tag&quot;&quot; then&quot;, _
				&quot;					set err1 to &quot;&quot;iTunes &quot;&quot; &amp; astring &amp; &quot;&quot; metadata &quot;&quot;&quot;, _
				&quot;					set b to setItunesMetaData(argv1, sAlbum, sArtist, sGenre, sImageURL, sTitle, sTrack, sYear, mySys &amp; &quot;&quot; &quot; &amp; _
				fsLookUpTerm(&quot;s_speech-synthesis&quot;) &amp; _
				&quot; &quot; &amp; chr(8211) &amp; &quot; &quot;&quot; &amp; myVoice &amp; &quot;&quot; (&quot; &amp; _
				fsGetSetting(&quot;ooname&quot;) &amp; _
				&quot; &quot; &amp; chr(8211) &amp; &quot; &quot; &amp; _
				fsLookUpTerm(&quot;s_read-text&quot;) &amp; _
				&quot;)&quot;&quot;, sLyrics)&quot;, _
				&quot;&quot;), _
 				CR)
		if bGotFFmpeg then
			sB = sB &amp; Join(_
					Array(_
					&quot;				else&quot;, _
					&quot;					set err1 to &quot;&quot;ffmpeg &quot;&quot; &amp; astring &amp; &quot;&quot; encode&quot;&quot;&quot;, _
					&quot;					set b to (do shell script doPostProcess)&quot;, _
					&quot;					if doPostProcess2 is not &quot;&quot;&quot;&quot; then&quot;, _
					&quot;						set err1 to &quot;&quot;ffmpeg [2] &quot;&quot; &amp; astring &amp; &quot;&quot; encode&quot;&quot;&quot;, _
					&quot;						set b to (do shell script doPostProcess2)&quot;, _
					&quot;						set c to (do shell script &quot;&quot;rm -f &apos;&quot;&quot; &amp; cout2 &amp; &quot;&quot;&apos;&quot;&quot;)&quot;, _
					&quot;					end if&quot;, _
					&quot;					set c to (do shell script &quot;&quot;rm -f &apos;&quot;&quot; &amp; argv1 &amp; &quot;&quot;&apos;&quot;&quot;)&quot;, _
					&quot;					set argv1 to cout1&quot;, _
					&quot;&quot;), _
		 			CR)
		end if
		sB = sB &amp; Join(_
				Array(_
				&quot;				end if&quot;, _
				&quot;			end if&quot;, _
				&quot;			if bPostplay is true then&quot;, _
				&quot;				set d to (do shell script &quot;&quot;open &quot;&quot; &amp; quoted form of (argv1))&quot;, _
				&quot;			else&quot;, _
				&quot;				theMsg (argv1, myVoice, myLang, &quot;&quot;Purr&quot;&quot;)&quot;, _
				&quot;			end if&quot;, _
				&quot;		end if&quot;, _
				&quot;	on error&quot;, _
				&quot;	--	set b to (do shell script &quot;&quot;rm -f &quot;&quot; &amp; argv1)&quot;, _
				&quot;		if argv1 is not &quot;&quot;&quot;&quot; then&quot;, _
				&quot;			theMsg (err1 &amp; &quot;&quot;: &quot; &amp; fsLookUpTerm(&quot;s_cancel&quot;) &amp; &quot;&quot;&quot;, myVoice, myLang, &quot;&quot;Sosumi&quot;&quot;)&quot;, _
				&quot;		end if&quot;, _
				&quot;		return doPostProcess2&quot;, _
				&quot;		set b to (do shell script &quot;&quot;rm -f &apos;&quot;&quot; &amp; myLock &amp; &quot;&quot;&apos;&quot;&quot;)&quot;, _
				&quot;	end try&quot;, _
				&quot;	set b to (do shell script &quot;&quot;rm -f &apos;&quot;&quot; &amp; myLock &amp; &quot;&quot;&apos;&quot;&quot;)&quot;, _
				&quot;end run&quot;, _
				&quot;-- ------------------------------------------------------&quot;, _
				&quot;on theMsg(sA, sVoz, myLang, sBeep)&quot;, _
				&quot;	try&quot;, _
				&quot;		display notification sA with title &quot;&quot;Read Text: &quot;&quot; &amp; sVoz &amp; &quot;&quot; (&quot;&quot; &amp; myLang &amp; &quot;&quot;)&quot;&quot; sound name sBeep&quot;, _
				&quot;	end try&quot;, _
				&quot;end theMsg&quot;, _
				&quot;on getExtension(sA)&quot;, _
				&quot;	if sA is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;		set a3 to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	else&quot;, _
				&quot;		set a1 to theSplit(sA, &quot;&quot;.&quot;&quot;)&quot;, _
				&quot;		set s1 to the last item of a1&quot;, _
				&quot;		set a2 to theSplit(s1, &quot;&quot;&apos;&quot;&quot;)&quot;, _
				&quot;		set s2 to first item of a2&quot;, _
				&quot;		set a3 to theSplit(s2, &quot;&quot;\&quot;&quot;&quot;&quot;)&quot;, _
				&quot;		set s3 to first item of a3&quot;, _
				&quot;	end if&quot;, _
				&quot;	return a3 as Unicode text&quot;, _
				&quot;end getExtension&quot;, _
				&quot;on theSplit(theString, theDelimiter)&quot;, _
				&quot;	set oldDelimiters to AppleScript&apos;s text item delimiters&quot;, _
				&quot;	set AppleScript&apos;s text item delimiters to theDelimiter&quot;, _
				&quot;	set theArray to every text item of theString&quot;, _
				&quot;	set AppleScript&apos;s text item delimiters to oldDelimiters&quot;, _
				&quot;	return theArray&quot;, _
				&quot;end theSplit&quot;, _
				&quot;on extractVoice(str0)&quot;, _
				&quot;	set iIndex to offset of &quot;&quot;  &quot;&quot; in str0&quot;, _
				&quot;	return characters 1 thru (iIndex - 1) of str0 as text&quot;, _
				&quot;end extractVoice&quot;, _
				&quot;on isInString(str0, str1)&quot;, _
				&quot;	set retval to true&quot;, _
				&quot;	set iIndex to offset of str1 in str0&quot;, _
				&quot;	if iIndex is 0 then&quot;, _
				&quot;		set retval to False&quot;, _
				&quot;	end if&quot;, _
				&quot;	return retval&quot;, _
				&quot;end isInString&quot;, _
				&quot;on fsChangecase ( s1 , s2 )&quot;, _
				&quot;	if s2 is &quot;&quot;lower&quot;&quot; then&quot;, _
				&quot;		set s3 to &quot;&quot;A-Z a-z&quot;&quot;&quot;, _
				&quot;	else&quot;, _
				&quot;		set s3 to &quot;&quot;a-z A-Z&quot;&quot;&quot;, _
				&quot;	end if&quot;, _
				&quot;	set s4 to (do shell script &quot;&quot;echo &quot;&quot; &amp; quoted form of ( s1 ) &amp; &quot;&quot; | tr &quot;&quot; &amp; s3 &amp; &quot;&quot; &quot;&quot;)&quot;, _
				&quot;	return s4&quot;, _
				&quot;end fsChangecase&quot;, _
				&quot;on testTheString(myArray, sLang, sDiv)&quot;, _
				&quot;	set retval to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	if sDiv is &quot;&quot; &quot;&quot; then&quot;, _
				&quot;		set sLang2 to sLang&quot;, _
				&quot;	else&quot;, _
				&quot;		set iIndex to offset of sDiv in sLang&quot;, _
				&quot;		set sLang2 to characters 1 thru (iIndex) of sLang as text&quot;, _
				&quot;	end if&quot;, _
				&quot;	repeat with theItem in myArray&quot;, _
				&quot;		if (isInString(theItem, sLang2)) then&quot;, _
				&quot;			set retval to extractVoice(theItem)&quot;, _
				&quot;			exit repeat&quot;, _
				&quot;		end if&quot;, _
				&quot;	end repeat&quot;, _
				&quot;	return retval&quot;, _
				&quot;end testTheString&quot;, _
				&quot;on fsGetthevoice(sLang)&quot;, _
				&quot;	try&quot;, _
				&quot;		set str0 to (do shell script &quot;&quot;say --voice ?&quot;&quot;)&quot;, _
				&quot;		set myArray to my theSplit(str0, (ASCII character 13))&quot;, _
				&quot;		set retval to testTheString(myArray, sLang, &quot;&quot; &quot;&quot;)&quot;, _
				&quot;		if retval is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;			set retval to testTheString(myArray, sLang, &quot;&quot;_&quot;&quot;)&quot;, _
				&quot;		end if&quot;, _
				&quot;		if retval is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;			set retval to testTheString(myArray, sLang, &quot;&quot;-&quot;&quot;)&quot;, _
				&quot;		end if&quot;, _
				&quot;		if retval is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;			set retval to &quot;&quot;Alex&quot;&quot;&quot;, _
				&quot;		end if&quot;, _
				&quot;	on error&quot;, _
				&quot;		set retval to &quot;&quot;Alex&quot;&quot;&quot;, _
				&quot;	end try&quot;, _
				&quot;	if retval is &quot;&quot;Agnes&quot;&quot; or retval is &quot;&quot;Albert&quot;&quot; or retval is &quot;&quot;&quot;&quot; then&quot;, _
				&quot;		set retval to &quot;&quot;Alex&quot;&quot;&quot;, _
				&quot;	end if&quot;, _
				&quot;	return retval&quot;, _
				&quot;end fsGetthevoice&quot;, _
				&quot;on setItunesMetaData(myURL, sAlbum, sArtist, sGenre, sImageURL, sTitle, sTrack, sYear, sComment, sLyrics)&quot;, _
				&quot;	set aFile to POSIX file myURL&quot;, _
				&quot;	try&quot;, _
				&quot;		set aImage to POSIX file sImageURL&quot;, _
				&quot;	end try&quot;, _
				&quot;	set currentAlbum to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	set sTaggedURL to &quot;&quot;&quot;&quot;&quot;, _
				&quot;	set n to 0&quot;, _
				&quot;	if length of sLyrics is 0 then&quot;, _
				&quot;		delay 0.400&quot;, _
				&quot;	else&quot;, _
				&quot;		delay 0.250&quot;, _		
				&quot;	end if&quot;, _
				&quot;	tell application &quot;&quot;iTunes&quot;&quot;&quot;, _
				&quot;		set myTune to open (aFile)&quot;, _
				&quot;		try&quot;, _
				&quot;			set x to CheckiTunesOK()&quot;, _
				&quot;		end try&quot;, _
				&quot;		set str0 to (do shell script &quot;&quot;ls &quot;&quot; &amp; quoted form of sImageURL)&quot;, _
				&quot;		repeat while currentAlbum is &quot;&quot;&quot;&quot; and n is less than 10&quot;, _
				&quot;		delay 1&quot;, _
				&quot;			try&quot;, _
				&quot;				set the album of the current track to sAlbum&quot;, _
				&quot;				set currentAlbum to the album of the current track&quot;, _
				&quot;			end try&quot;, _
				&quot;			set n to 1 + n&quot;, _
				&quot;		end repeat&quot;, _
				&quot;		set theTrack to the current track&quot;, _
				&quot;		try&quot;, _
				&quot;			set the artist of theTrack to sArtist&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the genre of theTrack to sGenre&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the track number of theTrack to sTrack&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the year of theTrack to sYear&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _	
				&quot;			set data of artwork 1 of theTrack to (read (file aImage) as picture)&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the name of theTrack to sTitle&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set sTaggedURL to quoted form of POSIX path of (get location of theTrack)&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the comment of theTrack to sComment&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set the lyrics of theTrack to sLyrics&quot;, _
				&quot;		end try&quot;, _
				&quot;		try&quot;, _
				&quot;			set myURL to quoted form of POSIX path of aFile&quot;, _
				&quot;			set str0 to (do shell script &quot;&quot;cp -f &quot;&quot; &amp; sTaggedURL &amp; &quot;&quot; &quot;&quot; &amp; myURL)&quot;, _
				&quot;		on error&quot;, _
				&quot;			set sTaggedURL to quoted form of myURL&quot;, _
				&quot;		end try&quot;, _
				&quot;	end tell&quot;, _
				&quot;	return sTaggedURL&quot;, _
				&quot;end setItunesMetaData&quot;, _
				&quot;on readUtf8File(sURL)&quot;, _
				&quot;	set x to read POSIX file sURL as &quot; &amp; chr(171) &amp; &quot;class utf8&quot; &amp; chr(187), _
				&quot;	return x&quot;, _
				&quot;end readUtf8File&quot;, _
				&quot;on RemoveLastCharacter(s1)&quot;, _
				&quot;	set s4 to (do shell script &quot;&quot;echo &quot;&quot; &amp; quoted form of (s1) &amp; &quot;&quot; | sed &apos;s/.$//&apos;&quot;&quot;)&quot;, _
				&quot;	return s4&quot;, _
				&quot;end RemoveLastCharacter&quot;, _
				&quot;on CheckiTunesOK()&quot;, _
				&quot;	-- Pause up to 30 seconds or until iTunes is an active process&quot;, _
		 		&quot;	set b4 to False&quot;, _
		  		&quot;	set n to 0&quot;, _
				&quot;	try&quot;, _
				&quot;		repeat while b4 is False and n is less than 30&quot;, _
				&quot;			set s4 to (do shell script &quot;&quot;ps aux -c&quot;&quot;)&quot;, _
				&quot;			-- ignore iTunesHelper&quot;, _
		 		&quot;			set b4 to isInString(s4, &quot;&quot;iTunes&quot;&quot; &amp; (ASCII character 13))&quot;, _
				&quot;			set n to 1 + n&quot;, _
		 		&quot;			if b4 is False then&quot;, _
				&quot;				delay 1&quot;, _
		 		&quot;			end if&quot;, _
				&quot;		end repeat&quot;, _
				&quot;	on error&quot;, _
		 		&quot;		set b4 to False&quot;, _
				&quot;	end	try&quot;, _
				&quot;	return b4&quot;, _
				&quot;end CheckiTunesOK&quot;, _
				&quot;&quot;), _
 				CR)
	sFile=fsTemporaryTtsAppleScript
	CreateFile(sFile,sB,&quot;utf-8&quot;)
	fswriteOSXSpeechScript = sB
end function


function fsTemporaryTtsAppleScript()
	dim sA as string

	sA=createUnoService(&quot;com.sun.star.util.PathSettings&quot;).userConfig &amp; _
			&quot;/readaloud.applescript&quot;
	fsTemporaryTtsAppleScript=ConvertFromURL(sA)
end function


function CreateFile(_
		sFilePath, _
		sWriteString, _
		Optional sEncoding)
	&apos; CreateFile(&quot;/tmp/sample.txt&quot;,&quot;Hello world&quot;,&quot;utf-8&quot;) &apos; Best practice
	&apos; CreateFile(&quot;/tmp/sample.txt&quot;,&quot;Hello world&quot;) &apos; is allowed, but not best
	&apos; practice.
	&apos;
	&apos; Windows can not write Asian languages correctly with &quot;iso-8859-15&quot;
	&apos; Anything written for the extension&apos;s private use should be &quot;utf-8&quot;
	&apos; This sub will create the file and all the nested directories
	&apos; in the path in a single step.
 	dim CR as string
	dim oOutputAccess As Object
	dim oOutputStream As Object
	dim vOutputData, UDP, PV as variant	
	
	CR = chr(13)
	if ismissing(sEncoding) then
		select case fsGetOS()
		case &quot;WINDOWS&quot;
			sEncoding = &quot;iso-8859-15&quot; &apos;iso-8859-15 is Windows &quot;western&quot; encoding
		case else
			sEncoding = &quot;utf-8&quot; &apos; Posix standard
		end select
	end if
	on Error goto CreateFileError
	if fileexists(sFilePath) then
		kill sFilePath
	end if
	oOutputAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oOutputStream = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	vOutputData  = oOutputAccess.openFileWrite( sFilePath )
	oOutputStream.setOutputStream(vOutputData)
	oOutputStream.setEncoding(sEncoding)
	oOutputStream.writeString( sWriteString )
	oOutputStream.flush()
	oOutputStream.closeOutput()
	CreateFile = True
	exit function
	CreateFileError:
	CreateFile = False
end function


function fbIsAnURL(_
		sA)
	if instr(sA, &quot;http:&quot;) = 1 then
		fbIsAnURL = True
	elseif instr(sA, &quot;ftp:&quot;) = 1 then
		fbIsAnURL = True
	elseif instr(sA, &quot;https:&quot;) = 1 then
		fbIsAnURL = True
	elseif instr(sA, &quot;ftps:&quot;) = 1 then
		fbIsAnURL = True
	elseif instr(sA, &quot;mailto:&quot;) = 1 then
		fbIsAnURL = True
	else
		fbIsAnURL = False
	end if
end function


sub WarnNoSpeech()
	dim s1 as string

	s1 = fsLookUpTerm(&quot;s_speech-synthesis&quot;)
	on error goto WarnNoSpeechErr
	if (6 = msgbox(s1 &amp; _
				chr(10) &amp; _
				string(len(s1), &quot;=&quot;) &amp; _
				chr(10) &amp; _				
				chr(10) &amp; _
				&quot;  &quot; &amp; fsLookUpTerm(_
				&quot;s_could-not-locate-the-program&quot;) &amp; _
				chr(10) &amp; _
				&quot;  &quot; &amp; fsLookUpTerm( &quot;s_on-line-help&quot;) &amp; _
				&quot;?&quot; , 68, fsLookUpTerm( &quot;s_read-text&quot;) )) then
		select case fsGetOS()
		case &quot;WINDOWS&quot;
			webHelp(&quot;https://sites.google.com/site/readtextextension/home/microsoft-windows&quot;)
		case &quot;MAC&quot;,&quot;OSX&quot;
			webHelp(&quot;https://sites.google.com/site/readtextextension/home/apple-osx&quot;)
		case else
			select case environ(&quot;DESKTOP_SESSION&quot;)
			case &quot;debian&quot;
				webHelp(&quot;apt:espeak&quot;)
			case &quot;ubuntu&quot;
				select case fsGetLanguage()
				case &quot;de&quot;, &quot;en&quot;, &quot;es&quot;, &quot;fr&quot;, &quot;it&quot;
					webHelp(&quot;apt:libttspico-utils&quot;)
				case &quot;af&quot;
					webHelp(&quot;apt:mbrola-af1&quot;)
				case &quot;ca&quot;
					webHelp(&quot;apt:festvox-ca-ona-hts&quot;)
				case &quot;cs&quot;
					webHelp(&quot;apt:festvox-czech-machac&quot;)
				case &quot;el&quot;
					webHelp(&quot;apt:mbrola-gr1&quot;)
				case &quot;et&quot;
					webHelp(&quot;apt:mbrola-ee1&quot;)
				case &quot;fi&quot;
					webHelp(&quot;apt:festvox-suopuhe-mv&quot;)
				case &quot;hr&quot;
					webHelp(&quot;apt:mbrola-cr1&quot;)
				case &quot;hi&quot;
					webHelp(&quot;apt:festvox-hi-nsk&quot;)
				case &quot;hu&quot;
					webHelp(&quot;apt:mbrola-hu1&quot;)
				case &quot;id&quot;
					webHelp(&quot;apt:mbrola-id1&quot;)
				case &quot;la&quot;
					webHelp(&quot;apt:mbrola-la&quot;)
				case &quot;mr&quot;
					webHelp(&quot;apt:festvox-mr-nsk&quot;)
				case &quot;nl&quot;
					webHelp(&quot;apt:mbrola-nl2&quot;)
				case &quot;pl&quot;
					webHelp(&quot;apt:mbrola-pl1&quot;)
				case &quot;pt&quot;
					webHelp(&quot;apt:mbrola-br1&quot;)
				case &quot;ro&quot;
					webHelp(&quot;apt:mbrola-ro1&quot;)
				case &quot;ru&quot;
					webHelp(&quot;apt:festvox-ru&quot;)
				case &quot;sv&quot;
					webHelp(&quot;apt:mbrola-sw1&quot;)
				case &quot;te&quot;
					webHelp(&quot;apt:festvox-te-nsk&quot;)
				case else
					webHelp(&quot;apt:espeak&quot;)
				end select
			case else
				webHelp()
			end select
		end select
	end if
	exit sub
	WarnNoSpeechErr:
	webHelp()
end sub


sub CheckUnixSpeech()
	&apos; Linux may not include a speech synthesiser by default.
	&apos; Check the first time the application runs.
	if fsGetOS() = &quot;UNIX&quot; then
		if not(fileexists(fsFullPathOf(fsExtensionSettingsIni))) then
			if not(fileexists(&quot;/usr/bin/espeak&quot;)) then
				if not(fileexists(&quot;/usr/bin/festival&quot;)) then
					if not(fileexists(&quot;/usr/bin/pico2wave&quot;)) then
						if not(fileexists(&quot;/usr/bin/spd-say&quot;)) then
							WarnNoSpeech
						end if
					end if
				end if
			end if
		end if
	end if
end sub


function fbHaveFfmpeg()
	fbHaveFfmpeg = not (fsMyFfmpeg() =&quot;&quot;)
end function


function fsMyFfmpeg()
&apos;&apos;
&apos;&apos; FFmpeg
&apos;&apos; ------
&apos;&apos;
&apos;&apos; [FFmpeg](https://www.ffmpeg.org) is a general purpose command 
&apos;&apos; line video, graphic and sound converter for Linux, OSX, UNIX and 
&apos;&apos; Windows.  Read Text can use it to convert speech recordings
&apos;&apos; to different formats.
&apos;&apos;
&apos;&apos; [AVconv](https://libav.org/avconv.html) is a *fork* of FFmpeg, and shares many
&apos;&apos;  of the same commands and capabilities.  On [Ubuntu Linux](https://ubuntu.com),
&apos;&apos; the `avconv` project is included in the repository instead of `ffmpeg`. 
&apos;&apos; Read text can use either.
&apos;&apos;
&apos;&apos;     sudo apt-get install avconv
&apos;&apos;
	dim sProgramPaths, sWebURL, cR, sA, sB, sC, sD, sE as string
	dim aC, aD
	dim i as integer

	aC = array(&quot;ffmpeg&quot;,&quot;avconv&quot;)
	cR = chr$(10)
	sA = fsProgramDirectory()
	sB = fsProgramDirectoryx86()
	sProgramPaths = &quot;&quot;
	for i = lbound(aC) to ubound(aC)
		sProgramPaths = sProgramPaths &amp; &quot;file:///usr/bin/&quot; &amp; aC(i) &amp; cR &amp; _
		&quot;file:///Applications/Shotcut.app/Contents/MacOS/&quot; &amp; aC(i) &amp; cR &amp; _
		converttourl(environ(&quot;HOMEDRIVE&quot;)) &amp; &quot;/opt/&quot; &amp; aC(i) &amp; &quot;.exe&quot; &amp; cR &amp; _
		converttourl(environ(&quot;USERPROFILE&quot;)) &amp; &quot;/opt/&quot; &amp; aC(i) &amp; &quot;.exe&quot; &amp; cR &amp; _
		&quot;file:///usr/local/bin/&quot; &amp; aC(i) &amp; cR &amp; _
		&quot;file:///opt/&quot; &amp; aC(i) &amp; cR &amp; _
		&quot;file:///opt/local/&quot; &amp; aC(i) &amp; cR &amp; _
		&quot;file:///opt/Shotcut/Shotcut.app/bin/&quot; &amp; aC(i) &amp; cR
		&apos; &quot;---END OF CR SEPARATED LIST---&quot;
	next
	aD= split(fsSuperTrim(sProgramPaths), cR)
	sE = &quot;&quot;
	for i = lbound(aD) to ubound(aD)
		if fileexists(aD(i)) then
			sE = (aD(i))
			exit for
		end if
	next
	fsMyFfmpeg = convertfromurl(sE)
end function


sub resetSpeechDispatcher(_
		optional bAll as boolean)
&apos;&apos; # Stopping Speech
&apos;&apos; 
&apos;&apos; To stop speech, click the Read selection button while the voice is 
&apos;&apos; speaking.
&apos;&apos;
&apos;&apos; Windows
&apos;&apos; -------
&apos;&apos; 
&apos;&apos; Stopping the speech is handled in the external script.
&apos;&apos;
&apos;&apos; OSX
&apos;&apos; ---
&apos;&apos;
&apos;&apos; Stopping the speech is handled in the `resetSpeechDispatcher` procedure
&apos;&apos; in the TTS Utilities module of the extension.
&apos;&apos;
&apos;&apos; Linux
&apos;&apos; -----
&apos;&apos;
&apos;&apos; Stopping the speech is handled in the `resetSpeechDispatcher` procedure
&apos;&apos; in the TTS Utilities module of the extension.
&apos;&apos;
&apos;&apos; **Speech Dispatcher** is an optional speech manager for Linux.  It isn&apos;t
&apos;&apos; needed for read text extension.
&apos;&apos;
&apos;&apos; You can manually edit the speech-dispatcher settings files to use specific 
&apos;&apos; speech engines for different languages.  for example, you could set
&apos;&apos; up English and Spanish to use pico and Catalan to use festival. 
&apos;&apos; if the speech dispatcher voice becomes distorted or stops working,
&apos;&apos; you can try resetting it using `killall speech-dispatcher`,
&apos;&apos; or by logging out and logging in again.  Specific voice settings
&apos;&apos; are in the extension&apos;s main menu dialogue.
&apos;&apos; 
&apos;&apos; [Speech-dispatcher help][fvTts1]
&apos;&apos;
&apos;&apos; To install speech-dispatcher, use:
&apos;&apos;
&apos;&apos;     sudo apt-get install speech-dispatcher
&apos;&apos;
&apos;&apos; [fvTts1]: https://www.unix.com/man-page/all/1/speech-dispatcher/
&apos;&apos;
	dim a1
	dim i# : i = 0
	dim errorCode
	dim oBar
	dim oFrame
	dim sTemp

	if ismissing(bAll) then
		bAll = False
	end if
	On Error Resume Next
	oFrame=ThisComponent.getCurrentController().getFrame() 
	oBar=oFrame.createStatusIndicator() 
	oBar.start(fsLookUpTerm( &quot;s_read-text&quot;, fsGetLanguage()),100)
	oBar.Value=70
	On Error Goto resetSpeechDispatcherErr
	if fsGetOS()=&quot;WINDOWS&quot; then
		if fileexists(fsMyTempLock) then
			kill fsMyTempLock
		end if
	elseif fsGetOS()=&quot;OSX&quot; or fsGetOS = &quot;MAC&quot; then
		if fileexists(&quot;/usr/bin/say&quot;) then
			if not (fbCreatingOSXMediaFile) and not (fbSendingAirPlay) then
				if fileexists(&quot;/usr/bin/killall&quot;) or fileexists(&quot;/usr/local/bin/killall&quot;) then
					errorCode=Shell(&quot;killall&quot;,0,&quot;say&quot;,true)
				end if
				if fileexists(fsMyTempLock) then
					kill fsMyTempLock
				end if
			end if
		end if
	elseif fsGetOS()=&quot;UNIX&quot; and (_
			fileexists(_
			&quot;/usr/bin/killall&quot;) or _
			fileexists(_
			&quot;/usr/local/bin/killall&quot;)) then
		if fileexists(&quot;/usr/bin/spd-say&quot;) OR _
				fileexists(&quot;/usr/local/bin/spd-say&quot;) then
			if bAll then
				errorCode=Shell(&quot;killall&quot;,0,&quot;speech-dispatcher&quot;,true)
			else
				errorCode=Shell(&quot;spd-say&quot;,0,&quot;--cancel&quot;,true)
			end if
		end if

		if not (fbLetButtonInterruptPosixPlayer) OR fbUsingPosixTalkProgram then
			&apos; Stop the sound.
			&apos; Check players before synthesizers.
			a1 = Array(_
					&quot;gst-launch-1.0&quot;,_
					&quot;aplay&quot;,_
					&quot;artsplay&quot;,_
					&quot;esdplay&quot;,_
					&quot;ossplay&quot;,_
					&quot;paplay&quot;,_
					&quot;play&quot;,_
					&quot;roarcat&quot;,_
					&quot;roarcatplay&quot;,_
					&quot;espeak&quot;,_
					&quot;festival&quot;,_
					&quot;padsp&quot;,_
					&quot;pico2wave&quot;,_
					&quot;say&quot;,_
					&quot;text2wave&quot;)
			for i = lbound(a1) to ubound(a1)
				if fileexists(&quot;/usr/bin/&quot; &amp; a1(i)) OR _
						fileexists(&quot;/usr/local/bin/&quot; &amp; a1(i)) then
					errorCode=Shell(&quot;killall&quot;,0,a1(i),true)
				end if			
			Next
		end if
		if fileexists(fsMyTempLock) then
			kill fsMyTempLock
		end if
		if fileexists(fsFullPathOf(fsTemporaryTextDoc) &amp; &quot;.sable&quot;) then
			kill fsFullPathOf(fsTemporaryTextDoc) &amp; &quot;.sable&quot;
		end if
	end if
	if fileexists(fsFullPathOf(fsTemporaryTextDoc)) then
		kill fsFullPathOf(fsTemporaryTextDoc)
	end if
	On Error Resume Next
	oBar.end()
	Exit sub
	resetSpeechDispatcherErr:
end sub


function fbLetButtonInterruptPosixPlayer()
	dim b1 as boolean

	b1 = False
	&apos; don&apos;t interrupt if we are writing a media file
	b1 = fbCreatingMediaFile(&quot;.3gp,.aac,.aif,.aiff,.alsa,.ape,.asf,.au,.avi,.caf,.dts,.flac,&quot; &amp; _
			&quot;.m4a,.mp2,.mp3,.mp4,.mpeg,.oga,.ogg,.ogm,.ogv,.oma,.opus,.riff,.rm,.smp,.snd,.sou,.spx,&quot; &amp; _
			&quot;.tta,.voc,.wav,.weba,.webm,.wma,.wmv,.wsaud&quot;)
	&apos; don&apos;t interrupt if we are using a graphical player.
	if fbCreatingMediaFile(_
			&quot;--visible=true,--visible=&apos;true&apos;,--visible=&quot;&quot;true&quot;&quot;&quot;) or _
			not (fbCreatingMediaFile(&quot;--visible=&quot;)) then
		b1 = False
	end if
	fbLetButtonInterruptPosixPlayer = b1
end function


function fbSendingAirPlay()
	fbSendingAirPlay = fbCreatingMediaFile(&quot;SAY_APPLESCRIPT_AIRPLAY,airplay&quot;)
end function


function fbCreatingOsxType2Media()
	&apos; We either didn&apos;t use ffmpeg or a compatible media player is missing.
	fbCreatingOsxType2Media = fbCreatingMediaFile(_
			&quot;.aif,.avi,.aiff,.flac,.m4a,.oga,.ogg,.ogv,.wav,.webm,.wma,.wmv&quot;)
end function


function fbCreatingOsxType1Media()
	&apos; ffmpeg adds metadata; we can open it immediately with an OSX application.
	fbCreatingOsxType1Media = fbCreatingMediaFile(&quot;.m4v,.mp3,.mp4&quot;)
end function


function fbCreatingOSXMediaFile()
	dim sA as string

	if fbHaveFfmpeg then
		sA = &quot;.mp3,.mp4,.ogg,.wav,.webm,&quot;
	else
		sA = &quot;&quot;
	end if
	fbCreatingOSXMediaFile = fbCreatingMediaFile(sA &amp; &quot;.aiff,.aif,.m4a&quot;)
end function


function fbCreatingMediaFile(_
		optional byval sA, _
		optional byVal sB)
	&apos; s2 is a csv string of media identifiers- for example, file extensions.
	&apos; config is a set of preferences. This function uses use config(5); the
	&apos; string in `Tools - Add-ons - Read Selection... - Command Line Options`
	&apos; You can test or simulate different command strings with sB. 
	dim sFile as string
	dim aA
	dim bTattle
	dim n as integer
	dim msgs()as variant
	dim errorCode as integer
	dim config(fiCountConfigOptions)as variant

	if ismissing(sA) then
		sA = &quot;.3gp,.aac,.aif,.aiff,.au,.avi,.flac,.m4a,.m4v,.mov,.mkv,.mp2,&quot; &amp; _
				&quot;.mp3,.mp4,.mpeg,.oga,.ogg,.ogm,.ogv,.wav,.webm,.wma,.wmv&quot;
	end if
	bTattle = False
	fbCreatingMediaFile = False
	sFile=fsFullPathOf(fsExtensionSettingsIni)
	tts_config_parseFile(sFile, config(), errorCode)
	if ismissing (sB) then
		sB = lcase(config(5))
	end if
	if bTattle then
		msgbox sB &amp; chr(10) &amp; sA
	end if
	if not(config(fiExternalOption)) then
	&apos; if the external option button in the main dialogue is not selected, then return
	&apos;     fbCreatingMediaFile = False
		exit function
	end if
	aA = split(lcase(sA), &quot;,&quot;)
	if len(sB) &lt;&gt; 0 then
		for n = lbound(aA) to ubound(aA)
			if aA(n) = &quot;&quot; then
				exit for
			elseif instr(sB, aA(n)) &gt; 0 then
				fbCreatingMediaFile = True
				exit for
			end if
		next
	end if
end function


function fbGoingOnline() 
	dim sFile as string
	dim errorCode as integer
	dim config(fiCountConfigOptions)as variant

	fbGoingOnline = False
	sFile=fsFullPathOf(fsExtensionSettingsIni)
	tts_config_parseFile(sFile, config(), errorCode)
	if config(fiHtmlOption) then
		fbGoingOnline = True
	end if
end function


function fsThisDocAuthor()
	dim s1 as string
	dim s2 as string

	on error goto fsThisDocAuthorErr
	s1 = ThisComponent.DocumentProperties.Author
	if len(trim(s1)) = 0 then
		s1 = fsGetThisUsers(&quot;fullname&quot;)
	end if
	if len(trim(s1)) = 0 then
	&apos; Fallback - system user name
		select case fsGetOS()
		case &quot;WINDOWS&quot;
			s1 = environ(&quot;USERNAME&quot;)
		case &quot;OSX&quot;
			s1 = environ(&quot;USERNAME&quot;)
		case else  &apos; UNIX
			s1 = environ(&quot;USER&quot;)
		end select
	end if
	&apos; Final fallback - extension name and version.
	if len(trim(s1)) = 0 then
		s1 = fsLookUpTerm( &quot;s_read-text&quot;) &amp; &quot; &quot; &amp; _
				fsExtensionVersion()
	end if
	fsThisDocAuthor = fsSmarten(fsQuickTitle(12, 60, s1))
	exit function
	fsThisDocAuthorErr:
	fsThisDocAuthor = fsLookUpTerm( &quot;s_read-text&quot;)
end function


function fsGetThisUsers(_
		optional cType as string)
&apos;&apos;
&apos;&apos; # Your personal information
&apos;&apos;
&apos;&apos; Extensions run in the **trusted zone**.  All extensions have access to the
&apos;&apos; information that you entered into *Tools - Options - User Data*.  Read Text 
&apos;&apos; extension uses your first and last name to provide *artist* information to
&apos;&apos; sound or video files that you create only if the original author of a document 
&apos;&apos; is ambiguous or missing.
&apos;&apos;
&apos;&apos; Where is your personal information stored?
&apos;&apos; ------------------------------------------
&apos;&apos;
&apos;&apos; Apache OpenOffice and LibreOffice store the personal information in a registry
&apos;&apos; file, coded in xml format in a UTF-8 text document.  You can review the data
&apos;&apos; in the file, `&lt;&lt;OOo-Profile/3/user/registry/data&gt;&gt; /org/openoffice/UserProfile.xcu`.
&apos;&apos; The information is located in the XML-node labelled *Data*.  Find out more
&apos;&apos; at the [Apache OpenOffice forum][FGTU1].
&apos;&apos;
&apos;&apos; Depending on your office application and version, you may be able to uncheck
&apos;&apos; a box labelled *Use data for document properties* in the *User Data* dialogue.
&apos;&apos;
&apos;&apos; [FGTU1]: http://forum.openoffice.org/en/forum/viewtopic.php?f=20&amp;t=14750
&apos;&apos;
	const sNodePath$ = &quot;/org.openoffice.UserProfile/Data&quot;
	dim oNode
	dim snval
	dim gnval
	dim ival
	dim sFullname  &apos; We combine your first and last names.

	if not globalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) then
		globalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	end if
	if ismissing(cType) then
		cType = &quot;fn&quot;
	end if
	oNode = foGetOOoSetupNode(sNodePath$)
	snval = oNode.getByName(&quot;sn&quot;)
	gnval = oNode.getByName(&quot;givenname&quot;)
	select case fsGetSetting(&quot;language&quot;)
	case &quot;zh&quot;, &quot;jp&quot;, &quot;ja&quot;, &quot;yu&quot;, &quot;ko&quot; &apos;Asian
		sFullname = snval &amp; gnval 
	case else
		sFullname = gnval &amp; &quot; &quot; &amp; snval
	end select
	select case cType
	case &quot;fn&quot;, &quot;fullname&quot;
		fsGetThisUsers = sFullname
	case &quot;c&quot;, &quot;country&quot; &apos; region (province or state and country)
		fsGetThisUsers = oNode.getByName(&quot;c&quot;)
	case &quot;facsimiletelephonenumber&quot;
		fsGetThisUsers = oNode.getByName(&quot;facsimiletelephonenumber&quot;)		
	case &quot;givenname&quot;, &quot;gn&quot;
		fsGetThisUsers = oNode.getByName(&quot;givenname&quot;)		
	case &quot;homephone&quot;
		fsGetThisUsers = oNode.getByName(&quot;homephone&quot;)		
	case &quot;initials&quot;
		fsGetThisUsers = oNode.getByName(&quot;initials&quot;)		
	case &quot;l&quot;, &quot;city&quot;
		fsGetThisUsers = oNode.getByName(&quot;l&quot;)		
	case &quot;mail&quot;, &quot;email&quot;
		fsGetThisUsers = oNode.getByName(&quot;mail&quot;)		
	case &quot;o&quot;, &quot;organization&quot;
		fsGetThisUsers = oNode.getByName(&quot;o&quot;)		
	case &quot;position&quot;
		fsGetThisUsers = oNode.getByName(&quot;position&quot;)		
	case &quot;postalcode&quot;, &quot;zipcode&quot;
		fsGetThisUsers = oNode.getByName(&quot;postalcode&quot;)		
	case &quot;sn&quot;, &quot;surname&quot;
		fsGetThisUsers = oNode.getByName(&quot;sn&quot;)		
	case &quot;st&quot;, &quot;state&quot;, &quot;province&quot;
		fsGetThisUsers = oNode.getByName(&quot;st&quot;)		
	case &quot;street&quot;, &quot;address&quot;
		fsGetThisUsers = oNode.getByName(&quot;street&quot;)
	case &quot;telephonenumber&quot;, &quot;workphone&quot;
		fsGetThisUsers = oNode.getByName(&quot;telephonenumber&quot;)	
	case &quot;title&quot;
		fsGetThisUsers = oNode.getByName(&quot;title&quot;)
	case else
		fsGetThisUsers = &quot;&quot;
	end select
end function


function fsThisSoundTitle()
	dim s1 as string
	
	on error goto fsThisSoundTitleErr
	s1 = fsTrimSpecial(fsQuickTitle(6, 60), chr(13) &amp; chr(10) &amp; &quot;`#&gt;_ &quot;)
	fsThisSoundTitle = fsSmarten(s1)
	exit function
	fsThisSoundTitleErr:
	fsThisSoundTitle = &quot;&quot;
end function


function fsThisSoundLyrics()
	dim s1 as string
	
	on error goto fsThisSoundLyricsErr
	&apos; Field does not appear to have a published limit, but as sanity check,
	&apos; set a 700 word 5000 character limit - a news article or a two page
	&apos; essay.
	
	s1 = fsGetTextSelection(False, False)
	select case  fsGetOS()
	case &quot;OSX&quot;, &quot;MAC&quot;
		s1 = fsReplaceText(s1, &quot;[[slnc 400]]&quot;, &quot;&quot;)
	end select
	s1 = fsSupertrim(s1)
	s1 = trim(s1)
	s1 = fsReplaceText(s1, chr(10), &quot;\n&quot;)
	s1 = fsQuickTitle(700, 5000, s1)
	fsThisSoundLyrics = fsSmarten(s1)
	exit function
	fsThisSoundLyricsErr:
	fsThisSoundLyrics = &quot;&quot;
end function


function fsThisDocTitle()
	dim sA, sB, sC as string

	on error goto fsThisDocTitleErr
	if not globalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) then
		globalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	end if
	sC = ThisComponent.DocumentProperties.Title
	if len(sC) = 0 then
		sA = ThisComponent.getURL()
		sC = GetFileNameWithoutExtension(FileNameoutofPath(sA))
	end if
	fsThisDocTitle = fsSuperTrim(sC)
	exit function
	fsThisDocTitleErr:
	fsThisDocTitle = fsGetSetting(&quot;ooname&quot;) &amp; _
			&quot; - &quot; &amp; _
			fsLookUpTerm(&quot;s_speech-synthesis&quot;)
end function


function fsViewAndEditEscapedText(_
		optional byval sA)
	if ismissing(sA) then
		sA = fsThisDocTitle
	end if
	fsViewAndEditEscapedText = inputbox(sA, _
			&quot;Test&quot;, _
			fsEscapeStr(fsThisDocTitle, true))
end function


function fsThisDocGenre()
	dim sA, sB as string
	
	on error goto fsThisDocGenreErr
	sA = fsLookUpTerm( &quot;s_speech-synthesis&quot; )
	if fsGetLanguage = fsSelectionLanguage() then
		sB = &quot;&quot;
	else
		if fsGetLanguage() = &quot;en&quot; then
			&apos; Use language and region
			sB = isoToEnglish( fsSelectionLanguage &amp; &quot;-&quot; &amp; fsSelectionCountry)
		else
			&apos; Use lookup table for language
			&apos; Use language and region for Traditional Chinese (zh-TW)
			&apos; and Simplified Chinese (zh-CN)
			sB = fsLookUpTerm(fsSelectionLanguage())
		end if
	end if
	if len(sB) = 0 then
		fsThisDocGenre = sA
	else
		fsThisDocGenre = sA &amp; &quot; &quot; &amp; chr(2014) &amp; &quot; &quot; &amp; sB  &apos; mdash;
	end if
	exit function
	fsThisDocGenreErr:
	fsThisDocGenre = &quot;Speech&quot;
end function


function fsSmarten(_
		byval a, _
		optional sCheckCode)
	&apos; Prepare text for printed appearance - smart quotes
	&apos; em-dashes etc.  Optionally, manipulate string
	&apos; for system or functional requirements. 
	dim CR, b, c, d as string
	dim aB,aC,aD
	dim i, j as integer
	
	if ismissing(sCheckCode) then
		sCheckCode = fsGetOS()
	end if
	CR = chr$(10)
	aB = array(chr(13), _
			chr(45), _
			chr(42), _
			chr(95), _
			chr(8211), _
			chr(8212), _
			chr(40), _
			chr(41), _
			chr(91), _
			chr(93), _
			chr(32), _
			chr(10), _
			chr(9))
	a = &quot; &quot; &amp; a
	&apos; opening single quotes
	for i = lbound(aB) to ubound(aB)
		a = fsReplaceText(a, aB(i) &amp; &quot;&apos;&quot;, aB(i) &amp; &quot;‘&quot;)
	next
	&apos; closing single quotes &amp; apostrophes
	a = fsReplaceText(a, &quot;&apos;&quot;, &quot;’&quot; )
	&apos; opening double quotes
	a = fsReplaceText(a, &quot;‘&quot;&quot;&quot;, &quot;‘“&quot; )
	for i = lbound(aB) to ubound(aB)
		a = fsReplaceText(a, aB(i) &amp; &quot;&quot;&quot;&quot;, aB(i) &amp; &quot;“&quot;)
	next
	&apos; closing double quotes
	a = fsReplaceText(a, &quot;&quot;&quot;&quot;, &quot;”&quot; )
	&apos; horizontal ellipsis
	a = fsReplaceText(a, &quot;...&quot;, &quot;…&quot; )
	&apos; fractions, copyright, em-dashes
	&apos; &quot;¼,½,¾,⅓,⅔,⅛,⅜,⅝,⅞,©,—,—&quot;
	aC = array(_
			chr(188), _
			chr(189), _
			chr(190), _
			chr(8531), _
			chr(8532), _
			chr(8539), _
			chr(8540), _
			chr(8541), _
			chr(8542), _
			chr(169), _
			chr(8211), _
			chr(8212))
	aD = array(_
			&quot;1/4&quot;, _
			&quot;1/2&quot;, _
			&quot;3/4&quot;, _
			&quot;1/3&quot;, _
			&quot;2/3&quot;, _
			&quot;1/8&quot;, _
			&quot;3/8&quot;, _
			&quot;5/8&quot;, _
			&quot;7/8&quot;, _
			&quot;(c)&quot;, _
			&quot;--&quot;, _
			&quot;---&quot;)
	for j = lbound(aC) to ubound(aC)
		for i = lbound(aB) to ubound(aB)
			a = fsReplaceText(_
					a, _
					&quot; &quot; &amp; aD(j) &amp; aB(i), _
					&quot; &quot; &amp; aC(j) &amp; aB(i))
		next
	next
	select case sCheckCode
	case &quot;OSX&quot;, &quot;MAC&quot;
		&apos; Remove speech code and alter Markdown emphasis markers
		&apos; and characters that could be interpreted as osascript
		a = fsReplaceText(a, &quot;[[slnc 400]]&quot;, &quot;&quot;)
		a = fsReplaceText(a, &quot;--&quot;, &quot;  &quot;)
		a = fsReplaceText(a, &quot;**)&quot;, &quot;__)&quot;)
		a = fsReplaceText(a, &quot;(**&quot;, &quot;(__&quot;)
		a = fsReplaceText(a, &quot;*)&quot;, &quot;_)&quot;)
		a = fsReplaceText(a, &quot;(*&quot;, &quot;(_&quot;)
		a = fsReplaceText(a, &quot;«&quot;, &quot;”&quot;)
		a = fsReplaceText(a, &quot;»&quot;, &quot;“&quot;)
	case &quot;WEB&quot;
		a = fsEscapeStr(a)
	case else
		&apos; Add function specific manipulations
	end select
	fsSmarten = rtrim(_
			right(_
			a, _
			len(a)-1))
end function


function fsQuickTitle(_
		optional iWords, _
		optional iMaxLength, _
		optional sText)
	&apos; Returns the first words of the selected string
	dim s1, s2, s3, s4, CR as string
	dim a1, a2, a3, a4
	dim n as integer
	
	if ismissing(iWords) then
		iWords = 6
	end if
	if ismissing(iMaxLength) then
	iMaxLength = 30
	end if
	if ismissing(sText) then
		a4 = split(fsGetTextSelection(true, False), chr(10))
		sText = a4(lbound(a4))
	end if
	on error goto fsQuickTitleErr
	if fsComplexAsiaOrWest(sText) = &quot;ASIA&quot; then	
		&apos; Use the greater of word count or string length.
		&apos; We need to assess Asian text differently.
		&apos; Asian text might not contain spaces or
		&apos; the `split(s1, s2)` function may not give an
		&apos; accurate ubound value when the second
		&apos; argument (`s2`) is Asian.
		s3 = trim(sText)
		if iMaxLength &gt; iWords then
			n = iMaxLength
		else
			n = iWords
		end if
		if len(s3) &gt; n then
			fsQuickTitle = left(s3, n)
		else
			fsQuickTitle = s3
		end if
	else
		&apos; We avoid splitting in the middle of a word.
		s1 = sText
		s2 = &quot;&quot;
		s3 = &quot;&quot;
		s4 = &quot;&quot;
		CR = chr$(10)
		if len(sText) = 0 then
			s2 = &quot;&quot;
		else
			s4 = s1
			a3 = split(s4, CR)
			for n = lbound(a3) to ubound(a3)
				if len(a3(n)) &gt; 1 and not(fbMdCode(a3(n))) then
					s1 = a3(n)
					exit for
				end if
			next
			s2 = &quot;&quot;
			a1 = split(s1, &quot; &quot;)
			for n = lbound(a1) to iWords + 1
				s1 = s1 &amp; &quot; &quot; &amp; chr$(13)
			next n
			a2 = split(s1, &quot; &quot;)
			for n = lbound(a2) to iWords - 1
				s3 = s3 &amp; a2(n) &amp; &quot; &quot;
					if len(s3) &gt; iMaxLength then
						exit for
					end if
					s2 = s3
			next
			s2 = fsSuperTrim(s2)
			s2 = fsReplaceText(s2, chr$(13),&quot;&quot;)
			s2 = fsReplaceText(s2, chr$(10), &quot; &quot;)
			s2 = fsReplaceText(s2, chr$(9), &quot;&quot;)
		end if

		fsQuickTitle = trim(s2)
	end if
	exit function
	fsQuickTitleErr:
		fsQuickTitle = &quot;&quot;
end function


function fbMdCode(_
		byval sA)
	&apos; Identify lines with strings of spaces, tabs or computer code characters
	dim n, o as integer
	dim s1 as string
	dim a1

	sA = trim(sA)
	n = len(sA)
	a1 = Array(_
			&quot;=&quot;,_
			&quot;-&quot;,_
			&quot; &quot;,_
			&quot;&apos;&quot;,_
			&quot;*&quot;,_
			&quot;#&quot;,_
			&quot;&quot;&quot;&quot;,_
			&quot;\&quot;,_
			&quot;[&quot;,_
			&quot;]&quot;,_
			&quot;{&quot;,_
			&quot;}&quot;,_
			&quot;/&quot;,_
			&quot;(&quot;,_
			&quot;$&quot;,_
			&quot;%&quot;,_
			&quot;;&quot;,_
			&quot;:&quot;,_
			chr$(9))
	fbMdCode = False
	for o = lbound(a1) to ubound(a1)
		if string(n, a1(o)) = sA then
			fbMdCode = True
			exit for
		end if
	next
end function


function fsSlidePlainText(_
		optional byval i)
	dim oDoc, oDrawPage, oDrawPages
	dim nShape, nNumShapes
	dim oShape
	dim sA, sB

	fsSlidePlainText = &quot;&quot;
	sB = &quot;&quot;
	sA = &quot;&quot;
	oDoc=ThisComponent
	if oDoc.supportsService(_
			&quot;com.sun.star.presentation.PresentationDocument&quot;) then
		if ismissing(i) then
			i = ThisComponent.getCurrentController.getCurrentPage().Number() - 1
		end if
		oDrawPages=oDoc.getDrawPages()
		oDrawPage=oDrawPages.getByIndex(i)
		nNumShapes=oDrawPage.getCount()
		for nShape=0 To nNumShapes - 1
			oShape=oDrawPage.getByIndex(nShape)
			if HasUnoInterfaces(oShape, &quot;com.sun.star.lang.XServiceInfo&quot;) then
				sA = &quot;&quot;
				on error resume next
				&apos; The slide has an item that does not support getString
				sA = fsSuperTrim(oShape.getText().getString())
				fsSlidePlainTextErr1:
				if len(sA) &lt;&gt; 0 then
					sB = sB &amp; sA &amp; chr$(10)
				end if
			end if
		next
	end if
	fsSlidePlainText = sB
end function


function fsCleanMdCode(_
		byval sA)
	&apos; Remove lines that are repeating markdown or computer
	&apos; code dividers like &quot;=====&quot;, &quot;#####&quot; or &quot;-----&quot;
	dim a1
	dim CR as string
	dim LF as string
	dim n as integer
	dim s1

	s1 = &quot;&quot;
	CR = chr(10)
	LF = chr(13)
	sA = fsReplaceText(sA, LF, &quot;&quot;)
	a1 = split(sA, CR)
	for n = lbound(a1) to ubound(a1)
		if(fbMdCode(a1(n))) then
			s1 = s1 &amp; CR
		else
			s1 = s1 &amp; a1(n) &amp; CR
		end if
	next
	fsCleanMdCode = s1
end function


function fbIsAPowerPointToken(_
		sA)
	&apos; Is the string a simple token like &quot;&lt;number&gt;&quot;
	&apos; as opposed to an xml string or a plain text string?
	dim x as integer

	x = len(sA)
	fbIsAPowerPointToken = False
	if x &lt;&gt; 0 and x &lt; 100 then  &apos; sanity check
		if instr(sA,&quot;&gt;&quot;) = x then
			if instr(sA,&quot; &quot;) = 0 then
				if instr(sA,&quot;&lt;&quot;) = 1 then
					fbIsAPowerPointToken = True
				end if
			end if
		end if
	end if
end function

function fsGetSlidenote(_
		optional bClean, _
		optional byval nPage)
	dim oDoc As Object
	dim sA as string
	dim i as integer

	if ismissing(bClean) then
		bClean = True
	end if
	oDoc = ThisComponent
	sA = &quot;&quot;
	fsGetSlidenote = &quot;&quot;
	if oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) then
		if ismissing(nPage) then
		nPage=oDoc.getCurrentController.getCurrentPage().Number - 1
			end if
		i = fiGetSlidenoteIndex(nPage)
		if i &lt;&gt; -1 then
			if HasUnoInterfaces(oDoc.getDrawPages().getByIndex(nPage).getnotesPage.getByIndex(i),_
					&quot;com.sun.star.text.XText&quot;) then
				sA = oDoc.getDrawPages().getByIndex(nPage).getnotesPage.getByIndex(i).String
			
				if len(sA) &lt;&gt; 0 then
					&apos; ignore empty text fields
					if not(fbIsAPowerPointToken(sA)) then
						&apos; ignore PowerPoint utility fields
						if bClean then
							fsGetSlidenote = fsCleanMdCode(sA)
						else
							fsGetSlidenote = sA
						end if
					end if
				end if
			end if
		end if
	else
		fsGetSlidenote = &quot;&quot;
	end if
end function


function fiGetSlidenoteIndex(_
		optional nPage)
	on error goto fiGetSlidenoteIndexErr
	dim oDoc As Object
	dim nPage As Double
	dim i as integer
	dim sA as string
	dim inotesCount as integer

	oDoc = ThisComponent
	fiGetSlidenoteIndex = -1
	if oDoc.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) then
		if ismissing(nPage) then
			nPage=oDoc.getCurrentController.getCurrentPage().Number - 1
		end if
		inotesCount = oDoc.getDrawPages().getByIndex( nPage ).getnotesPage.getCount
		if inotesCount = 2 then
			&apos; a native Impress document
			for i = inotesCount - 1 to 0 step -1
				if HasUnoInterfaces(_
						oDoc.getDrawPages().getByIndex(nPage).getnotesPage.getByIndex(i),_
						&quot;com.sun.star.text.XText&quot;) then
					fiGetSlidenoteIndex = i
					exit for
				end if
			next
		else
			&apos; Presentation probably originated from PowerPoint, so note
			&apos; page contains extra text fields. The order depends on
			&apos; whether the original was a ppt or a pptx. We examine 
			&apos; the contents to guess which PowerPoint field includes
			&apos; the speaker notes. In most cases, the highest numbered 
			&apos; text field is the presenter notes field.
			&apos; if you add a new text field to the notes page, we use that 
			&apos; field.
			fiGetSlidenoteIndex = inotesCount - 1
			for i = inotesCount - 1 to 0 step -1
				if HasUnoInterfaces(oDoc.getDrawPages().getByIndex( nPage ).getnotesPage.getByIndex(i),_
						&quot;com.sun.star.text.XText&quot;) then
					sA = oDoc.getDrawPages().getByIndex( nPage ).getnotesPage.getByIndex(i).String
					if len(sA) &lt;&gt; 0 then
						&apos;ignore empty text fields
						if not(fbIsAPowerPointToken(sA)) then
							&apos; ignore PowerPoint page number display field
							fiGetSlidenoteIndex = i
							exit for
						end if
					end if
				end if
			next
		end if
	else
		&apos; We didn&apos;t find a valid presentation text field.
		&apos; Signal the calling routine.
		fiGetSlidenoteIndex = -1
	end if
	exit function
	fiGetSlidenoteIndexErr:
	fiGetSlidenoteIndex = -1
end function


function fsExportAlbumCover(_
		optional sPath, _
		optional iScale)
	&apos; exports current slide as an album cover
	&apos; returns path if successful creating an image.
	dim xDoc, sView, xSelection, xObj, xView
	dim aFD1(4) as new com.sun.star.beans.PropertyValue
	
	fsExportAlbumCover = &quot;&quot;
	if ThisComponent.supportsService(&quot;com.sun.star.presentation.PresentationDocument&quot;) then
		viewNormal()
		&apos; let&apos;s wait a second to make sure the display is stabilized.
		wait 1000
		if ismissing(iScale) then
			&apos; We should use a fairly small image size so that the
			&apos; image does not increase the audio file size much.
			&apos; This makes an image of 600x450 pixels for a normal slide.
			iScale = 28000/600
		end if
		if ismissing(sPath) or sPath = &quot;&quot; then
			sPath = converttourl(fsGetHomeDir) &amp; fsSelectionLanguage &amp; _
					&quot;/poster-&quot; &amp; _
					right(&quot;000&quot; &amp; _
					trim(str(fiMyCurrentAudioTrack(False))), 3) &amp; _
					&quot;.jpg&quot;
		end if
		&apos; Make sure we have a writable folder
		&apos;on error goto ExportAlbumCoverErr
		fbCreateFile(sPath &amp; &quot;.txt&quot; , fsAppSignature(), &quot;utf-8&quot;)
		if fileexists(sPath &amp; &quot;.txt&quot;) then
			kill sPath &amp; &quot;.txt&quot;
			if fileexists(sPath) then
				kill sPath
			end if
		else
			fsExportAlbumCover = &quot;&quot;
			exit function
		end if		
	   &apos; describe image properties
		aFD1(0).Name  = &quot;PixelWidth&quot;        &apos;
		aFD1(0).Value = int((fsImpressdimension(&quot;Width&quot;) / iScale) +.5)
		aFD1(1).Name  = &quot;PixelHeight&quot;
		aFD1(1).Value = int((fsImpressdimension(&quot;Height&quot;) / iScale) +.5)
		aFD1(2).Name  =&quot;LogicalWidth&quot;
		aFD1(2).Value = int((fsImpressdimension(&quot;Width&quot;) / iScale) +.5)
		aFD1(3).Name  =&quot;LogicalHeight&quot;
		aFD1(3).Value = int((fsImpressdimension(&quot;Height&quot;) / iScale) +.5)
		aFD1(4).Name  =&quot;Quality&quot;
		aFD1(4).Value = 65
		xDoc = thiscomponent
		xView = xDoc.currentController
		xSelection = xView.selection
		xObj = xView.currentPage
		ExportJpeg(xObj, sPath, aFD1())
		fsExportAlbumCover = sPath 
	end if
	&apos; msgbox &quot;fsExportAlbumCover :&quot; &amp; fsExportAlbumCover
	exit function
	
	ExportAlbumCoverErr:
	fsExportAlbumCover = &quot;&quot;
end function


sub ExportJpeg(_
		xobject, _
		sFileUrl as string, _
		aFD1)
	&apos; https://web.archive.org/web/20130529074927/http://codesnippets.services.openoffice.org/Office/Office.GraphicExport.snip
	&apos; Export JPEG by Olivier Samyn (initial), Sven Jacobi, Michael Hoennig, Tom Schindl
	&apos; revised February 24, 2013 for LibreOffice 4
	dim xExporter
	dim aArgs(2) as new com.sun.star.beans.PropertyValue
	dim aURL as new com.sun.star.util.URL
	
	xExporter = createUnoService(&quot;com.sun.star.drawing.GraphicExportFilter&quot;)
	xExporter.SetSourceDocument( xobject )
	aURL.Complete = sFileUrl
	aArgs(0).Name  = &quot;MediaType&quot;
	aArgs(0).Value = &quot;image/jpeg&quot;
	aArgs(1).Name  = &quot;URL&quot;
	aArgs(1).Value = sFileUrl &apos; aURL
	aArgs(2).Name  = &quot;FilterData&quot;
	aArgs(2).Value = aFD1
	xExporter.filter(aArgs())
end sub
	

sub viewNormal()
	&apos; View a presentation in Normal view
	dim aURL, oController, oDisp

	on error resume next	
	aURL = CreateUnoStruct(&quot;com.sun.star.util.URL&quot;) 
	aURL.Complete = &quot;.uno:NormalMultiPaneGUI&quot; 
	CreateUnoService(&quot;com.sun.star.util.URLTransformer&quot;)._ 
	parseStrict(aURL) 
	oController = ThisComponent.getCurrentController() 
	oDisp = oController.queryDispatch(aURL, &quot;_self&quot;, 0) 
	if not IsNull(oDisp) then 
		oDisp.dispatch(aURL, array())
	end if 
end sub


function fsImpressdimension(_
		optional byval sType)
	&apos; This may vary depending on the current view. 
	&apos; for normal 3x4 view, the full sizes are:
	&apos; Height = 21000
	&apos; Width = 28000
	dim xDoc, xView, xSelection, xObj
		
	if ismissing(sType) then
		sType = &quot;Height&quot;
	end if
	xDoc = thiscomponent
	xView = xDoc.currentController
	xSelection = xView.selection
	xObj = xView.currentPage
	select case lcase (sType)
	case &quot;height&quot;, &quot;h&quot;
		fsImpressdimension = xObj.getPropertyValue(&quot;Height&quot;)
	case else
		fsImpressdimension = xObj.getPropertyValue(&quot;Width&quot;)
	end select
end function


sub setWesternDocLanguage(_
		sA)
	&apos; sA is the language in the form en-CA
	&apos; for Asian and Complex languages, we ignore the language
	
	dim sLocale as new com.sun.star.lang.Locale
	dim sB as string
	dim sC as string
	dim x as integer
	
	if len(sA) &lt; 2 then
		exit sub
	end if
	x = instr(sA, &quot;-&quot;)
	if x = 0 then
		exit sub
	else
		sB = lcase(left(sA, x - 1))
		sC = ucase(mid(sA, x + 1))
	end if
	sLocale.Language = sB
	sLocale.Country = sC
	on error resume next
	ThisComponent.CharLocale = sLocale
end sub


sub setAsianDocLanguage(_
		sA)
	&apos; sA is the language in the form zh-CN
	&apos; for Western and Complex languages, we ignore the language
	
	dim sLocale as new com.sun.star.lang.Locale
	dim sB as string
	dim sC as string
	dim x as integer
	
	if len(sA) &lt; 2 then
		exit sub
	end if
	x = instr(sA, &quot;-&quot;)
	if x = 0 then
		exit sub
	else
		sB = lcase(left(sA, x - 1))
		sC = ucase(mid(sA, x + 1))
	end if
	sLocale.Language = sB
	sLocale.Country = sC
	&apos; msgbox( &quot;Asian language :&quot; &amp; sB &amp; &quot;-&quot; &amp; sC
	on error resume next
	ThisComponent.CharLocale = sLocale
	ThisComponent.CharLocaleAsian = sLocale
end sub


sub setComplexDocLanguage(_
		sA)
	&apos; sA is the language in the form hi-IN
	&apos; for Western and Asian languages, we ignore the language
	
	dim sLocale as new com.sun.star.lang.Locale
	dim sB as string
	dim sC as string
	dim x as integer
	
	if len(sA) &lt; 2 then
		exit sub
	end if
	x = instr(sA, &quot;-&quot;)
	if x = 0 then
		exit sub
	else
		sB = lcase(left(sA, x - 1))
		sC = ucase(mid(sA, x + 1))
	end if
	sLocale.Language = sB
	sLocale.Country = sC
	&apos; msgbox( &quot;Complex language :&quot; &amp; sB &amp; &quot;-&quot; &amp; sC
	on error resume next
	ThisComponent.CharLocale = sLocale
	ThisComponent.CharLocaleComplex = sLocale
end sub


function fsTrimSpecial(_
		byVal sA, _
		byval sTrim, _
		optional byval iMax)
	dim m as integer
	dim n as integer
	dim s1 as string
	dim s2 as string
	
&apos; sA - the string to trim
&apos; sTrim - the characters to check for and remove.
&apos; iMax - the Maximum number of characters to remove. The
&apos; default value is 80, which is long enough to handle
&apos; the longest normal markdown sequence (Horizontal rule).
&apos;
&apos; Trims specified characters from beginning and end of a
&apos; string up to a specified maximum of characters at the 
&apos; start of the string and at the end of the string.
&apos;
&apos; The purpose of the function is to remove markdown paragraph
&apos; level code from text that will be displayed or spoken. 


	if ismissing(iMax) then
		iMax = 80
	end if
	if len(sA) &lt; iMax then
		iMax = len(sA)
	end if
	fsTrimSpecial = sA
	if len(sA) = 0 or len(sTrim) = 0 then
		exit function
	end if
	
	&apos; Edit sTrim to minimize processing time or
	&apos; to exit before looping if possible.
	s1 = &quot;&quot;
	s2 = &quot;&quot;
	for n = 1 to len(sTrim)
		if instr(sA, mid(sTrim, n, 1)) &gt; 0 then
			s2 = s2 &amp; mid(sTrim, n, 1)
		end if
	next
	if s2 = &quot;&quot; then
		exit function
	else
		sTrim = s2
	end if
	
	&apos; Left loop	
	for n = 1 to iMax
		for m = 1 to len(sTrim)
			s1 = mid(sTrim, m, 1)
			if left(sA, 1) = s1 then
				sA = mid(sA, 2)
			end if
			if len(sA) &lt; 2 then 
				exit for
			end if
		next
	next
	if len(sA) = 0 then
		fsTrimSpecial = sA	
		exit function
	elseif len(sA) &lt; iMax then
		iMax = len(sA)
	end if
	&apos; Right loop
	for n = 1 to iMax
		for m = 1 to len(sTrim)
			s1 = mid(sTrim, m, 1)
			if right(sA, 1) = s1 then
				sA = left(sA, len(sA) - 1)
			end if
			if len(sA) &lt; 2 then 
				exit for
			end if
		next	
	next
	fsTrimSpecial = sA	
end function


function fsGetTopicSentence(_
		byval sA)
	dim a1
	dim s1
	
	s1 = &quot;&quot;
	if len(sA) &gt; 0 then
		&apos; Determine the first sentence of the body text.
		if left(sA, 1) = &quot;&gt;&quot; then
			&apos; The string is a blockquote which we interpret
			&apos; as an aside, quote or intermission slide; not
			&apos; a topic sentence.
			s1 = &quot;&quot;
		elseif instr(sA, &quot;. &quot;) &gt; 0 then
			a1 = split(sA, &quot;.&quot;)
			s1 = fsQuickTitle(100, 200, a1(lbound(a1)) &amp; &quot;.&quot;
		elseif instr(sA, &quot;? &quot;) &gt; 0 then
			a1 = split(sA, &quot;?&quot;)
			s1 = fsQuickTitle(100, 200, a1(lbound(a1)) &amp; &quot;?&quot;
		elseif instr(sA, &quot;! &quot;) &gt; 0 then
			a1 = split(sA, &quot;!&quot;)
			s1 = fsQuickTitle(100, 200, a1(lbound(a1)) &amp; &quot;!&quot;
		elseif instr(sA, &quot;?&quot;) &gt; 0 then
			&apos; IDEOGRAPHIC FULL STOP (Asian period symbol)
			a1 = split(sA, &quot;?&quot;)
			s1 = fsQuickTitle(100, 200, a1(lbound(a1)) &amp; &quot;?&quot;		
		else
			s1 = &quot;&quot;					
		end if
	else
		s1 = &quot;&quot;
	end if
	fsGetTopicSentence = s1
end function


function fmyFontWidthIndex(_
		sA)
	&apos; sA is some text to figure out the width factor for.
	&apos; This returns an adjustment factor for languages
	&apos; that use a wide font set.
	&apos; for English, French, German, Italian, Spanish etc.
	&apos; it returns 1 (The narrowest character set)
	&apos; for wider character sets, it returns a value less than 1.
	dim iMaxLength
	select case fsComplexAsiaOrWest(sA)
	case &quot;COMPLEX&quot;
		&apos; Complex languages may have wide characters.
		iMaxLength = 145
	case &quot;ASIA&quot;
		&apos; Asia uses fixed width font with each character as wide
		&apos; as an em-dash.
		iMaxLength = 90
	case else 
		&apos; Western or undefined
		select case fsSelectionLanguage()
		case &quot;bg&quot;, &quot;bs&quot;, &quot;hr&quot;, &quot;mc&quot;, &quot;ru&quot;, &quot;sr&quot;, &quot;uk&quot;
			&apos; Cyrillic characters are a little wide.
			iMaxLength = 150
		case else
			iMaxLength = 185
		end select
	end select
	fmyFontWidthIndex = iMaxLength / 185
end function


function fbsetnote(_
		oPage, _
		sA)
	&apos; oPage is a presentation slide.
	&apos; sA is the string to write
	dim i
	
	i = 1
	if HasUnoInterfaces(oPage.getnotesPage.getByIndex(i), _
			&quot;com.sun.star.text.XText&quot;) then
		oPage.getnotesPage.getByIndex(i).String = sA &amp; chr(10)
		fbsetnote = True
	else
		fbsetnote = False
	end if
	exit function
	fbsetnoteErr:
	fbsetnote = False
end function


sub BgCanaryYellow(_
		i)
	ChangeBackground(i, 255, 255, 165)
end sub

sub BgPink(_
		i)
	ChangeBackground(i, 255, 0, 165)
end sub

sub BgBlue(_
		i)
	ChangeBackground(i, 0, 0, 165)
end sub

sub BgBlack(_
		i)
	ChangeBackground(i, 0, 0, 0)
end sub

sub BgSystemColor(_
		i)
	if fsGetOS() = &quot;UNIX&quot; then
		&apos; [Ubuntu Orange &amp; Aubergine][1]
		&apos; [Ubuntu Design][2]
		&apos; [1]: https://design.canonical.com/2011/07/ubuntu-orange-is-dd4814/
		&apos; [2]: https://design.ubuntu.com/brand/colour-palette
		ChangeBackground(i, 119, 72, 83)
	elseif fsGetOS() = &quot;WINDOWS&quot; then
		&apos; [Teal][3]
		&apos; [3]: http://colorlib.com/etc/metro-colors/
		ChangeBackground(i, 29, 29, 29)
	else
		&apos; Background Grey
		ChangeBackground(i, 153, 153, 153)
	end if
end sub

function flSystemColor()
	&apos; Bright color of active button or control
	dim l1
	
	if fsGetOS() = &quot;UNIX&quot; then
		&apos; [Ubuntu Orange &amp; Aubergine][1]
		&apos; [Ubuntu Design][2]
		&apos; [1]: https://design.canonical.com/2011/07/ubuntu-orange-is-dd4814/
		&apos; [2]: https://design.ubuntu.com/brand/colour-palette
		l1 = rgb(221, 72, 20)  &apos; orange
	elseif fsGetOS() = &quot;WINDOWS&quot; then
		&apos; [Teal][3]
		&apos; [3]: https://colorlib.com/etc/metro-colors/
		l1 = rgb(0, 171, 169)
	elseif fsGetOS() = &quot;ANDROID&quot; then
		l1 = rgb(255, 196, 13) &apos; medium yellow accent
	else
		&apos; l1 = rgb(153, 153, 153) &apos; medium grey
		&apos; l1 = rgb(221, 72, 20)  &apos; orange
		&apos; l1 = rgb(0, 171, 169)  &apos; teal
		l1 = rgb(49, 131, 251) &apos; Yosemite blue accent
	end if
	flSystemColor = l1
end function

function fsSystemFont()
	select case fsGetOS
	case &quot;UNIX&quot;
		fsSystemFont = &quot;Arial;DejaVu Sans;Liberation Sans;Droid Sans;Sans-Serif&quot;
	case &quot;WINDOWS&quot;
		fsSystemFont = &quot;Arial;Segoe UI;Calibri;Tahoma;Liberation Sans;Sans-Serif&quot;
	case &quot;OSX&quot;, &quot;MAC&quot;
		fsSystemFont = &quot;Helvetica Neue;Lucida Grande;Helvetica;Arial;Liberation Sans;Sans-Serif&quot;
	case else
		fsSystemFont = &quot;Droid Sans;Liberation Sans;DejaVu Sans;Sans-Serif&quot;
	end select
end function


function fsSetexttoAtx(_
		byval sA, _
		byval sB)
	&apos; sA - line to modify
	&apos; sB - the line under it we need to check for Setext code
	&apos;
	&apos; Convert [Markdown][1] [Setext-style][2] headers 
	&apos; to [atx][3].
	&apos;
	&apos; [1]: https://daringfireball.net/projects/markdown/syntax
	&apos; [2]: http://docutils.sourceforge.net/mirror/setext.html
	&apos; [3]: http://www.aaronsw.com/2002/atx/
	dim s5 as string

	s5 = &quot;&quot;
	if not(len(sB) = 0) and not(len(sA) = 0) then
		if string(len(sB), &quot;=&quot;) = sB then
			s5 = &quot;#&quot;
		elseif string(len(sB), &quot;-&quot;) = sB then
			s5 = &quot;##&quot;
		end if
	end if
	fsSetexttoAtx = s5 &amp; sA
end function


sub NewPresentionFromSelection(_
		optional sA, _
		optional sB)
	dim a1
	dim a2
	dim bWesternOnly
	dim i
	dim j
	dim k
	dim L
	dim m
	dim oAlbum
	dim oAsianLanguage
	dim oBar    &apos; Generated status bar 
	dim oFrame  &apos; Current frame
	dim oLanguage
	dim oShape1
	dim s1
	dim s2
	dim s3
	dim s4
	dim s5
	dim sAuthor
	dim sAsianLanguage
	dim sAsianCountry
	dim sComplexLanguage
	dim sComplexCountry
	dim sCountry
	dim sLanguage
	dim x

	if not globalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) then
		globalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	end if
	if ismissing(sA) then
		sA = fsThisDocTitle()
	end if
	if ismissing(sB) then
		sB = fsGetTextSelection(False)
	end if
	sAsianLanguage = &quot;&quot;
	sAsianCountry = &quot;&quot;
	sComplexLanguage = &quot;&quot;
	sComplexCountry = &quot;&quot;
	oLanguage = ThisComponent.CharLocale
	sLanguage = oLanguage.Language
	sCountry = oLanguage.Country
	sLanguage = fsSelectionLanguage(&quot;WEST&quot;)
	sCountry = fsSelectionCountry(&quot;WEST&quot;)
	select case fsComplexAsiaOrWest(sB)
	case &quot;ASIA&quot;
		sAsianLanguage = fsSelectionLanguage(&quot;ASIA&quot;)
		sAsianCountry = fsSelectionCountry(&quot;ASIA&quot;)
	case &quot;COMPLEX&quot;
		sComplexLanguage = fsSelectionLanguage(&quot;COMPLEX&quot;)
		sComplexCountry = fsSelectionCountry(&quot;COMPLEX&quot;)
	end select
	sAuthor = fsThisDocAuthor
 
	if len(sA) &lt;&gt; 0 then
		&apos; Create a new Impress document
		oAlbum = StarDesktop.loadComponentFromUrl(&quot;private:factory/simpress&quot;, _
				&quot;_blank&quot;, _
				0, _
				dimarray())
		x = ThisComponent
		BgCanaryYellow(0)
		x.DocumentProperties.Title = sA
		&apos; Make the draw page square so that it is a standard sound icon shape.
		x.getDrawPages.getByIndex(0).Height = x.getDrawPages.getByIndex(0).Width

		&apos; Title slide  - summary of paragraph contents
		if len(sB) &lt;&gt; 0 then
			&apos; We use a2 for the heading level of markdown (# = h1 ## = h2 etc.)
			a2 = split(chr(10) &amp; sB, chr(10))
			&apos; We use a1 to display cleaned up text
			sB = chr(10) &amp; fsCleanMdCode(sB)
			a1 = split(sB, chr(10))

			k = 255  &apos; Maximum number of slides
			s2 = &quot;&quot; 
			s3 = &quot;&quot;
			s4 = &quot;&quot;
			s5 = &quot;&quot;
			if ubound(a1) &lt; k then
				k = ubound(a1)
			end if
			for j = lbound(a1) to k
				s5 = &quot;&quot;
				if len(a1(j)) &gt; 3 then
					s2 = s5 &amp; s2		
					if j + 1 &lt; ubound(a1) then
						&apos; Convert Markdown Setext-style headers 
						&apos; to atx.
						L = j + 1
						s1 = fsSetexttoAtx(a2(j), a2(L))
					else
						s1 = a2(j)
					end if
					if left(trim(s1), 1) = &quot;#&quot; then
						&apos; Looks like a heading. Demote one level and add extra LFs.
						if left(trim(s1), 7) = string(7, &quot;#&quot;) then
							&apos; Markdown can&apos;t use more than 6 &quot;#&quot; symbols.
							s1 = string(6,&quot;#&quot;) &amp; fsTrimSpecial(trim(s1), &quot;#&quot;)
						end if
						s2 = s2 &amp; chr(10) &amp; &quot;#&quot; &amp; fsQuickTitle(7, 35, trim(s1)) &amp; chr(10) &amp; chr(10)
					elseif left(s1, 2) = &quot; -&quot; or _
							left(s1, 2) = &quot; *&quot; or _
							left(s1, 1) = &quot;-&quot; or _
							left(s1, 1) = &quot;*&quot; then
						s2 = s2 &amp; trim(fsQuickTitle(7, 35, s1)) &amp; chr(10)
						&apos; You already included a markdown unordered list symbol.
					else
						s2 = s2 &amp; &quot;- &quot; &amp; fsTrimSpecial(fsQuickTitle(7, 35, s1), &quot;`_-*#&gt;&quot;) &amp; chr(10)
						&apos; Clean string up and add a markdown unordered list symbol.
					end if
					if len(s3) = 0 then
						&apos; Determine the first sentence of the body text.
						s3 = fsGetTopicSentence(a1(j))
					end if
				end if
			next
		else
			s2 = sAuthor
			s3 = s2
		end if
		
		if s3 = &quot;&quot; then
			s3 = fsDateMyRegion(1)
		end if
		
		&apos; Set the text of the speaker notes for the title slide
		if not(fbsetnote(x.getDrawPages().getByIndex(0), _
		 			&quot;# &quot; &amp; sA &amp; _
					chr(10) &amp; _
					chr(10) &amp; _
					&quot;&gt; _&quot; &amp; s3 &amp; &quot;_&quot; &amp; _
					chr(10) &amp; _
					chr(10) &amp; _		
					s2)) then
			&apos; incompatible document format
			exit sub
		end if
		&apos;  Record the first sentence of the body text in the description
		s4 = s3
		s4 = fsTrimSpecial(s4, &quot;`-#&gt;_ &quot; &amp; chr(13) &amp; chr(10))
		x.DocumentProperties.Description = s4
		x.getDrawPages().getByIndex(0).getByIndex(0).String = sA
		x.getDrawPages().getByIndex(0).Name = sA
		x.getDrawPages().getByIndex(0).getByIndex(1).String = sAuthor
		
		&apos; for each paragraph, make a slide
		oFrame=ThisComponent.getCurrentController().getFrame() 
		oBar=oFrame.createStatusIndicator()
		oBar.start(fsLookUpTerm( &quot;s_read-text&quot;, fsGetLanguage()), ubound(a1))
		k = 0
		if len(sAsianLanguage) &gt; 0 then
			setAsianDocLanguage(sAsianLanguage &amp; &quot;-&quot; &amp; sAsianCountry)
		elseif len(sComplexLanguage) &gt; 0 then
			setComplexDocLanguage(sComplexLanguage &amp; &quot;-&quot; &amp; sComplexCountry)
		else
			setWesternDocLanguage(sLanguage &amp; &quot;-&quot; &amp; sCountry)
		end if
		for j = lbound(a1) to ubound(a1)
			s1 = &quot;&quot;
			if len(a1(j)) &gt; 0 then
				k = k + 1
				if j + 1 &lt; ubound(a1) then
					&apos; Convert Markdown Setext-style headers 
					&apos; to atx.
					L = j + 1
					s1 = fsSetexttoAtx(a1(j), a2(L))
				else
					s1 = a1(j)
				end if	
				x.getDrawPages().InsertNewByIndex(k)
				if len(s1) &gt; 0 and _
						(not(string(len(s1), &quot;=&quot;) = s1) and _
						not(string(len(s1), &quot;-&quot;) = s1)) then
					&apos; The string is not empty and is not a simple
					&apos; markdown &lt;h1&gt;, &lt;h2&gt; or &lt;hr /&gt; code string.
					addTextToSlide(x, s1, k, sComplexLanguage)
				end if
			end if
			oBar.Value = j
		next
		oShape1 = x.getDrawPages().getByIndex(x.GetDrawPages.getCount()-1).getByIndex(1)
		oShape1.setString(&quot; ? &quot;)
		oShape1.CharFontName = fsSystemFont()
		oShape1.CharFontNameComplex = fsSystemFont()
		oShape1.CharFontNameAsian = fsSystemFont()
	 	oShape1.OnClick = com.sun.star.presentation.ClickAction.STOPPRESENTATION
	 	oShape1.CharHeight = x.getDrawPages().getByIndex(0).Height / 1000
	 	ResizeAsianComplexText(oShape1)
		oBar.end()
		On Error Resume Next
		x.Presentation.IsMouseVisible() = True
		&apos; We want to be able to close without an &quot;Are you sure?&quot; message.
		x.setModified(False)
	end if
end sub


sub ResizeAsianComplexText(_
		oShape)
	oShape.CharHeightAsian = oShape.CharHeight
	oShape.CharHeightComplex = oShape.CharHeight
end sub


Sub addTextToSlide(_
		optional o1, _
		optional byval sA, _
		optional byval i, _
		optional sComplexLanguage, _
		optional sStyle, _
		optional bLiveText)
	&apos;
    &apos; Add text to a slide
    &apos; -------------------
    &apos;
    &apos; Adds text and control buttons to a blank slide
    &apos;
    &apos; o1 - Current component (document object)
    &apos; sA - String to show (may be shortened if it is too long to fit)
    &apos; i - Index of slide to modify (between 0 and number of slides - 1)
    &apos; sComplexLanguage - home language if the language is complex. (Default: hi-IN)
    &apos; sStyle - force slide text shape style `[h1|h2|h3|h4|h5|h6|code|pre|blockquote]`
    &apos; bLiveText - if true, then clicking the text starts speech synthesis
    &apos;   if false, then only the play button starts speech synthesis
    &apos;
    &apos; Uses a subset of [Markdown][1] to format the appearance
    &apos; of the slide by using Markdown paragraph style markers.
    &apos;
    &apos; - # for heading 1
    &apos; - ## for heading 2
    &apos; - ### for heading 3
    &apos; - &gt; for aside (blockquote)
    &apos; - ` for code
    &apos; - _ for emphasis (italics)
    &apos; - * for emphasis (italics)
    &apos;
	&apos; See OpenOffice.org Macros Explained, Third Ed., 2015. 
	&apos; [Andrew Pitonyak][2]
	&apos; for a description of createPoint and createSize
	&apos;
	&apos; [1]: https://daringfireball.net/projects/markdown/
	&apos; [2]: http://www.pitonyak.org
	Dim oPage
	Dim oShape
	Dim oShape1
	Dim lwide
	Dim lhigh
	Dim m as integer
	Dim n as integer
	Dim iMaxLength as integer
	Dim iITALIC as Integer
	Dim s1 as string
	Dim s1c as string
	Dim s2 as String
	Dim s4 as String

	If Not globalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) Then
		globalScope.BasicLibraries.loadLibrary(&quot;Tools&quot;)
	end if
	iITALIC = 2
	on error goto addTextToSlideErr
	If ismissing(o1) then
		o1 = StarDesktop.loadComponentFromUrl(&quot;private:factory/simpress&quot;, _
				&quot;_blank&quot;, _
				0, _
				dimarray())	
	end if
	if ismissing(sA) then
		sA = fsSampleMd()
	end if
	if ismissing(sComplexLanguage) then
		sComplexLanguage = &quot;hi&quot;
	end if
	if ismissing(sStyle) then
		sStyle = &quot;&quot;
	end if
	if ismissing(bLiveText) then
		bLiveText = True
	end if
 	iMaxLength = 185 * fmyFontWidthIndex(sA)
	if ismissing (i) then
		i = 0
	end if
	oPage = o1.getDrawPages().getByIndex(i)
	oShape = o1.createInstance(&quot;com.sun.star.drawing.TextShape&quot;)
	oShape1 = o1.createInstance(&quot;com.sun.star.drawing.EllipseShape&quot;)
	lwide = (oPage.Width)
	lhigh = (oPage.Height)  
   
	oPage.add(oShape)
	oPage.add(oShape1)

	&apos; ###Set the note
	fbsetNote(oPage, sA &amp; chr(10))
	
	&apos; ### Set the page Name - replace &quot;Slide nn&quot;
	s4 = fsQuickTitle(7, 35, sA)
	s4 = fsTrimSpecial(s4, &quot;`-#&gt;_ &quot;)
	oPage.Name = s4
	
	&apos; ###Set some defaults for the main text box
	oShape.setString(&quot;%NO_VALUE%&quot;)
	oShape.setPosition(createPoint(lwide * 3 / 70, lhigh * 3 / 70))
	oShape.setSize(createSize(lwide * 0.91, lhigh * 0.91))
	&apos; ###Next slide button
	
	oShape1.setString(&quot;↓&quot;)
	oShape1.OnClick = com.sun.star.presentation.ClickAction.NEXTPAGE
	
	&apos; For LTR (western and Asian) text
	oShape1.setPosition(createPoint(lwide - lhigh * 7 / 70, _
			lhigh - lhigh * 7 / 70))	
	oShape1.setSize(createSize(lhigh * 0.0550, lhigh * 0.0550))
	oShape1.CharHeight = lhigh / 900

	oShape1.LineColor = rgb(49, 131, 251) &apos; OSX blue
	oShape1.FillColor = rgb(49, 131, 251) 
	oShape1.CharColor = rgb(255, 255, 255)
	oShape1.Printable = False
	oShape1.Title = &quot;Next&quot;
	oShape1.Description = &quot;Next&quot;

	&apos; s1 may be modified - **leave sA unmodified**
	s1 = trim(fsSupertrim(sA))
	BgBlack(i)
		
	&apos;### Edit the headings - Size and max string length
	
	s1c = fsReplaceText(s1, chr(8207), &quot;&quot;)
	s1c = fsReplaceText(s1c, chr(8206), &quot;&quot;)
	if  left(s1c, 7) = &quot;#######&quot; then
		&apos; Headings 7 and greater are not supported in
		&apos; markdown syntax.  Reformat as heading 6.
		s1 = trim(fsTrimSpecial(s1, &quot;#&quot;))
		s1 = &quot;######&quot; &amp; s1
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
	end if
	if left(s1c, 6) = &quot;######&quot; or sStyle = &quot;h6&quot; then
		&apos; Heading 6
		BgSystemColor(i)
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 420
		oShape.CharFontName = fsSystemFont()
		oShape.CharColor = RGB(255, 255, 255)
	elseif left(s1c, 5) = &quot;#####&quot;  or sStyle = &quot;h5&quot; then
		&apos; Heading 5
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 420
		bgBlue(i)
		oShape.CharColor = RGB(255, 0, 165)
	elseif left(s1c, 4) = &quot;####&quot; or sStyle = &quot;h4&quot; then
		&apos; Heading 4
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 420
		BgPink(i)
		oShape.CharColor = RGB(0, 0, 165)
	elseif left(s1c, 3) = &quot;###&quot;  or sStyle = &quot;h3&quot; then
		&apos; Heading 3
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 420
	elseif left(s1c, 2) = &quot;##&quot; or sStyle = &quot;h2&quot; then
		&apos; Heading 2
		s1 = trim(fsQuickTitle(42, 20350/iMaxLength , s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 350
	elseif left(s1c, 1) = &quot;#&quot;  or sStyle = &quot;h1&quot; then
		&apos; Heading 1
		s1 = trim(fsQuickTitle(42, 11100/iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 280	
	elseif (left(s1c, 1) = &quot;`&quot; and _
			right(s1, 1) = &quot;`&quot;) or sStyle = &quot;code&quot; then
		&apos; Code listing (very small)
		s1 = fsTrimSpecial(s1, &quot;`&quot;)
		s1 = trim(fsQuickTitle(200, 157250/iMaxLength, s1))
		if len(s1) + len(&quot;``&quot;) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 875
		oShape.CharFontName = &quot;DejaVu Sans Mono;Liberation Mono;Droid Sans Mono;Menlo Regular;Courier New;Courier;Monospace;Microsoft Sans Serif&quot;
		oShape.setString(mid(sA, 2, len(sA) - 2)
	elseif (left(sA, 4)) = string(4, &quot; &quot;)  or sStyle = &quot;pre&quot; then
		&apos; Code listing - preserve indents (very small)
		s1 = fsTrimSpecial(s1, &quot;`&quot;)	
		s1 = trim(fsQuickTitle(200, 157250/iMaxLength, s1))
		if len(s1) + len(&quot;``&quot;) &lt; len(trim(sA)) then
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 840
		oShape.CharFontName = &quot;DejaVu Sans Mono;Liberation Mono;Droid Sans Mono;Menlo Regular;Courier New;Courier;Mono;Microsoft Sans Serif&quot;
		oShape.setString(sA)
	elseif left(s1c, 1) = &quot;&gt;&quot; or sStyle = &quot;blockquote&quot; then
		&apos; Aside: definition, quote, intermission, reader task etc.
		s1 = fsTrimSpecial(s1, &quot;&gt; &quot;)
		s1 = trim(fsQuickTitle(100, 76960/iMaxLength, s1))
		BgCanaryYellow(i)
		oShape.CharHeight = lhigh / 600	
	else
		&apos; Plain text
		s1 = trim(fsQuickTitle(42, iMaxLength, s1))
		if len(s1) &lt; len(trim(sA)) then 
			s1 = s1 &amp; &quot; …&quot;
		end if
		oShape.CharHeight = lhigh / 420
	end if
	
	&apos;###Colors or posture

	s2 = trim(fsTrimSpecial(sA, &quot; &gt;#&quot; &amp; chr(8207) &amp; chr(8206))
	s1c = fsReplaceText(s1, chr(8207), &quot;&quot;)
	s1c = fsReplaceText(s1c, chr(8206), &quot;&quot;)
	if left(s2, 1) = &quot;*&quot; or  left(s2, 1) = &quot;_&quot; then
		&apos; You included markdown code for italics
		oShape.CharPosture = iITALIC		
	end if
	if left(s1c, 1) = &quot;#&quot; then
		&apos; Heading
		oShape.CharPosture = iITALIC
		s1 = fsTrimSpecial(s1, &quot;#_* &quot;)		
	elseif left(s1c, 1) = &quot;*&quot; and right(s1c, 1) = &quot;*&quot; then
		&apos; Emphasis
		oShape.CharPosture = iITALIC
		s1 = fsTrimSpecial(s1, &quot;*#_ &quot;)
	elseif left(s1c, 1) = &quot;_&quot; and right(s1c, 1) = &quot;_&quot; then
		&apos; Emphasis
		oShape.CharPosture = iITALIC
		s1 = fsTrimSpecial(s1, &quot;_*# &quot;)
	else
		oShape.CharPosture = 0
	end if
	
	&apos; ##Replace the temporary text of main text shape with the final text.
	if oShape.getString = &quot;%NO_VALUE%&quot; or oShape.getString = &quot;&quot; then
		oShape.setString(s1)
		ResizeAsianComplexText(oShape)
	end if
	select case fsGetOS()
	case &quot;OSX&quot;, &quot;MAC&quot;
		m = 15
	case &quot;UNIX&quot;, &quot;ANDROID&quot;
		m = 20
	case else
		m = 20  &apos; WINDOWS
	end select
	if fbHasRTLMarker(sA) then
		&apos; Has a Unicode Right to left marker.  We need to remove 
		&apos; the markdown formatting following the RTL marker, then
		&apos; prepend the string with the RTL marker `chr(8207)`.
		s1 = chr(8207) &amp; fsTrimSpecial(s1, chr(8207) &amp; &quot;*#_&gt; &quot;)
		oShape.setString(fsReplaceText(s1,&quot; …&quot;, chr(10) &amp; &quot;…&quot;))
		ThisComponent.getcurrentcontroller().setCurrentPage(ThisComponent.drawpages(i))
		SetAllRightJustified
		oShape1.setPosition(createPoint(lwide * (3) / 70, lhigh - lhigh * 7 / 70))
		ThisComponent.getcurrentcontroller().setCurrentPage(ThisComponent.drawpages(1))
		&apos; add bubble to lower left
		&apos; wide, high, x-axis, y-axis
		&apos; .115
		addBubbleToSlide(o1, _
				&quot; ► &quot;, _
				i, _
				lhigh \ m, _
				lhigh \ m, _
				lwide * 0.13, _
				lhigh * 0.902)
	else
		if fbHasLTRMarker(sA) then
			&apos; Has a Unicode left to right marker.  We need to remove 
			&apos; the markdown formatting following the LTR marker, then
			&apos; prepend the string with the LTR marker `chr(8206)`.
			s1 = chr(8206) &amp; fsTrimSpecial(s1, chr(8206) &amp; &quot;*#_&gt; &quot;)
		end if
		&apos; add bubble to lower right
		&apos; msgbox  10 / 70 &apos; convert fraction to decimal
		&apos; wide, high, x-axis, y-axis

		addBubbleToSlide(o1, _
				&quot; ► &quot;, _
				i, _
				lhigh \ m, _
				lhigh \ m, _
				lwide * 0.8214, _
				lhigh * 0.902)
	end if
	if bLiveText then
		&apos; The computer needs read text extension to execute this procedure.
		&apos; If the computer doesn’t have the extension, clicking the shape
		&apos; will show a dialogue telling you that it couldn’t find the script.
		&apos; If you have a tablet for drawing on the slide, you might prefer
		&apos; live text (`blivetext`) to be false.  If you want it to be easy to
		&apos; initiate speech, it should be set to true. 
		oShape.OnClick = com.sun.star.presentation.ClickAction.MACRO
		oShape.Bookmark = &quot;vnd.sun.star.script:&quot; &amp; _
				&quot;textToSpeech.TextToSpeech.ReadTheSlideNote&quot; &amp; _
				&quot;?language=Basic&amp;location=application&quot;
	end if
	Exit Sub
	addTextToSlideErr:
	msgBox fsLookUpTerm(&quot;s_cancel&quot;), _
			0, _
			fsLookUpTerm(&quot;s_read-text&quot;)
End Sub


function fbHasAsianCharacters(_
		sA)
	&apos; Asian Language UTF-8 strings are in a specific Unicode range 
	&apos; and do not include RTL or LTR markers.
	&apos; 
	dim s1 as string
	dim b1 as boolean
	
	if len(sA) = 0 then
		b1 = False
	elseif fbHasLTRMarker(sA) then
		b1 = False
	elseif fbHasRTLMarker(sA) then
		b1 = False
	else
		s1 = converttourl(left(trim(sA), 100))
		if instr(s1, &quot;%8&quot;) &gt; 0 then
			b1 = True
		elseif instr(s1, &quot;%9&quot;) &gt; 0 then
			&apos; zh , ja
			b1 = True
		elseif instr(s1, &quot;%A&quot;) &gt; 0 then
			&apos; zh, ja
			b1 = True	
		elseif instr(s1, &quot;%B&quot;) &gt; 0 then
			&apos; zh, ja
			b1 = True
		elseif instr(s1, &quot;%E&quot;) &gt; 0 then
			&apos; ko
			b1 = True
		else
			b1 = False
		end if
	end if
	fbHasAsianCharacters = b1
end function


function fbHasRTLMarker(_
		byval sA)
	&apos; Languages that read right to left like Arabic, Farsi, and Hebrew
	&apos; include a [Unicode Character &quot;RIGHT-TO-LEFT MARK (U+200F)][1]
	&apos; 
	&apos; [1]: https://www.fileformat.info/info/unicode/char/200f/index.htm 
	dim s1 as string
	dim b1 as boolean
	
	if len(sA) = 0 then
		b1 = False
	else
		s1 = converttourl(left(trim(sA), 15))
		if instr(s1, &quot;%D8&quot;) &gt; 0 then
			b1 = True
		end if
	end if
	fbHasRTLMarker = b1
end function


function fbHasLTRMarker(_
		byval sA)
	&apos; Languages that are complex like Hindi, Gujarati and Punjabi may
	&apos; include a [Unicode Character &quot;LEFT-TO-RIGHT MARK (U+200E)][1]
	&apos; 
	&apos; [1]: https://www.fileformat.info/info/unicode/char/200e/index.htm 
	dim s1 as string
	dim b1 as boolean
	
	if len(sA) = 0 then
		b1 = False
	else
		s1 = converttourl(left(trim(sA), 15))
		if instr(s1, &quot;%E0&quot;) &gt; 0 then
			b1 = True
		end if
	end if
	fbHasLTRMarker = b1
end function


function fiWesternAsianComplex(_
		optional byval sA)
	&apos; Returns 0 for Western, 1 for Asian, 2 for Complex
	dim i1 as integer
	
	if ismissing(sA) or sA = &quot;&quot; then
		fiWesternAsianComplex = 0
		exit function
	end if
	if fbHasAsianCharacters(sA) then
		i1 = 1
	elseif fbHasLTRMarker(sA) then
		i1 = 2
	elseif fbHasRTLMarker(sA) then
		i1 = 2
	else
		i1 = 0
	end if
	fiWesternAsianComplex = i1
end function


function fsIsStringWesternAsianOrComplexTest(_
		sA)
	dim s1 as string
	
	select case fiWesternAsianComplex(sA)
	case 0
		s1 = &quot;WESTERN&quot;
	case 1
		s1 = &quot;ASIA&quot;
	case else
		s1 = &quot;COMPLEX&quot;	
	end select
	fsIsStringWesternAsianOrComplexTest = s1
end function


function fsGetEscapedCode(_
		optional byval sA, _
		optional byval bShowMe)
	&apos; Show the string as it would be escaped for an
	&apos; Internet address. Use as a string converter or
	&apos; viewer of complex and Asian strings.
	&apos;
	&apos; Remove ATX headers and hash tags
	while left(sA, 1) = &quot;#&quot;
		sA = right(sA, len(sA) - 1)
	wend
	if ismissing(bShowMe) then
		bShowMe = False
	end if
	if ismissing(sA) then
		sA = fsGetTextSelection(False)
		bShowMe = True
	end if
	fsGetEscapedCode = mid(converttourl(sA), 9)
	if bShowMe then
		msgbox( sA &amp; chr(10) &amp; chr(10) &amp; fsGetEscapedCode
	end if
end function


sub SetAllRightJustified()
	&apos; Arabic, Hebrew and other right to left languages should be 
	&apos; aligned to the right. 
	dim document   as object
	dim dispatcher as object
	dim args1(0) as new com.sun.star.beans.PropertyValue
	
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	args1(0).Name = &quot;RightPara&quot;
	args1(0).Value = True
	dispatcher.executeDispatch(document, &quot;.uno:SelectAll&quot;, &quot;&quot;, 0, array())
	dispatcher.executeDispatch(document, &quot;.uno:RightPara&quot;, &quot;&quot;, 0, args1())
end sub


function fiCurrentSlideIndex()
	on error goto fiGetCurrentSlideIndexerror 
	fiCurrentSlideIndex = ThisComponent.Presentation.Controller.getCurrentSlideIndex()
	exit function
	fiGetCurrentSlideIndexerror:
	&apos; The presentation is not playing. 
	fiCurrentSlideIndex = -1
end function


sub addBubbleToSlide(_
		optional oDoc, _
		optional byval sA, _
		optional byval i, _
		optional byval width, _
		optional byval height, _
		optional byval xval, _
		optional byval yval, _
		optional byval sType, _
		optional byval lBackgroundColor, _
		optional byval lcharacterColor, _
		optional byval sMacroBookMark)
	&apos; Add bubble to slide
	&apos; -------------------
	&apos;
	&apos; Adds a red round-callout (speech bubble) to a presentation slide.
	&apos; Click the bubble to start speech synthesis.
	&apos;
	&apos; oDoc - this document  
	&apos; sA - text to display  
	&apos; width - full width  
	&apos; height - full height  
	&apos; xVal - position on x-axis  
	&apos; yVal - position on y-axis  
	&apos; 
	&apos; See:  
	&apos; [Re: Draw - Basic - Shapes][ABTS1]
	&apos; by Charlie Young - Sat Jan 07, 2012 5:30 am
	&apos; [ABTS1]: https://forum.openoffice.org/en/forum/viewtopic.php?f=45&amp;t=46682#p215798
	&apos;
	dim oDrawPage As Object
	dim oShape As Object
	dim shapeGeometry(0) as new com.sun.star.beans.PropertyValue
	dim oSize As new com.sun.star.awt.Size
	dim ShapePos As new com.sun.star.awt.Point
	
	if ismissing(oDoc) then  
	   oDoc = ThisComponent
	end if
	if ismissing(sA) then
		sA =&quot; ? &quot;
	end if
	if ismissing(i) then
		i = 0
	end if
	if ismissing(width) then
		width = 1400  &apos; 2 cm
	end if
	if ismissing(height) then
		height = width
	end if
	if ismissing(sType) then
		sType = &quot;round-callout&quot;
		&apos; sType = &quot;circle&quot;
	end if
	if ismissing(lBackgroundColor) then
		lBackgroundColor = rgb(238, 17, 17)  &apos; Windows 8 red
	end if
	if ismissing(lcharacterColor) then
		lcharacterColor = rgb(255, 255, 255)  &apos; White 
	end if
	if ismissing(sMacroBookMark) then 
		sMacroBookMark = &quot;vnd.sun.star.script:&quot; &amp; _
			&quot;textToSpeech.TextToSpeech.ReadTheSlidenote&quot; &amp; _
			&quot;?language=Basic&amp;location=application&quot;
	end if
	&apos; The following list is not complete. A shape that is not included could raise an error.
	&apos; See the [Drawing Shape][ABTS1] reference for an complete list of regular drawing shapes
	&apos; and the [Custom Shape][ABTS2] reference for a list of custom shapes.
	&apos;
	&apos; [ABTS1]: https://www.openoffice.org/api/docs/common/ref/com/sun/star/drawing/module-ix.html 
	&apos; [ABTS2]: https://www.openoffice.org/api/docs/common/ref/com/sun/star/drawing/XEnhancedCustomShapeDefaulter.html
	&apos;
	oDrawPage = oDoc.DrawPages(i)
	select case lcase(sType)
	case &quot;ellipse&quot;, &quot;circle&quot;
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.EllipseShape&quot;)
		oDrawPage.add(oShape)
	case &quot;line&quot;
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.LineShape&quot;)
		oDrawPage.add(oShape)
	case &quot;measure&quot;
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.MeasureShape&quot;)
		oDrawPage.add(oShape)
	case &quot;rectangle&quot;
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.RectangleShape&quot;)
		oDrawPage.add(oShape)
	case &quot;text&quot;
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.TextShape&quot;)
		oDrawPage.add(oShape)	
	case else
		&apos; Custom shape
		oShape = oDoc.createInstance(&quot;com.sun.star.drawing.CustomShape&quot;)
		oDrawPage.add(oShape)	
		shapeGeometry(0).Name = &quot;Type&quot;
		shapeGeometry(0).Value = sType
		oShape.CustomShapeGeometry = shapeGeometry
	end select
	
	oSize.width = width
	oSize.height = height
	oShape.Size = oSize
	if ismissing(xval) then
		xval =  (oDrawPage.width - oSize.width) \ 2  &apos; Center
	end if
	if ismissing(yval) then
		yval =  (oDrawPage.height - oSize.height) \ 2  &apos; Center 
	end if

	ShapePos.X = xVal
	ShapePos.Y = yVal
	oShape.setPosition(ShapePos)
	oShape.FillStyle = com.sun.star.drawing.FillStyle.SOLID

	&apos;oShape.LineWidth = 50
	oShape.String = sA
	oShape.LineColor = lBackgroundColor
	oShape.FillColor = lBackgroundColor  
	oShape.CharColor = lcharacterColor
	oShape.OnClick = com.sun.star.presentation.ClickAction.MACRO
	oShape.Bookmark = sMacroBookMark
	oShape.CharFontName = fsSystemFont()
	oShape.CharFontNameComplex = fsSystemFont()
	oShape.CharFontNameAsian = fsSystemFont()
	oShape.FillTransparence = 0
	oShape.Visible = True
	oShape.TextAutoGrowWidth = False
	oShape.TextHorizontalAdjust = 3
	oShape.LineTransparence = 0
	oShape.CharShadowed = False
	oShape.Printable = False
	oShape.LineendWidth = 200
	oShape.LineJoint = 4
	oShape.LineStartWidth = 200
	oShape.CharOverline = 0
	oShape.LineStyle = 1
	oShape.LineWidth = 0
	oShape.LayerID = 0
	oShape.CharPosture = 0
	oShape.Title = &quot;ReadText_&quot; &amp; sType
	oShape.Description = fsLookUpTerm(&quot;s_read-text&quot;) &amp; _
			&quot; - &quot; &amp; _
			fsLookUpTerm(&quot;s_speech-synthesis&quot;)
	oShape.Shadow = False
end sub


function fsReleasenotesCMD(_
		optional byval sA)
&apos;&apos;
&apos;&apos; # Making release notes
&apos;&apos; 
&apos;&apos; Each xba script includes up-to-date notes as **markdown** text.
&apos;&apos; To create an *About* document in Linux or OSX, use the terminal 
&apos;&apos; command shown in the input box shown when you run the 
&apos;&apos; `fsReleasenotesCMD` procedure.
&apos;&apos;
&apos;&apos; You can use [Python Markdown][MAHF0] or [Dingus][MAHF1], an 
&apos;&apos; on-line markdown converter, to convert the help file to html.
&apos;&apos; You can use [calibre-ebook][MAHF2] to convert markdown text 
&apos;&apos; to many other formats.
&apos;&apos;
&apos;&apos;  [MAHF0]: https://pypi.python.org/pypi/Markdown
&apos;&apos;  [MAHF1]: https://daringfireball.net/projects/markdown/dingus
&apos;&apos;  [MAHF2]: https://calibre-ebook.com/
&apos;&apos;
&apos;&apos;
&apos;&apos; About Markdown
&apos;&apos; --------------
&apos;&apos;
&apos;&apos; [Markdown](https://daringfireball.net/projects/markdown/) is a
&apos;&apos; simple way to format text for blogs, email, news, education
&apos;&apos; and technical support documentation.
&apos;&apos;
&apos;&apos; There are forks and extensions of the original release.  To
&apos;&apos; provide compatibility across platforms, use plain and simple
&apos;&apos; markdown that is compatible with python-markdown.
&apos;&apos;
&apos;&apos; [Python-markdown](https://pypi.python.org/pypi/Markdown) comes
&apos;&apos; with [calibre-ebook](https://calibre-ebook.com/) or is available
&apos;&apos; on Debian and Ubuntu Linux with:
&apos;&apos;
&apos;&apos;     sudo apt-get install python-markdown
&apos;&apos;
	&apos; sA - Name of xba file to convert
	&apos; - TextToSpeech
	&apos; - ThirdPartyCode
	&apos; - TTS_Config
	&apos; - TTS_Indices
	&apos; - TTS_Utilities
	&apos;
	dim s1 as string
	dim s2 as string
	dim s3 as string
	dim s4 as string
	dim s5
	dim a1
	dim n as integer
	
	if fsGetOS() = &quot;WINDOWS&quot; then
		fsReleasenotesCMD =&quot;&quot;
		exit function
	end if
	s5 = &quot;&quot;
	fsReleasenotesCMD = &quot;&quot;
	if ismissing(sA) then
		sA = &quot;TextToSpeech,ThirdPartyCode,TTS_Config,TTS_Indices,TTS_Utilities&quot;
	end if
	select case sA
	case &quot;ThirdPartyCode&quot;, &quot;TTS_Config&quot;, &quot;TTS_Indices&quot;, &quot;TTS_Utilities&quot;, _
			&quot;TextToSpeech,ThirdPartyCode,TTS_Config,TTS_Indices,TTS_Utilities&quot;
		&apos; ok
	case else
		sA = &quot;TextToSpeech&quot;
	end select
	a1 = split(sA, &quot;,&quot;)
	for n = lbound(a1) to ubound(a1)
		s2 = &quot;&quot;&quot;&quot; &amp; convertfromURL(fsMyURL &amp; &quot;/textToSpeech/&quot; &amp; a1(n) &amp; &quot;.xba&quot;) &amp; &quot;&quot;&quot;&quot;
		s3 = &quot;&quot;&quot;&quot; &amp; convertfromURL(fsGetHomeDir &amp; &quot;&quot; &amp; a1(n) &amp; &quot;.markdown&quot;) &amp; &quot;&quot;&quot;&quot;
		s4 = &quot;&quot;&quot;&quot; &amp; convertfromURL(fsGetHomeDir &amp; &quot;&quot; &amp; a1(n) &amp; &quot;.markdown-e&quot;) &amp; &quot;&quot;&quot;&quot;
		s1 = &quot;cat &quot; &amp; s2 &amp; &quot; | grep &quot;&quot;&amp;apos;&amp;apos;&quot;&quot; &gt; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/&amp;apos;&amp;apos; //g&apos; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/&amp;apos;&amp;apos;//g&apos; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/&amp;quot;/&quot;&quot;/g&apos; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &quot;&quot;s/&amp;apos;/&apos;/g&quot;&quot; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/\&amp;amp;/\&amp;/g&apos; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/\&amp;gt;/\&gt;/g&apos; &quot; &amp; s3 &amp; &quot; ; &quot;  &amp; _ 
				&quot;sed -i -e &apos;s/\&amp;lt;/\&lt;/g&apos; &quot; &amp; s3 &amp; &quot; &quot;
		s5 = inputbox(_
		 		&quot;Create &quot;&quot;&quot; &amp;_
		 		 a1(n) &amp; _
		 		 &quot;.markdown&quot;&quot; using this terminal command (&quot; &amp; _
		 		trim(str(n + 1)) &amp; _
		 		&quot; / &quot; &amp; _
		 		trim(ubound(a1) + 1) &amp; _
		 		&quot;) :&quot; , _
		 		fsLookUpTerm(&quot;s_read-text&quot;), _
		 		s1)
		if s5 = &quot;&quot; then
			exit for
		else
			fsReleasenotesCMD = fsReleasenotesCMD &amp; &quot;;&quot; &amp; s5
			if instr(sA, &quot;,&quot;) &lt; 1 then
				webhelp(converttourl(fsGetHomeDir &amp; _
						a1(lbound(a1)) &amp; _
						&quot;.markdown&quot;))
			end if
		end if
	next	 
end function

sub TextToSpeechCodeDocMarkdown()
	fsReleasenotesCMD(&quot;TextToSpeech&quot;)
end sub

sub ThirdPartyCodeDocMarkdown()
	fsReleasenotesCMD(&quot;ThirdPartyCode&quot;)
end sub

sub TTS_ConfigDocMarkdown()
	fsReleasenotesCMD(&quot;TTS_Config&quot;)
end sub

sub TTS_IndicesDocMarkdown()
	fsReleasenotesCMD(&quot;TTS_Indices&quot;)
end sub

sub TTS_UtilitiesDocMarkdown()
	fsReleasenotesCMD(&quot;TTS_Utilities&quot;)
end sub

sub megaDoc()
	dim a1
	dim s1
	dim n
	
	a1 = Array(_
			&quot;TextToSpeech&quot;,_
			&quot;ThirdPartyCode&quot;,_
			&quot;TTS_Config&quot;,_
			&quot;TTS_Indices&quot;,_
			&quot;TTS_Utilities&quot;)

	&apos; cat 1.txt 2.txt 3.txt &gt; 0.txt	
	s1 = &quot;cat &quot;
	for n = lbound(a1) to ubound(a1)
		s1 = s1 &amp; _
				&quot;&quot;&quot;&quot; &amp; _
				convertfromURL(fsGetHomeDir &amp; _
				a1(n) &amp; _
				&quot;.markdown&quot;) &amp; _
				&quot;&quot;&quot; &quot;
	next
	s1 = s1 &amp; _
			&quot;&gt; &quot; &amp; _
			&quot;&quot;&quot;&quot; &amp; _
			convertfromURL(fsGetHomeDir &amp; _
			&quot;TTS_read-text-all&quot; &amp; _
			&quot;.markdown&quot;) &amp; _
			&quot;&quot;&quot; &quot;
	fsReleasenotesCMD()
	s1 =inputbox(&quot;TTS_read-text-all.markdown: use xCode or gedit to review.&quot;, _
			fsLookUpTerm(&quot;s_read-text&quot;), _
			s1)
	if not(s1 = &quot;&quot;) then
		webhelp(converttourl(fsGetHomeDir &amp; _
				&quot;TTS_read-text-all&quot; &amp; _
				&quot;.markdown&quot;))
	end if		
end sub

</script:module>
